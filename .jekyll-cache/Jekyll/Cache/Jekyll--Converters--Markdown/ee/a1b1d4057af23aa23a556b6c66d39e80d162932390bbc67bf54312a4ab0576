I"Z0<p class="notice--warning">인프런에 있는 홍정모 교수님의 <strong>홍정모의 따라 하며 배우는 C++</strong> 강의를 듣고 정리한 필기입니다. 😀  <br />
<a href="https://www.inflearn.com/course/following-c-plus">🌜 [홍정모의 따라 하며 배우는 C++]강의 들으러 가기!</a></p>

<p><br /></p>

<h1 id="chapter-10-객체들-사이의-관계--제휴-관계">chapter 10. 객체들 사이의 관계 : 제휴 관계</h1>

<table>
  <thead>
    <tr>
      <th style="text-align: center">관계 종류</th>
      <th style="text-align: center">관계를 표현하는 동사</th>
      <th style="text-align: center">관계 형태</th>
      <th style="text-align: center">다른 클래스에 속할 수 있는가?</th>
      <th style="text-align: center">멤버의 존재를 <br /> 클래스가 관리 하는가?</th>
      <th style="text-align: center">방향성</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><strong>연계, 제휴</strong></td>
      <td style="text-align: center">Uses-a</td>
      <td style="text-align: center">용도 외엔 무관</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">No</td>
      <td style="text-align: center">단방향 or <u>양방향</u></td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<h2 id="-제휴-관계-설명">🔔 제휴 관계 설명</h2>

<blockquote>
  <p><strong>Uses-a</strong></p>
</blockquote>

<blockquote>
  <p>환자는 의사로부터 치료를 받고 의사는 환자로부터 치료비를 받는 동등한 입장으로서의 <strong><u>상호 작용 관계</u></strong></p>
</blockquote>

<ul>
  <li>다른 클래스에 속할 수 있는가? : <strong>용도 외엔 무관</strong>
    <ul>
      <li>환자 클래스에서 의사 클래스의 멤버를 사용할 일이 있을 때만 가져다 쓰고 그 외엔 무관하다.</li>
      <li>환자는 <u>여러 의사에게 속할 수 있으며</u> <u>소속하지 않을 수도 있다.</u></li>
      <li>의사는 <u>여러 환자에게 속할 수 있으며</u> <u>소속하지 않을 수도 있다.</u></li>
      <li>환자는 다 나으면 의사를 만날 필요가 없다. 빠질 수도 있음</li>
    </ul>
  </li>
  <li>멤버의 존재를 클래스가 관리 하는가?  : <strong>No</strong>
    <ul>
      <li>다른 클래스에 속하지 않으니 당연한 얘기</li>
    </ul>
  </li>
  <li>단방향, <u>양방향</u>
    <ul>
      <li>환자는 의사로부터 치료를 받고 의사는 환자로부터 치료비를 받는 동등한 입장으로서의 <u>상호 작용 관계</u></li>
      <li>서로가 서로를 제휴하기도 하므로 양방향</li>
      <li>1:1 뿐만 아니라 1:N 도 가능하다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h2 id="-코드">🔔 코드</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">Doctor</span><span class="p">;</span> <span class="c1">// ⭐ 전방 선언</span>

<span class="k">class</span> <span class="nc">Patient</span>
<span class="p">{</span>
<span class="nl">private:</span>
	<span class="n">string</span> <span class="n">m_name</span><span class="p">;</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="n">Doctor</span><span class="o">*&gt;</span> <span class="n">m_doctors</span><span class="p">;</span>  <span class="c1">// 이 환자가 제휴하는 의사들</span>

<span class="nl">public:</span>
	<span class="n">Patient</span><span class="p">(</span><span class="n">string</span> <span class="n">name_in</span><span class="p">)</span>
		<span class="o">:</span> <span class="n">m_name</span><span class="p">(</span><span class="n">name_in</span><span class="p">)</span>
	<span class="p">{}</span>

	<span class="kt">void</span> <span class="n">addDoctor</span><span class="p">(</span><span class="n">Doctor</span> <span class="o">*</span> <span class="n">new_doctor</span><span class="p">)</span>  <span class="c1">// 제휴하는 의사 추가</span>
	<span class="p">{</span>
		<span class="n">m_doctors</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">new_doctor</span><span class="p">);</span>  
	<span class="p">}</span>

	<span class="kt">void</span> <span class="n">meetDoctors</span><span class="p">()</span>  <span class="c1">// 제휴하는 의사들 출력</span>
	<span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span> <span class="n">ele</span> <span class="o">:</span> <span class="n">m_doctors</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Meet doctor : "</span> <span class="o">&lt;&lt;</span> <span class="n">ele</span><span class="o">-&gt;</span><span class="n">m_name</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">friend</span> <span class="k">class</span> <span class="nc">Doctor</span><span class="p">;</span>
<span class="p">};</span>


<span class="k">class</span> <span class="nc">Doctor</span>
<span class="p">{</span>
<span class="nl">private:</span>
	<span class="n">string</span> <span class="n">m_name</span><span class="p">;</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="n">Patient</span><span class="o">*&gt;</span> <span class="n">m_patients</span><span class="p">;</span>  <span class="c1">// 이 의사가 제휴하는 환자들 </span>

<span class="nl">public:</span>
	<span class="n">Doctor</span><span class="p">(</span><span class="n">string</span> <span class="n">name_in</span><span class="p">)</span>
		<span class="o">:</span> <span class="n">m_name</span><span class="p">(</span><span class="n">name_in</span><span class="p">)</span>
	<span class="p">{}</span>

	<span class="kt">void</span> <span class="n">addPatient</span><span class="p">(</span><span class="n">Patient</span> <span class="o">*</span> <span class="n">new_patient</span><span class="p">)</span>  <span class="c1">// 제휴하는 환자들 추가</span>
	<span class="p">{</span>
		<span class="n">m_patients</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">new_patient</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="kt">void</span> <span class="n">meetPatients</span><span class="p">()</span>  <span class="c1">// 제휴하는 환자들 출력</span>
	<span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span> <span class="n">ele</span> <span class="o">:</span> <span class="n">m_patients</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Meet patient : "</span> <span class="o">&lt;&lt;</span> <span class="n">ele</span><span class="o">-&gt;</span><span class="n">m_name</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">friend</span> <span class="k">class</span> <span class="nc">Patient</span><span class="p">;</span> 
<span class="p">};</span>


<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">Patient</span> <span class="o">*</span><span class="n">p1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Patient</span><span class="p">(</span><span class="s">"Jack Jack"</span><span class="p">);</span>
	<span class="n">Patient</span> <span class="o">*</span><span class="n">p2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Patient</span><span class="p">(</span><span class="s">"Dash"</span><span class="p">);</span>
	<span class="n">Patient</span> <span class="o">*</span><span class="n">p3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Patient</span><span class="p">(</span><span class="s">"Violet"</span><span class="p">);</span>

	<span class="n">Doctor</span> <span class="o">*</span><span class="n">d1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Doctor</span><span class="p">(</span><span class="s">"Doctor K"</span><span class="p">);</span>
	<span class="n">Doctor</span> <span class="o">*</span><span class="n">d2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Doctor</span><span class="p">(</span><span class="s">"Doctor L"</span><span class="p">);</span>

	<span class="n">p1</span><span class="o">-&gt;</span><span class="n">addDoctor</span><span class="p">(</span><span class="n">d1</span><span class="p">);</span>
	<span class="n">d1</span><span class="o">-&gt;</span><span class="n">addPatient</span><span class="p">(</span><span class="n">p1</span><span class="p">);</span>

	<span class="n">p2</span><span class="o">-&gt;</span><span class="n">addDoctor</span><span class="p">(</span><span class="n">d2</span><span class="p">);</span>
	<span class="n">d2</span><span class="o">-&gt;</span><span class="n">addPatient</span><span class="p">(</span><span class="n">p2</span><span class="p">);</span>

	<span class="n">p2</span><span class="o">-&gt;</span><span class="n">addDoctor</span><span class="p">(</span><span class="n">d1</span><span class="p">);</span>
	<span class="n">d1</span><span class="o">-&gt;</span><span class="n">addPatient</span><span class="p">(</span><span class="n">p2</span><span class="p">);</span>

	<span class="c1">//patients meet doctors</span>
	<span class="n">p1</span><span class="o">-&gt;</span><span class="n">meetDoctors</span><span class="p">();</span> 

	<span class="c1">//doctors meet patients</span>
	<span class="n">d1</span><span class="o">-&gt;</span><span class="n">meetPatients</span><span class="p">();</span>

	<span class="c1">//delets</span>
	<span class="k">delete</span> <span class="n">p1</span><span class="p">;</span>
	<span class="k">delete</span> <span class="n">p2</span><span class="p">;</span>
	<span class="k">delete</span> <span class="n">p3</span><span class="p">;</span>

	<span class="k">delete</span> <span class="n">d1</span><span class="p">;</span>
	<span class="k">delete</span> <span class="n">d2</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>

</code></pre></div></div>

<ol>
  <li>상호 작용 관계를 위해선 <code class="language-plaintext highlighter-rouge">전방 선언</code>이 필요하다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Patient</code>클래스가 <code class="language-plaintext highlighter-rouge">Doctor</code>클래스보다 먼저 정의되는데,  <code class="language-plaintext highlighter-rouge">Patient</code>클래스 입장에서 <em>addDoctor</em>, <em>meetDoctor</em> 함수 정의시 <code class="language-plaintext highlighter-rouge">Doctor</code>클래스를 알아야 하므로.</li>
    </ul>
  </li>
  <li>두 클래스를 서로의 <code class="language-plaintext highlighter-rouge">friend</code>로 지정해야 한다.
    <ul>
      <li><em>addDoctor</em>, <em>meetDoctor</em>, <em>addPatient</em>, <em>meetPatient</em> 함수에서 서로의 멤버를 사용해야 해서 그냥 클래스 자체를 친구로 지정</li>
    </ul>
  </li>
  <li>또한 동등한 자격으로서 상호작용 하는 두 클래스를 하나의 헤더파일에 정의해야할 것 같다.</li>
</ol>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>

<p><br /></p>
:ET