I"v)<p class="notice--warning">인프런에 있는 홍정모 교수님의 <strong>홍정모의 따라 하며 배우는 C++</strong> 강의를 듣고 정리한 필기입니다. 😀  <br />
<a href="https://www.inflearn.com/course/following-c-plus">🌜 [홍정모의 따라 하며 배우는 C++]강의 들으러 가기!</a></p>

<p><br /></p>

<h1 id="chapter-8-객체-지향의-기초--객체-지향-프로그래밍과-클래스">chapter 8. 객체 지향의 기초 : 객체 지향 프로그래밍과 클래스</h1>

<h2 id="-클래스와-객체">🔔 클래스와 객체</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/85368312-fd0c7d80-b565-11ea-8cdc-4fbead7a773f.png" alt="image" width="70%" height="70%" class="align-center" /></p>

<h3 id="클래스-class">클래스 (Class)</h3>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">클래스</code> : 비슷한 <code class="language-plaintext highlighter-rouge">데이터(멤버 변수)</code>, <code class="language-plaintext highlighter-rouge">기능(멤버 함수)</code>들을 묶어 그룹화 한 것을 클래스라고 한다.</p>
</blockquote>

<p>친구라는 <code class="language-plaintext highlighter-rouge">클래스</code>가 있다면 친구의 공통적인 특성을 나타내는 <code class="language-plaintext highlighter-rouge">데이터</code>와 <code class="language-plaintext highlighter-rouge">기능</code>이 있을 것이다. <code class="language-plaintext highlighter-rouge">데이터</code>라면 친구가 가지는 공통적인 특성, 즉 이름, 주소, 나이, 키, 몸무게 등이 있을 테고 <code class="language-plaintext highlighter-rouge">기능</code>이라면 자기 소개하기, 전화 걸기 등등 이런게 있을 것이다. 그런 공통적인 데이터와 기능들을 모아 <u>추상화</u> 한 것을 <code class="language-plaintext highlighter-rouge">클래스</code>라고 한다. 클래스는 추상화 해놓은 것이고 아직 구체화 되어 메모리 상에 실존하는 것이 아니기 때문에 <u>주소를 찍어볼 수 없다.</u></p>

<h3 id="객체-object">객체 (Object)</h3>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">객체</code> : 이 <code class="language-plaintext highlighter-rouge">클래스</code>를 마치 틀로 찍어내어져서 메모리 상에 실존하게 한 것</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">클래스</code>가 붕어빵 틀이라면 <code class="language-plaintext highlighter-rouge">객체</code>는 붕어빵 틀로 찍어내는 각각의 독립적인 <code class="language-plaintext highlighter-rouge">붕어빵들</code>이다. 친구 클래스에서 “레이첼”, “모니카”, “챈들러”, “피비”라는 실존하는 객체를 찍어낼 수 있다. 객체마다 각각의 데이터 값은 모두 다르다. 친구들 마다 이름, 키, 나이가 다 다르듯이! 또한 <u>각 객체는 서로 독립적이다.</u> 객체는 메모리 상에 실존하는 것이므로 <u>메모리 주소를 찍어볼 수 잇다.</u></p>

<p><br /></p>

<h2 id="-클래스를-사용하는-이유">🔔 클래스를 사용하는 이유</h2>

<p>구조체와 마찬가지로 함수 사용시 매개변수를 많이 넘겨줄 필요가 없다. 객체를 생성한 후 클래스에 묶여있던 그 함수를 호출하면 객체 각각의 멤버 변수를 그대로 사용할 수 있기 때문에 함수에 매개변수를 많이 넘길 필요가 없다.</p>

<p>클래스 &amp; 객체를 쓰지 않을 떈 다음과 같이 코딩했어야 했는데</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">print</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span> <span class="o">&amp;</span><span class="n">name</span><span class="p">,</span> <span class="k">const</span> <span class="n">string</span> <span class="o">&amp;</span><span class="n">address</span><span class="p">,</span>
	<span class="k">const</span> <span class="kt">int</span> <span class="o">&amp;</span><span class="n">age</span><span class="p">,</span> <span class="k">const</span> <span class="kt">double</span> <span class="o">&amp;</span><span class="n">height</span><span class="p">,</span> <span class="k">const</span> <span class="kt">double</span> <span class="o">&amp;</span><span class="n">weight</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">name</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">address</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">age</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">height</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span>
		<span class="o">&lt;&lt;</span> <span class="n">weight</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">print</span><span class="p">(</span><span class="s">"Rachel"</span><span class="p">,</span> <span class="s">"Seoul"</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>  <span class="c1">// 매개변수 많~~~다 </span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>print 함수를 Friend 라는 이름의 클래스에 넣어주면 매개변수가 많이 필요 없다. 멤버 변수들을 그대로 가져와 사용하면 되니까! 아래와 같이 훨씬 깔끔해진다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Friend</span>
<span class="p">{</span>
<span class="nl">public:</span>
	<span class="n">string</span> <span class="n">_name</span><span class="p">;</span>
	<span class="n">string</span> <span class="n">_address</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">_age</span><span class="p">;</span>
	<span class="kt">double</span> <span class="n">_height</span><span class="p">;</span>
	<span class="kt">double</span> <span class="n">_weight</span><span class="p">;</span>

	<span class="kt">void</span> <span class="n">print</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">_name</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">_address</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">_age</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">_height</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span>
			<span class="o">&lt;&lt;</span> <span class="n">_weight</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">};</span>


<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">Friend</span> <span class="n">rachel</span><span class="p">;</span>

    <span class="n">rachel</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">"Rachel"</span><span class="p">;</span>
    <span class="n">rachel</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">"Seoul"</span><span class="p">;</span>
    <span class="n">rachel</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
    <span class="n">rachel</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="mi">30</span><span class="p">;</span>
    <span class="n">rachel</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>


	<span class="n">rachel</span><span class="p">.</span><span class="n">print</span><span class="p">();</span>   <span class="c1">// 깔끔! </span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="-클래스와-구조체의-차이점">🔔 클래스와 구조체의 차이점</h2>

<ul>
  <li>둘 다 공통된, 연관된 것들을 묶어놓은 틀이라는 점에서 비슷하지만</li>
  <li><code class="language-plaintext highlighter-rouge">Structure</code>
    <ul>
      <li>주로 데이터(멤버 변수)만 넣는다.</li>
      <li>C++에서는 구조체에도 함수를 넣을 수 있긴 하지만 C에서는 안된다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Class</code>
    <ul>
      <li>접근 지정자를 가진다.
        <ul>
          <li>public, private 같이 멤버 변수와 함수에 접근 가능 정도를 설정할 수 있다.</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">데이터</code>(멤버변수)와 <code class="language-plaintext highlighter-rouge">기능</code>(멤버함수)을 가진다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h2 id="-java-와-다른점">🔔 Java 와 다른점</h2>
<p>Java 에선 객체 생성시 <code class="language-plaintext highlighter-rouge">new</code>를 썼어야 했는데 C++의 경우에는 매개변수 없는 기본 생성자를 소환한다면 그냥 <code class="language-plaintext highlighter-rouge">Friend f;</code> 이렇게만 써도 객체 생성이 된다. <del>new가 없어서 헷갈렸음(은 내 얘기)</del></p>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET