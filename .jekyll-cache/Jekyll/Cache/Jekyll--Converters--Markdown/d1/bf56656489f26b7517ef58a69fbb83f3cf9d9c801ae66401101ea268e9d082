I"D#<p class="notice--warning">인프런에 있는 홍정모 교수님의 <strong>홍정모의 따라 하며 배우는 C++</strong> 강의를 듣고 정리한 필기입니다. 😀  <br />
<a href="https://www.inflearn.com/course/following-c-plus">🌜 [홍정모의 따라 하며 배우는 C++]강의 들으러 가기!</a></p>

<p><br /></p>

<h2 id="참조-변수-int-">참조 변수 <code class="language-plaintext highlighter-rouge">int &amp;</code></h2>

<ul>
  <li>포인터보다 사용하기 편하다.</li>
  <li><code class="language-plaintext highlighter-rouge">별명</code>이라고 생각하자.</li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>

<span class="kt">int</span> <span class="o">*</span><span class="n">ptr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">value</span><span class="p">;</span> <span class="c1">// 포인터</span>

<span class="kt">int</span> <span class="o">&amp;</span><span class="n">ref</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span> <span class="c1">// ❤참조❤</span>

<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">&amp;</span><span class="n">value</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> 
<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">&amp;</span><span class="n">ref</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>  
<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ptr</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="c1">// 출력되는 값이 모두 같다.</span>
</code></pre></div></div>

<p>포인터 : <code class="language-plaintext highlighter-rouge">int *ptr = &amp;value;</code></p>
<ul>
  <li>포인터 ptr이 value 변수의 주소 값을 가짐</li>
</ul>

<p><u>참조</u> : <code class="language-plaintext highlighter-rouge">int &amp; ref = value;</code></p>
<ul>
  <li>참조 변수 ref는 value 변수의 또 다른 별명이 된다.</li>
  <li><code class="language-plaintext highlighter-rouge">ref</code>는 이제 <code class="language-plaintext highlighter-rouge">value</code>가 잡고 있는 <u>메모리를 같이 사용한다.</u>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">&amp;ref = </code>value`</li>
    </ul>
  </li>
  <li>이제 <code class="language-plaintext highlighter-rouge">ref = 10</code> 하면 value도 10으로 바뀐다.</li>
</ul>

<p>참조 변수는 <u>반드시 선언과 동시에 별명이 될 변수로 초기화가 필요되야 한다</u></p>
<ul>
  <li>어떤 변수의 별명이 될지 정해주어야 함.
    <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="o">&amp;</span> <span class="n">ref</span><span class="p">;</span> <span class="c1">// ❌ 초기화를 해주어야 한다.</span>
<span class="kt">int</span> <span class="o">&amp;</span> <span class="n">ref</span> <span class="o">=</span> <span class="mi">123</span><span class="p">;</span> <span class="c1">// ❌ 변수로 초기화가 되어야한다. 별명이 될 변수.</span>

<span class="k">const</span> <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span>
<span class="kt">int</span> <span class="o">&amp;</span> <span class="n">ref</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span> <span class="c1">// ❌ x는 const 상수이므로 ref가 x의 값을 바꿀 우려가 있어 상수를 참조하는건 금지됨.</span>
<span class="k">const</span> <span class="kt">int</span> <span class="o">&amp;</span> <span class="n">ref</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span> <span class="c1">// ⭕ ref도 값을 못바꾸게 const로 설정해버리면 상수인 x를 참조할 수 있다.</span>
</code></pre></div>    </div>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;cstring&gt;
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span>
    
    <span class="kt">int</span> <span class="o">&amp;</span> <span class="n">ref</span> <span class="o">=</span> <span class="n">a</span><span class="p">;</span>  <span class="c1">// ref는 a의 별명이 된다.</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ref</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="c1">// 1 출력</span>
    
    <span class="n">ref</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>  <span class="c1">// ref는 이제 b의 별명이 된다. </span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ref</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="c1">// 9 출력</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="참조에-의한-인수-전달">참조에 의한 인수 전달</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">doSomething</span><span class="p">(</span><span class="kt">int</span> <span class="o">&amp;</span><span class="n">n</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">n</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"In doSomething "</span> <span class="o">&lt;&lt;</span> <span class="n">n</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
    <span class="n">doSomething</span><span class="p">(</span><span class="n">n</span><span class="p">);</span> <span class="c1">// n이 10으로 바뀐다</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">n</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="c1">// 10 출력</span>
<span class="p">}</span>
</code></pre></div></div>

<p>n을 doSomething의 매개변수 int &amp; n 에 넘긴다.
이제 doSomething의 매개변수 n은 main의 n의 별명이 된다. 따라서 doSomething의 매개변수 타입이 int &amp; 이 아닌 그냥 int 였다면 doSomething 안에서 n = 10 해주어도 main의 n엔 변화가 없지만 참조중이기 때문에 main의 n도 10으로 값이 바뀐다.</p>

<p><br /></p>

<h2 id="배열-참조">배열 참조</h2>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">arr</span> <span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">};</span>
<span class="kt">int</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">arr</span><span class="p">)[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="n">arr</span><span class="p">;</span>
</code></pre></div></div>

<p>배열을 참조하는 변수는 <code class="language-plaintext highlighter-rouge">int (&amp;arr)[5]</code> 이런식으로 쓴다. 배열 크기 [] 안에 꼭 써주어야 함!</p>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET