I"h<h2 id="-c에서의-const">🚀 C에서의 const</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">const</span> <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="n">size</span><span class="p">];</span>  <span class="c1">// ❌ C에선 안된다.</span>
</code></pre></div></div>

<blockquote>
  <p>C 언어에서 <code class="language-plaintext highlighter-rouge">const</code>는 런타임 상수이다.</p>
</blockquote>

<ul>
  <li>런타임 상수라는 의미는 <code class="language-plaintext highlighter-rouge">const</code>인 <code class="language-plaintext highlighter-rouge">size</code> 공간 안에 2 가 할당 되는 것은 컴파일까지 다 마친 후 프로그램이 실행 될 때 이루어진다는 것이다.</li>
  <li>C언어에서는 <code class="language-plaintext highlighter-rouge">const</code>가 오로지 런타임 상수이기 때문에 <code class="language-plaintext highlighter-rouge">const</code>로 배열의 크기를 결정할 수 없다.</li>
</ul>

<p><br /></p>

<h2 id="-c에서의-const-1">🚀 C++에서의 const</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">const</span> <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>     <span class="c1">// 👉 이땐 컴파일 상수</span>
<span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="n">size</span><span class="p">];</span>          <span class="c1">// ⭕ C++ 에선 가능하다. </span>

<span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>   <span class="c1">// 👉 이땐 런타임 상수</span>
<span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="n">size</span><span class="p">];</span>          <span class="c1">// ❌ 불가능.</span>
</code></pre></div></div>

<blockquote>
  <p>C++ 언어에서 <code class="language-plaintext highlighter-rouge">const</code>는 맥락에 따라 컴파일 상수도 될 수도 있고 런타임 상수도 될 수 있다.</p>
</blockquote>

<ul>
  <li>C++에서는 초기화 될 때 그 Value 가 어떤 타임에 결정되는 것이냐에 따라 컴파일 상수가 될지 런타임 상수가 될지 결정 되는 듯하다.</li>
  <li>아무튼 C++ 에서는 <code class="language-plaintext highlighter-rouge">const</code>가 런타임에도 결정될 수 있고 컴파일 타임에도 결정될 수 있다.</li>
</ul>

<p><br /></p>

<h3 id="--constexpr">✈  constexpr</h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">constexpr</span> <span class="kt">int</span> <span class="nf">my_const</span><span class="p">(</span><span class="mi">123</span><span class="p">);</span>    <span class="c1">// ⭕</span>

<span class="kt">int</span> <span class="n">number</span><span class="p">;</span>
<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">number</span><span class="p">;</span>
<span class="k">constexpr</span> <span class="kt">int</span> <span class="nf">my_const2</span><span class="p">(</span><span class="n">number</span><span class="p">);</span>  <span class="c1">// ❌ error !</span>
</code></pre></div></div>

<blockquote>
  <p>C++ 에서 <code class="language-plaintext highlighter-rouge">constexpr</code>을 사용하면 컴파일타임 상수라는 의미이다.</p>
</blockquote>

<p>그래서 C++ 에는 <code class="language-plaintext highlighter-rouge">constexpr</code>라는 것이 존재한다. <code class="language-plaintext highlighter-rouge">const</code>가 런타임에도 컴파일 타임에도 결정될 수 있기 때문에 얘가 등장한 것 같다. 컴파일 타임 상수라는 것을 확실히 할 수 있는 키워드다.</p>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET