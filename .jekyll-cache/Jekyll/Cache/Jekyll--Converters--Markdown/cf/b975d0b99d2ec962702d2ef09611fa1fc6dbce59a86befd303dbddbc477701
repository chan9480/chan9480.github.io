I"j*<p class="notice--warning">인프런에 있는 홍정모 교수님의 <strong>홍정모의 따라 하며 배우는 C++</strong> 강의를 듣고 정리한 필기입니다. 😀  <br />
<a href="https://www.inflearn.com/course/following-c-plus">🌜 [홍정모의 따라 하며 배우는 C++]강의 들으러 가기!</a></p>

<p><br /></p>

<h1 id="chapter-17-stdstring-문자열-클래스">chapter 17. std::string 문자열 클래스</h1>

<h1 id="string-대입-교환-덧붙이기-삽입">string 대입, 교환, 덧붙이기, 삽입</h1>

<h2 id="-대입">🔔 대입</h2>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">=</code>, <code class="language-plaintext highlighter-rouge">assign</code></p>
</blockquote>

<h3 id="assign">assign</h3>

<blockquote>
  <p>인수로 들어온 string을 자기 자신에게 대입한 후 자기 자신의 레퍼런스를 리턴한다.</p>
</blockquote>

<ul>
  <li><code class="language-plaintext highlighter-rouge">str2.assign(str1)</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">str1</code> string을 <code class="language-plaintext highlighter-rouge">str2</code>에 대입한다.</li>
    </ul>
  </li>
  <li>assign 뒤에 append 붙여 문자열을 계속 덧붙일 수도 있다.
    <ul>
      <li><em>str2.assign(“two”).append(“ “).append(“three “).append(“Four.”);</em>
        <ul>
          <li>“two three Four” 가 <code class="language-plaintext highlighter-rouge">str2</code>에 대입될 것.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="https://ansohxxn.github.io/cpp/chapter17-2/">17.2 포스트</a>에서 배운 여러가지 string 생성자처럼 asssign도 매개변수 형태가 다양하다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">assign("two", 1)</code> “two”의 1글자 이후부터 대입 시작</li>
    </ul>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;string&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">string</span> <span class="n">str1</span><span class="p">(</span><span class="s">"one"</span><span class="p">);</span>

	<span class="n">string</span> <span class="n">str2</span><span class="p">;</span>
	<span class="n">str2</span> <span class="o">=</span> <span class="n">str1</span><span class="p">;</span>
	<span class="n">str2</span> <span class="o">=</span> <span class="s">"two"</span><span class="p">;</span>
	<span class="n">str2</span><span class="p">.</span><span class="n">assign</span><span class="p">(</span><span class="s">"two"</span><span class="p">);</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">str2</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="-교환">🔔 교환</h2>

<h3 id="swap">swap</h3>

<ol>
  <li><code class="language-plaintext highlighter-rouge">std::swap(a, b)</code>를 사용하거나</li>
  <li><code class="language-plaintext highlighter-rouge">std::string</code>의 함수 <code class="language-plaintext highlighter-rouge">swap</code> 사용
    <ul>
      <li><code class="language-plaintext highlighter-rouge">str1.swap(str2)</code></li>
    </ul>
  </li>
</ol>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;string&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">string</span> <span class="n">str1</span><span class="p">(</span><span class="s">"one"</span><span class="p">);</span>
	<span class="n">string</span> <span class="n">str2</span><span class="p">(</span><span class="s">"two"</span><span class="p">);</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">str1</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">str2</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>  <span class="c1">// one two</span>

	<span class="n">std</span><span class="o">::</span><span class="n">swap</span><span class="p">(</span><span class="n">str1</span><span class="p">,</span> <span class="n">str2</span><span class="p">);</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">str1</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">str2</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>  <span class="c1">// two one</span>

	<span class="n">str1</span><span class="p">.</span><span class="n">swap</span><span class="p">(</span><span class="n">str2</span><span class="p">);</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="-덧붙이기">🔔 덧붙이기</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;string&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">string</span> <span class="n">str1</span><span class="p">(</span><span class="s">"one"</span><span class="p">);</span>  <span class="c1">// str1 = "one"</span>
	<span class="n">string</span> <span class="n">str2</span><span class="p">(</span><span class="s">"two"</span><span class="p">);</span>  <span class="c1">// str2 = "two"</span>

	<span class="n">str1</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"three"</span><span class="p">);</span>  <span class="c1">// str1 = "onethree" </span>
	<span class="n">str1</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="sc">'A'</span><span class="p">);</span>  <span class="c1">// str1 = "onethreeA"</span>
	<span class="n">str1</span> <span class="o">+=</span> <span class="s">"three"</span><span class="p">;</span>    <span class="c1">// str1 = "onethreeAthree"</span>

	<span class="n">str2</span> <span class="o">=</span> <span class="n">str1</span> <span class="o">+</span> <span class="s">"four"</span><span class="p">;</span>  <span class="c1">// str2 = "onethreeAthreefour"</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">str1</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="c1">// "onethreeAthree" 출력</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">str2</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="c1">// "onethreeAthreefour" 출력</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="append">append</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">str1.append(str2)</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">str2</code>를 <code class="language-plaintext highlighter-rouge">str1</code>의 <u>뒤에 덧붙인다</u></li>
    </ul>
  </li>
  <li>string 생성자처럼 여러 형태로 매개변수 받을 수 있음.</li>
</ul>

<h3 id="push_back">push_back</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">str.push_back(char)</code>
    <ul>
      <li>vector같이 쓰는거라서 <u>문자열의 맨 끝에</u> + <u>인수로 들어간 문자 1개를 덧붙이는</u> 형태만 붙일 수 있다.
        <ul>
          <li>str1.push_back(‘A’);   ⭕</li>
          <li>str1.push_back(“AB”);  ❌</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3>+</h3>

<ul>
  <li>문자열끼리 <code class="language-plaintext highlighter-rouge">+</code>연산하면 뒤에 덧붙일 수 있다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">str1 + str2</code> 👉🏻 <code class="language-plaintext highlighter-rouge">str1</code> 뒤에 <code class="language-plaintext highlighter-rouge">str2</code>이 덧붙는다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h2 id="-삽입">🔔 삽입</h2>

<h3 id="insert">insert</h3>

<ul>
  <li>insert ( 정수, 문자열 )  : 해당 정수 인덱스 위치에 문자열을 삽입한다.
    <ul>
      <li>str.insert(2, “bbb”);
string 생성자처럼 여러 형태로 매개변수 받을 수 있음.</li>
    </ul>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;string&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">string</span> <span class="n">str</span><span class="p">(</span><span class="s">"aaaa"</span><span class="p">);</span> 

	<span class="n">str</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">"bbb"</span><span class="p">);</span>   <span class="c1">// 인덱스2 자리에 bbb 삽입</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">str</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>  <span class="c1">// "aabbbaa" 출력</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a>
<br /></p>
:ET