I"U><p class="notice--warning">인프런에 있는 홍정모 교수님의 <strong>홍정모의 게임 만들기 연습 문제 패키지</strong> 강의를 듣고 정리한 필기입니다.😀 <br />
<a href="https://github.com/jmhong-simulation/GameDevPracticePackage">🌜 공부에 사용된 홍정모 교수님의 코드들 보러가기</a> <br />
<a href="https://www.inflearn.com/course/c-2">🌜 [홍정모의 게임 만들기 연습 문제 패키지] 강의 들으러 가기!</a></p>

<p><br /></p>

<h1 id="chapter-1-기본-기능-구현">Chapter 1. 기본 기능 구현</h1>
<h1 id="13-상호작용-맛보기---키보드-입력과-반응">1.3 상호작용 맛보기 - 키보드 입력과 반응</h1>

<h2 id="-tankexampleh-코드-설명"><code class="language-plaintext highlighter-rouge">📃 TankExample.h</code> 코드 설명</h2>

<ul>
  <li>class 3개
    <ol>
      <li>MyTank
        <ul>
          <li>탱크 객체를 찍어낼 클래스</li>
        </ul>
      </li>
      <li>MyBullet
        <ul>
          <li>총알 객체를 찍어낼 클래스</li>
        </ul>
      </li>
      <li>TankExample
        <ul>
          <li>Game2D를 상속받으며 update함수를 가지고 있다.</li>
          <li>게임을 실행시킴</li>
        </ul>
      </li>
    </ol>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#pragma once
</span>
<span class="cp">#include "Game2D.h"
</span>
<span class="k">namespace</span> <span class="n">jm</span>
<span class="p">{</span>
	<span class="k">class</span> <span class="nc">MyTank</span> <span class="c1">// 탱크 클래스</span>
	<span class="p">{</span>
	<span class="nl">public:</span>
		<span class="n">vec2</span> <span class="n">center</span> <span class="o">=</span> <span class="n">vec2</span><span class="p">(</span><span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span> <span class="c1">// ⭐ 탱크의 현재 위치 (처음엔 원점. 사용자의 키보드 조작에 따라 계속 갱신될 것)</span>

		<span class="kt">void</span> <span class="n">draw</span><span class="p">()</span>  <span class="c1">// 탱크를 그리는 함수.</span>
		<span class="p">{</span>
			<span class="n">beginTransformation</span><span class="p">();</span>  
			<span class="p">{</span>
				<span class="n">translate</span><span class="p">(</span><span class="n">center</span><span class="p">);</span>                          <span class="c1">// 실행순서 &lt;6&gt;. ✨ body는 'center'로, barrel은 'center + (0.13f, 0.1f)'로, turret은 'center + (-0.02f, 0.1f)'로 이동한다.</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">green</span><span class="p">,</span> <span class="mf">0.25</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span> <span class="c1">// 실행순서 &lt;1&gt;. body를 그린다.</span>
				<span class="n">translate</span><span class="p">(</span><span class="o">-</span><span class="mf">0.02</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>                    <span class="c1">// 실행순서 &lt;5&gt;. ✨ barrel은 (0.13f, 0.1f)로, turret은 (-0.02f, 0.1f)로 이동한다.</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">blue</span><span class="p">,</span> <span class="mf">0.15</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.09</span><span class="n">f</span><span class="p">);</span> <span class="c1">// 실행순서 &lt;2&gt;. turret을 그린다.</span>
				<span class="n">translate</span><span class="p">(</span><span class="mf">0.15</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>                     <span class="c1">// 실행순서 &lt;4&gt;. ✨ barrel이 (0.15f, 0.0f)로 이동한다.</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">,</span> <span class="mf">0.15</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.03</span><span class="n">f</span><span class="p">);</span>  <span class="c1">// 실행순서 &lt;3&gt;. barrel을 그린다.</span>
			<span class="p">}</span>
			<span class="n">endTransformation</span><span class="p">();</span>
		<span class="p">}</span>
	<span class="p">};</span>

	<span class="k">class</span> <span class="nc">MyBullet</span> <span class="c1">// 총알 클래스</span>
	<span class="p">{</span>
	<span class="nl">public:</span>
		<span class="n">vec2</span> <span class="n">center</span> <span class="o">=</span> <span class="n">vec2</span><span class="p">(</span><span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>   <span class="c1">// ⭐총알의 현재 위치 (처음엔 원점. 시간에 따라 계속 갱신될 것)</span>
		<span class="n">vec2</span> <span class="n">velocity</span> <span class="o">=</span> <span class="n">vec2</span><span class="p">(</span><span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span> <span class="c1">// ⭐총알의 속도</span>

		<span class="kt">void</span> <span class="n">draw</span><span class="p">()</span>  <span class="c1">// 총알 그리는 함수.</span>
		<span class="p">{</span>
			<span class="n">beginTransformation</span><span class="p">();</span>
			<span class="n">translate</span><span class="p">(</span><span class="n">center</span><span class="p">);</span>  <span class="c1">// 실행순서 &lt;3&gt;. 아래 두 도형이 함께 평행이동한다.</span>
			<span class="n">drawFilledRegularConvexPolygon</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">yellow</span><span class="p">,</span> <span class="mf">0.02</span><span class="n">f</span><span class="p">,</span> <span class="mi">8</span><span class="p">);</span> <span class="c1">// 실행순서 &lt;1&gt;.</span>
			<span class="n">drawWiredRegularConvexPolygon</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="mf">0.02</span><span class="n">f</span><span class="p">,</span> <span class="mi">8</span><span class="p">);</span> <span class="c1">// 실행순서 &lt;2&gt;.</span>
			<span class="n">endTransformation</span><span class="p">();</span>
		<span class="p">}</span>

		<span class="kt">void</span> <span class="n">update</span><span class="p">(</span><span class="k">const</span> <span class="kt">float</span><span class="o">&amp;</span> <span class="n">dt</span><span class="p">)</span>  <span class="c1">// ⭐ 총알의 위치인 center 값을 시간마다 업데이트 한다.(이 update 함수는 MyBullet 자체의 함수)</span>
		<span class="p">{</span>
			<span class="n">center</span> <span class="o">+=</span> <span class="n">velocity</span> <span class="o">*</span> <span class="n">dt</span><span class="p">;</span>  <span class="c1">// ⭐ 총알의 위치가 '속도 * 시간'에 따라 바뀜. dt는 시간 간격이 됨</span>
		<span class="p">}</span>  
	<span class="p">};</span>

	<span class="k">class</span> <span class="nc">TankExample</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Game2D</span> <span class="c1">// 게임을 실행시킬 클래스. Game2D를 상속 받음.</span>
	<span class="p">{</span>
	<span class="nl">public:</span>
		<span class="n">MyTank</span> <span class="n">tank</span><span class="p">;</span>

		<span class="n">MyBullet</span> <span class="o">*</span><span class="n">bullet</span> <span class="o">=</span> <span class="nb">nullptr</span><span class="p">;</span>  <span class="c1">// bullet은 총알이 발사 됐을 때만 존재하기 때문에 포인터로 되어있고 null 포인터로 초기화한다.</span>

	<span class="nl">public:</span>
		<span class="n">TankExample</span><span class="p">()</span>
			<span class="o">:</span> <span class="n">Game2D</span><span class="p">(</span><span class="s">"This is my digital canvas!"</span><span class="p">,</span> <span class="mi">1024</span><span class="p">,</span> <span class="mi">768</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
		<span class="p">{}</span>

		<span class="o">~</span><span class="n">TankExample</span><span class="p">()</span>   <span class="c1">// ⭐ 소멸자 !! nullptr 아닐때만 총알 객체 동적 메모리를 delete 시켜주는 역할을 한다.</span>
		<span class="p">{</span>
			<span class="k">if</span><span class="p">(</span><span class="n">bullet</span> <span class="o">!=</span> <span class="nb">nullptr</span><span class="p">)</span> <span class="k">delete</span> <span class="n">bullet</span><span class="p">;</span>
		<span class="p">}</span>

        <span class="c1">// update() 은 run 안에서 ⭐무한루프⭐로 돌아가니까 아래 키들이 눌렸는지 매 프레임마다 계속 체크한다.</span>
        <span class="c1">// Game2D의 update함수 오버라이딩. 메인 무한 루프를 돌리는 run()안에서 호출된다.</span>
		<span class="kt">void</span> <span class="n">update</span><span class="p">()</span> <span class="k">override</span>  
		<span class="p">{</span>

			<span class="c1">// ⭐ 탱크 이동 ! 키보드 방향키에 따라 부드럽게 움직이도록 한칸 * 1/60 만큼 움직이게.</span>
            <span class="c1">// getTimeStep() 함수는 Game2D에 있는 함수로 상속받아 사용할 수 있게 된 함수다. 프레임을 리턴함.</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">isKeyPressed</span><span class="p">(</span><span class="n">GLFW_KEY_LEFT</span><span class="p">))</span>	<span class="n">tank</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">-=</span> <span class="mf">0.5</span><span class="n">f</span> <span class="o">*</span> <span class="n">getTimeStep</span><span class="p">();</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">isKeyPressed</span><span class="p">(</span><span class="n">GLFW_KEY_RIGHT</span><span class="p">))</span>	<span class="n">tank</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="mf">0.5</span><span class="n">f</span> <span class="o">*</span> <span class="n">getTimeStep</span><span class="p">();</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">isKeyPressed</span><span class="p">(</span><span class="n">GLFW_KEY_UP</span><span class="p">))</span>		<span class="n">tank</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">0.5</span><span class="n">f</span> <span class="o">*</span> <span class="n">getTimeStep</span><span class="p">();</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">isKeyPressed</span><span class="p">(</span><span class="n">GLFW_KEY_DOWN</span><span class="p">))</span>	<span class="n">tank</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">-=</span> <span class="mf">0.5</span><span class="n">f</span> <span class="o">*</span> <span class="n">getTimeStep</span><span class="p">();</span>


			<span class="c1">// ⭐ 포탄 발사 ! 포탄을 발사하는건 곧 포탄을 생성한다는 것. 스페이스바 누르면 발사</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">isKeyPressedAndReleased</span><span class="p">(</span><span class="n">GLFW_KEY_SPACE</span><span class="p">))</span> 
			<span class="p">{</span>
				<span class="n">bullet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MyBullet</span><span class="p">;</span>           <span class="c1">// ⭐ 포탄 생성</span>
				<span class="n">bullet</span><span class="o">-&gt;</span><span class="n">center</span> <span class="o">=</span> <span class="n">tank</span><span class="p">.</span><span class="n">center</span><span class="p">;</span>    <span class="c1">// ⭐ 탱크의 현재위치로 총알 현재위치가 정해짐 (탱크에서 발사되니까 )</span>
				<span class="n">bullet</span><span class="o">-&gt;</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">;</span>        <span class="c1">// ⭐ 그래도 발포하는 곳에서 발사될 수 있게 위치 조정</span>
				<span class="n">bullet</span><span class="o">-&gt;</span><span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">;</span>
				<span class="n">bullet</span><span class="o">-&gt;</span><span class="n">velocity</span> <span class="o">=</span> <span class="n">vec2</span><span class="p">(</span><span class="mf">2.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>  <span class="c1">// ⭐ 속도 지정. </span>
			<span class="p">}</span>

            <span class="c1">// 시간에 따라 총알의 위치를 업뎃한다. </span>
			<span class="k">if</span> <span class="p">(</span><span class="n">bullet</span> <span class="o">!=</span> <span class="nb">nullptr</span><span class="p">)</span> <span class="n">bullet</span><span class="o">-&gt;</span><span class="n">update</span><span class="p">(</span><span class="n">getTimeStep</span><span class="p">());</span> 
            <span class="c1">// ⭐ dt는 getTimeStep()의 리턴값이 된다. ( 1/60 )</span>
            <span class="c1">// ⭐ if ( bullet != nullptr ) 로 nullptr 체크 안하고 그냥 bullet-&gt;update 호출해버리면 런타임 에러가 발생한다. </span>
            <span class="c1">// 왜냐하면 스페이스 누르기 전까진 bullet이 nullptr이라 아무것도 가리키고 있지 않은데 (총알 객체가 없는데) update을 호출 하려고 할테니까</span>

			<span class="c1">// rendering</span>
			<span class="n">tank</span><span class="p">.</span><span class="n">draw</span><span class="p">();</span> <span class="c1">// ⭐ 탱크 그리기</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">bullet</span> <span class="o">!=</span> <span class="nb">nullptr</span><span class="p">)</span> <span class="n">bullet</span><span class="o">-&gt;</span><span class="n">draw</span><span class="p">();</span> <span class="c1">// ⭐ 총알은 포인터라 nullptr이 아닐때만 draw하기.</span>
		<span class="p">}</span>
	<span class="p">};</span>
<span class="p">}</span>

</code></pre></div></div>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET