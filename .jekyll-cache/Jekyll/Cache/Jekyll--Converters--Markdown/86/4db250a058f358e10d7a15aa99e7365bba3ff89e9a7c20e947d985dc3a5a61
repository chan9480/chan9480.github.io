I"ԣ<p class="notice--warning">인프런에 있는 홍정모 교수님의 <strong>홍정모의 게임 만들기 연습 문제 패키지</strong> 강의를 듣고 정리한 필기입니다.😀 <br />
<a href="https://github.com/jmhong-simulation/GameDevPracticePackage">🌜 공부에 사용된 홍정모 교수님의 코드들 보러가기</a> <br />
<a href="https://www.inflearn.com/course/c-2">🌜 [홍정모의 게임 만들기 연습 문제 패키지] 강의 들으러 가기!</a></p>

<p><br /></p>

<h1 id="chapter-2-객체-지향으로-가는-길">Chapter 2. 객체 지향으로 가는 길</h1>
<h1 id="21-객체-지향--클래스와-캡슐화">2.1 객체 지향 : 클래스와 캡슐화</h1>

<p>3개의 집을 그려보자.</p>

<h2 id="1-비슷한-코드의-단순-반복으로-그리기">1. 비슷한 코드의 “단순 반복”으로 그리기</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/84805704-a53eb580-b03f-11ea-8e4b-590670c34ed4.png" alt="image" width="70%" height="70%" class="align-center" /></p>

<ul>
  <li>아래는 사진 속 집 3개를 그리는 코드이다.
    <ul>
      <li>집 그리는 똑같은 코드를 3번 반복해서 집을 3개 그리니 <u>너무 복잡</u>하고 가독성도 떨어지고 해당 집의 코드를 찾기도 힘들다.</li>
    </ul>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include "Game2D.h"
#include "Examples/PrimitivesGallery.h"
#include "RandomNumberGenerator.h"
</span>
<span class="k">namespace</span> <span class="n">jm</span>
<span class="p">{</span>
	<span class="k">class</span> <span class="nc">Example</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Game2D</span>
	<span class="p">{</span>                                
	<span class="nl">public:</span>
		<span class="kt">void</span> <span class="n">update</span><span class="p">()</span> <span class="k">override</span>
		<span class="p">{</span>
			<span class="c1">// 왼쪽 집 그리기</span>
			<span class="n">beginTransformation</span><span class="p">();</span>
			<span class="p">{</span>
				<span class="n">rotate</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
				<span class="c1">// wall</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">yellow</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">);</span>

				<span class="c1">// roof</span>
				<span class="n">drawFilledTriangle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>
				<span class="n">drawWiredTriangle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>

				<span class="c1">// window</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">skyblue</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
				<span class="n">drawWiredBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
				<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.05</span><span class="n">f</span> <span class="p">});</span>
				<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">});</span>

			<span class="p">}</span>
			<span class="n">endTransformation</span><span class="p">();</span>

			<span class="c1">// 가운데 집 그리기</span>
			<span class="n">beginTransformation</span><span class="p">();</span>
			<span class="p">{</span>
				<span class="n">translate</span><span class="p">(</span><span class="mf">0.5</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>
				<span class="c1">// wall</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">yellow</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">);</span>

				<span class="c1">// roof</span>
				<span class="n">drawFilledTriangle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>
				<span class="n">drawWiredTriangle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>

				<span class="c1">// window</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">skyblue</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
				<span class="n">drawWiredBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
				<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.05</span><span class="n">f</span> <span class="p">});</span>
				<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">});</span>

			<span class="p">}</span>
			<span class="n">endTransformation</span><span class="p">();</span>

            <span class="c1">// 오른쪽 집 그리기</span>
			<span class="n">beginTransformation</span><span class="p">();</span>
			<span class="p">{</span>
				<span class="n">translate</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>
				<span class="c1">// wall</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">yellow</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">);</span>

				<span class="c1">// roof</span>
				<span class="n">drawFilledTriangle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>
				<span class="n">drawWiredTriangle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>

				<span class="c1">// window</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">skyblue</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
				<span class="n">drawWiredBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
				<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.05</span><span class="n">f</span> <span class="p">});</span>
				<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">});</span>

			<span class="p">}</span>
			<span class="n">endTransformation</span><span class="p">();</span>
		<span class="p">}</span>
	<span class="p">};</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">jm</span><span class="o">::</span><span class="n">Example</span><span class="p">().</span><span class="n">run</span><span class="p">();</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="2-함수-사용--반복되는-부분들은-함수로-묶기">2. “함수” 사용 : 반복되는 부분들은 함수로 묶기</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/84806516-cd7ae400-b040-11ea-8aae-2b0696ff4277.png" alt="image" width="70%" height="70%" class="align-center" /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">void drawHouse()</code></li>
  <li>반복 되는 부분을 <code class="language-plaintext highlighter-rouge">함수</code>로만 묶어 사용해도 훨씬 깔끔해진다</li>
  <li>집 3개를 함수 써서 깔끔한 코드로 만들 수 있다.</li>
  <li>집 그리는 코드 3번 반복할 필요 x</li>
  <li>매개변수 값을 다르게 하여 각각 조금씩 다른 모양으로 그릴 수 있다.</li>
  <li>단, <code class="language-plaintext highlighter-rouge">함수</code>로 해결하는 것의 <u>단점</u>
    <ul>
      <li>다르게 하고 싶은 부분이 있을 때마다 파라미터를 계속해서 추가해야 해서
        <ul>
          <li>오히려 함수가 점점 복잡해진다.
            <ul>
              <li>각각 다르게 하고 싶은 요소가 생길 때마다 매개변수를 추가해야 하니까</li>
              <li>이렇게 👉 void drawHouse(<code class="language-plaintext highlighter-rouge">const RGB&amp; roof_color, const vec2&amp; pos, const float&amp; angle = 0.0f</code>)</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include "Game2D.h"
#include "Examples/PrimitivesGallery.h"
#include "RandomNumberGenerator.h"
</span>
<span class="k">namespace</span> <span class="n">jm</span>
<span class="p">{</span>

    <span class="c1">// 함수 -&gt; 그리는 집마다 지붕 색깔, 위치, 회전각도가 다르게 할 수 있도록 매개변수 3개 설정했다.</span>

	<span class="kt">void</span> <span class="n">drawHouse</span><span class="p">(</span><span class="k">const</span> <span class="n">RGB</span><span class="o">&amp;</span> <span class="n">roof_color</span><span class="p">,</span> <span class="k">const</span> <span class="n">vec2</span><span class="o">&amp;</span> <span class="n">pos</span><span class="p">,</span> <span class="k">const</span> <span class="kt">float</span><span class="o">&amp;</span> <span class="n">angle</span> <span class="o">=</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">)</span>  
	<span class="p">{</span>
		<span class="n">beginTransformation</span><span class="p">();</span>
		<span class="p">{</span>
			<span class="n">translate</span><span class="p">(</span><span class="n">pos</span><span class="p">);</span>
			<span class="n">rotate</span><span class="p">(</span><span class="n">angle</span><span class="p">);</span>
			<span class="c1">// wall</span>
			<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">yellow</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">);</span>

			<span class="c1">// roof</span>
			<span class="n">drawFilledTriangle</span><span class="p">(</span><span class="n">roof_color</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>
			<span class="n">drawWiredTriangle</span><span class="p">(</span><span class="n">roof_color</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>

			<span class="c1">// window</span>
			<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">skyblue</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
			<span class="n">drawWiredBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
			<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.05</span><span class="n">f</span> <span class="p">});</span>
			<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">});</span>

		<span class="p">}</span>
		<span class="n">endTransformation</span><span class="p">();</span>
	<span class="p">}</span>

	<span class="k">class</span> <span class="nc">Example</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Game2D</span>
	<span class="p">{</span>
	<span class="nl">public:</span>
		<span class="kt">void</span> <span class="n">update</span><span class="p">()</span> <span class="k">override</span>
		<span class="p">{</span>
			<span class="n">drawHouse</span><span class="p">(</span><span class="n">vec2</span><span class="p">(</span><span class="mf">0.0</span><span class="n">f</span><span class="p">,</span><span class="mf">0.0</span><span class="n">f</span><span class="p">),</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>    <span class="c1">// center house</span>
			<span class="n">drawHouse</span><span class="p">(</span><span class="n">vec2</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">),</span> <span class="mf">10.0</span><span class="n">f</span><span class="p">);</span>  <span class="c1">// left house (약간 기울어진)</span>
			<span class="n">drawHouse</span><span class="p">(</span><span class="n">vec2</span><span class="p">(</span><span class="mf">0.5</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">),</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>  <span class="c1">// right house</span>
		<span class="p">}</span>
	<span class="p">};</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">jm</span><span class="o">::</span><span class="n">Example</span><span class="p">().</span><span class="n">run</span><span class="p">();</span>
	
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="3-클래스-사용">3. “클래스” 사용</h2>
<ul>
  <li><u>클래스</u>를 사용하는 이유
    <ul>
      <li>집 여러개를 그리려면 같은 코드를 여러번 반복해야 하고 해당 집의 코드를 읽기도 찾기도 힘들어진다.</li>
      <li>반복되고 자주쓰이는 부분을 클래스로 묶어서 객체화 해서 쓸 수 있도록 캡슐화
        <ul>
          <li>실존하는 집을 만들어 낼 수 있는 <code class="language-plaintext highlighter-rouge">틀</code>(<u>클래스</u>)을 만들고 그 틀로 집을 여러개 찍어냄(<u>객체</u>)</li>
        </ul>
      </li>
      <li>‘집’이라는 ‘객체’를 정의하고 그 객체(집)을 일반화, 추상화시켜서 클래스를 만든다.</li>
      <li>클래스를 활용하면 객체를 그리는 기능(함수) 말고도 여러가지 기능을 할 수 있음.</li>
    </ul>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include "Game2D.h"
#include "Examples/PrimitivesGallery.h"
#include "RandomNumberGenerator.h"
</span>
<span class="k">namespace</span> <span class="n">jm</span>
<span class="p">{</span>
	<span class="k">class</span> <span class="nc">House</span>  <span class="c1">// '집' 클래스</span>
	<span class="p">{</span>
	<span class="nl">private:</span>
		<span class="n">RGB</span> <span class="n">roof_color</span><span class="p">;</span>      <span class="c1">// 함수였으면 파라미터로 일일이 쓰였을 변수들을 멤버 변수로 세팅</span>
		<span class="n">vec2</span> <span class="n">pos</span><span class="p">;</span>
		<span class="kt">float</span> <span class="n">angle</span> <span class="o">=</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">;</span>

	<span class="nl">public:</span>
		<span class="n">House</span><span class="p">()</span>
			<span class="o">:</span> <span class="n">roof_color</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">),</span> <span class="n">pos</span><span class="p">(</span><span class="mf">0.0</span><span class="n">f</span><span class="p">,</span><span class="mf">0.0</span><span class="n">f</span><span class="p">),</span> <span class="n">angle</span> <span class="p">(</span><span class="mf">0.0</span><span class="n">f</span><span class="p">)</span>  <span class="c1">// 생성자 !! 객체가 생성되면 이렇게 자동으로 생성되자마자 세팅 됨</span>
		<span class="p">{}</span>

		<span class="kt">void</span> <span class="n">setPos</span><span class="p">(</span><span class="k">const</span> <span class="n">vec2</span><span class="o">&amp;</span> <span class="n">_pos</span><span class="p">)</span>   <span class="c1">// private 변수인 pos와 angle 값을 설정하기 위한 setter 함수</span>
		<span class="p">{</span>
			<span class="n">pos</span> <span class="o">=</span> <span class="n">_pos</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="kt">void</span> <span class="n">setAngle</span><span class="p">(</span><span class="k">const</span> <span class="kt">float</span><span class="o">&amp;</span> <span class="n">_angle</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">angle</span> <span class="o">=</span> <span class="n">_angle</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="kt">void</span> <span class="n">draw</span><span class="p">()</span>      <span class="c1">// 클래스를 사용하니까 멤버 변수로 다 빼놔서 이렇게 매개변수 없이 깔끔하게! draw(). 파라미터 넘겨 받을 필요 없이 변수들을 쓸 수 있게 됐다.</span>
		<span class="p">{</span>
			<span class="n">beginTransformation</span><span class="p">();</span>
			<span class="p">{</span>
				<span class="n">translate</span><span class="p">(</span><span class="n">pos</span><span class="p">);</span>
				<span class="n">rotate</span><span class="p">(</span><span class="n">angle</span><span class="p">);</span>
				<span class="c1">// wall</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">yellow</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span><span class="p">);</span>

				<span class="c1">// roof</span>
				<span class="n">drawFilledTriangle</span><span class="p">(</span><span class="n">roof_color</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>
				<span class="n">drawWiredTriangle</span><span class="p">(</span><span class="n">roof_color</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.13</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span> <span class="p">},</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.2</span><span class="n">f</span> <span class="p">});</span>

				<span class="c1">// window</span>
				<span class="n">drawFilledBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">skyblue</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
				<span class="n">drawWiredBox</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
				<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.05</span><span class="n">f</span> <span class="p">});</span>
				<span class="n">drawLine</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="o">-</span><span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">},</span> <span class="n">Colors</span><span class="o">::</span><span class="n">gray</span><span class="p">,</span> <span class="p">{</span> <span class="mf">0.05</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">});</span>

			<span class="p">}</span>
			<span class="n">endTransformation</span><span class="p">();</span>
		<span class="p">}</span>
	<span class="p">};</span>

	<span class="k">class</span> <span class="nc">Example</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Game2D</span>
	<span class="p">{</span>
	<span class="nl">public:</span>
		<span class="kt">void</span> <span class="n">update</span><span class="p">()</span> <span class="k">override</span>
		<span class="p">{</span>
			<span class="n">House</span> <span class="n">left_house</span><span class="p">,</span> <span class="n">center_house</span><span class="p">,</span> <span class="n">right_house</span><span class="p">;</span>   <span class="c1">// 집 객체 3개 찍어냄</span>

			<span class="n">left_house</span><span class="p">.</span><span class="n">setPos</span><span class="p">(</span><span class="n">vec2</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">));</span>  <span class="c1">// 각 집의 위치와 각도를 함수로 다르게 설정하기</span>
			<span class="n">center_house</span><span class="p">.</span><span class="n">setPos</span><span class="p">(</span><span class="n">vec2</span><span class="p">(</span><span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">));</span>
			<span class="n">center_house</span><span class="p">.</span><span class="n">setAngle</span><span class="p">(</span><span class="mf">10.0</span><span class="n">f</span><span class="p">);</span>
			<span class="n">right_house</span><span class="p">.</span><span class="n">setPos</span><span class="p">(</span><span class="n">vec2</span><span class="p">(</span><span class="mf">0.5</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">));</span>

			<span class="n">left_house</span><span class="p">.</span><span class="n">draw</span><span class="p">();</span>
			<span class="n">center_house</span><span class="p">.</span><span class="n">draw</span><span class="p">();</span>
			<span class="n">right_house</span><span class="p">.</span><span class="n">draw</span><span class="p">();</span>

		<span class="p">}</span>
	<span class="p">};</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">jm</span><span class="o">::</span><span class="n">Example</span><span class="p">().</span><span class="n">run</span><span class="p">();</span>
	
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="배열-사용하여-집-10개-여러개-그리기">배열 사용하여 집 10개 여러개 그리기</h3>

<p><img src="https://user-images.githubusercontent.com/42318591/84807325-09627900-b042-11ea-884c-49d1efdf2eb8.png" alt="image" width="50%" height="50%" class="align-center" /></p>

<p><code class="language-plaintext highlighter-rouge">House houses[10]</code> : House 객체 10개를 담을 수 있는 배열</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="n">update</span><span class="p">()</span> <span class="k">override</span>
<span class="p">{</span>
	<span class="n">House</span> <span class="n">houses</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span> <span class="c1">// 일일이 첫번째집,,, 두번째집,,,, 열번째집,, 이렇게 변수 안놔도 됨.</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>   <span class="c1">// 각 객체들 (원소들) 위치 지정 </span>
	<span class="p">{</span>
		<span class="n">houses</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">setPos</span><span class="p">(</span><span class="n">vec2</span><span class="p">(</span><span class="o">-</span><span class="mf">1.3</span><span class="n">f</span> <span class="o">+</span> <span class="mf">0.3</span><span class="n">f</span> <span class="o">*</span> <span class="kt">float</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">));</span>
	<span class="p">}</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="c1">// 각 객체들 (원소들) 그리기 </span>
	<span class="p">{</span>
		<span class="n">houses</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">draw</span><span class="p">();</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="10개의-집-위치를-각각-랜덤으로-설정-해보기">10개의 집 위치를 각각 랜덤으로 설정 해보기</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">RandomNumberGenerator.h</code> include 해야 함</li>
  <li>`getFloat(-0.5f, 0.5f)
    <ul>
      <li>RandomNumberGenerator의 함수</li>
      <li>0.5f~0.5f 사이의 랜덤한 수 리턴</li>
      <li>집 객체들의 y좌표를 랜덤으로 해보자.</li>
    </ul>
  </li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include "RandomNumberGenerator.h"
</span>
<span class="k">class</span> <span class="nc">Example</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Game2D</span>
	<span class="p">{</span>
	<span class="nl">public:</span>

		<span class="n">House</span> <span class="n">houses</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>

		<span class="n">Example</span><span class="p">()</span>   <span class="c1">// 생성자</span>
			<span class="o">:</span><span class="n">Game2D</span><span class="p">()</span> <span class="c1">// 부모클래스Game2D 초기화</span>
		<span class="p">{</span>
			<span class="n">RandomNumberGenerator</span> <span class="n">rnd</span><span class="p">;</span>  <span class="c1">// 랜덤넘버생성기 객체 생성</span>

			<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">houses</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">setPos</span><span class="p">(</span><span class="n">vec2</span><span class="p">(</span><span class="o">-</span><span class="mf">1.3</span><span class="n">f</span> <span class="o">+</span> <span class="mf">0.3</span><span class="n">f</span> <span class="o">*</span> <span class="kt">float</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">rnd</span><span class="p">.</span><span class="n">getFloat</span><span class="p">(</span><span class="o">-</span><span class="mf">0.5</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.5</span><span class="n">f</span><span class="p">)));</span>   
                <span class="c1">// 이걸 update()안 에서 해주면 집 위치들이 계속 매 프레임마다 랜덤으로 변함. 그래서 위치설정은 미리 생성자에서 1번만 실행 되도록 설정</span>
			<span class="p">}</span>
		<span class="p">}</span>

		<span class="kt">void</span> <span class="n">update</span><span class="p">()</span> <span class="k">override</span>
		<span class="p">{</span>	
			<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">houses</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">draw</span><span class="p">();</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">};</span>
</code></pre></div></div>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET