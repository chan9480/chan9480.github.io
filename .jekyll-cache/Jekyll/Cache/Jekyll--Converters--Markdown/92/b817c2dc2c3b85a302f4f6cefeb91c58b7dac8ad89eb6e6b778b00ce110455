I"4@<p class="notice--warning">인프런에 있는 홍정모 교수님의 <strong>홍정모의 게임 만들기 연습 문제 패키지</strong> 강의를 듣고 정리한 필기입니다.😀 <br />
<a href="https://github.com/jmhong-simulation/GameDevPracticePackage">🌜 공부에 사용된 홍정모 교수님의 코드들 보러가기</a> <br />
<a href="https://www.inflearn.com/course/c-2">🌜 [홍정모의 게임 만들기 연습 문제 패키지] 강의 들으러 가기!</a></p>

<p><br /></p>

<h1 id="chapter-1-기본-기능-구현">Chapter 1. 기본 기능 구현</h1>
<h1 id="14-마우스-입력-다루기">1.4 마우스 입력 다루기</h1>

<h2 id="마우스의-현재-위치-리턴하기--getcursorpos">마우스의 현재 위치 리턴하기 : getCursorPos</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">getCursorPos(bool)</code> 함수
    <ul>
      <li>Game2D 클래스에 있는 함수로 <u>마우스의 현재 위치</u>를 리턴한다.
        <ul>
          <li>위치를 리턴하는 것이니 Vector2 객체 리턴.</li>
          <li><code class="language-plaintext highlighter-rouge">bool타입</code> 매개변수의 값에 따라 리턴 받는 마우스의 위치를 <u>윈도우 좌표계</u>를 기준으로 할지 <u>화면 좌표계</u>를 기준으로 할지 결정할 수 있다.
            <ul>
              <li><code class="language-plaintext highlighter-rouge">getCursorPos(false)</code> : 윈도우 좌표계 사용</li>
              <li><code class="language-plaintext highlighter-rouge">getCursorPos(true)</code> : 화면 좌표계 사용. 우리에게 더 익숙</li>
            </ul>
          </li>
          <li>디폴트 값은 true로 설정되어 있어 그냥 <code class="language-plaintext highlighter-rouge">getCursorPos()</code>로 호출하면 화면 좌표계 기준 위치를 리턴해준다.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Vector2</code> 클래스에 출력 연산자 <code class="language-plaintext highlighter-rouge">&lt;&lt;</code>이 아래와 같이 오버로딩 되어 있기 때문에 그냥 cout과 함께 <code class="language-plaintext highlighter-rouge">&lt;&lt;</code> 써서 마우스 현재 위치를 출력하면 된다.</p>

    <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">friend</span> <span class="n">std</span><span class="o">::</span><span class="n">ostream</span> <span class="o">&amp;</span> <span class="k">operator</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">ostream</span> <span class="o">&amp;</span> <span class="n">out</span><span class="p">,</span> <span class="k">const</span> <span class="n">Vector2</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">&amp;</span> <span class="n">vec</span><span class="p">)</span>
<span class="p">{</span>
      <span class="n">out</span> <span class="o">&lt;&lt;</span> <span class="n">vec</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span> <span class="o">&lt;&lt;</span> <span class="n">vec</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
      <span class="k">return</span> <span class="n">out</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="윈도우-좌표계--getcursorposfalse">윈도우 좌표계 : getCursorPos(false)</h3>

<p><img src="https://user-images.githubusercontent.com/42318591/84585398-68f63400-ae4a-11ea-9446-5b91a09d6f07.png" alt="image" width="50%" height="50%" class="align-center" /></p>

<ul>
  <li>왼쪽 : x 감소 / 오른쪽 : x 증가 / 위쪽 : y 감소 / 아래쪽 : y 증가</li>
  <li>마우스 좌표는 창의 맨 왼쪽 상단을 (0,0) 라 하고 오른쪽 하단을 (999,999)라고 한다.
<em>(해상도 1000 x 1000 기준)</em></li>
</ul>

<h3 id="화면-좌표계--getcursorpostrue">화면 좌표계 : getCursorPos(true)</h3>

<p><img src="https://user-images.githubusercontent.com/42318591/84585406-81664e80-ae4a-11ea-8845-cc62c0c547e3.png" alt="image" width="50%" height="50%" class="align-center" /></p>

<ul>
  <li>가운데가 (0,0) 이다.</li>
  <li>격자 상 한칸당 0.5f</li>
  <li>마우스의 현재 위치를 float 실수로 나타낸다.</li>
  <li>왼쪽 : x 감소, 오른쪽 : x 증가, 위쪽 : y 증가, 아래쪽 : y 감소</li>
</ul>

<h3 id="getcursorposbool의-화면좌표계와-윈도우좌표계-변환-원리">getCursorPos(bool)의 화면좌표계와 윈도우좌표계 변환 원리</h3>

<p>📜<code class="language-plaintext highlighter-rouge">Game2D.cpp</code></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">glfwGetCursorPos</code> → 윈도우의 x 포지션과 y포지션을 가져 오는 <code class="language-plaintext highlighter-rouge">glfw</code> 라이브러리의 함수. (윈도우 좌표계)</li>
  <li><code class="language-plaintext highlighter-rouge">screen_coordinates</code> 가 true면 <u>윈도우 좌표계를 화면 좌표계로 변환.</u></li>
  <li><code class="language-plaintext highlighter-rouge">screen_coordinates</code> 가 false면 <u>변환 없이</u> 윈도우 좌표계 그대로 리턴.</li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">vec2</span> <span class="n">Game2D</span><span class="o">::</span><span class="n">getCursorPos</span><span class="p">(</span><span class="k">const</span> <span class="kt">bool</span><span class="o">&amp;</span> <span class="n">screen_coordinates</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">double</span> <span class="n">x_pos</span><span class="p">,</span> <span class="n">y_pos</span><span class="p">;</span>
		<span class="n">glfwGetCursorPos</span><span class="p">(</span><span class="n">glfw_window</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">x_pos</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">y_pos</span><span class="p">);</span>   <span class="c1">// 윈도우 좌표계를 가져온다.</span>
		
        <span class="cm">/* 윈도우 좌표계 특징
		    Note that (0, 0) is left up corner. 
		    This is different from our screen coordinates.
		    0 &lt;= x &lt;= (width - 1)    ex) 해상도 100x100 이라면 0&lt;=x&lt;=99
		    (height - 1) &gt;= y &gt;= 0   ex) hegit-1에서 시작해 위로 갈수록 값이 0에 가까워지며 작아짐
        */</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">screen_coordinates</span><span class="p">)</span>  <span class="c1">// 윈도우 좌표계를 화면 좌표계로 변환하기. width &gt;= height 라고 가정.</span>
		<span class="p">{</span>
			<span class="c1">// upside down y direction </span>
			<span class="c1">// y 좌표 위 아래 뒤집기 -&gt; 윈도우 좌표는 위로갈수록 y감소 아래로 갈수록 y 증가니까	</span>
			<span class="n">y_pos</span> <span class="o">=</span> <span class="n">height</span> <span class="o">-</span> <span class="n">y_pos</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// 0 &lt;= y &lt;= height - 1</span>

			<span class="c1">// rescale and translate zero to center</span>
			<span class="n">y_pos</span> <span class="o">=</span> <span class="n">y_pos</span> <span class="o">/</span> <span class="p">(</span><span class="n">height</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">//  0.0 &lt;= y &lt;= 1.0</span>
			<span class="n">y_pos</span> <span class="o">=</span> <span class="n">y_pos</span> <span class="o">*</span> <span class="mf">2.0</span><span class="p">;</span>		  <span class="c1">//  0.0 &lt;= y &lt;= 2.0</span>
			<span class="n">y_pos</span> <span class="o">=</span> <span class="n">y_pos</span> <span class="o">-</span> <span class="mf">1.0</span><span class="p">;</span>		  <span class="c1">// -1.0 &lt;= y &lt;= 1.0</span>

			<span class="n">x_pos</span> <span class="o">=</span> <span class="p">(</span><span class="n">x_pos</span> <span class="o">/</span> <span class="p">(</span><span class="n">width</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mf">2.0</span> <span class="o">-</span> <span class="mf">1.0</span><span class="p">)</span> <span class="o">*</span> <span class="n">width</span> <span class="o">/</span> <span class="n">height</span><span class="p">;</span> <span class="c1">//  -1.0 &lt;= x &lt;= 1.0</span>

			<span class="k">return</span> <span class="n">vec2</span><span class="p">(</span><span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">float</span><span class="o">&gt;</span><span class="p">(</span><span class="n">x_pos</span><span class="p">),</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">float</span><span class="o">&gt;</span><span class="p">(</span><span class="n">y_pos</span><span class="p">));</span> <span class="c1">// x, y를 float로 캐스팅 해주고 vec2로 묶고 반환한다.</span>
		<span class="p">}</span>
		<span class="k">else</span>  <span class="c1">// 별다른 변환 없이 윈도우 좌표계를 그대로 리턴. float로 캐스팅 해주고 vec2로 묶기만 해서 반환한다.</span>
		<span class="p">{</span>
			<span class="k">return</span> <span class="n">vec2</span><span class="p">(</span><span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">float</span><span class="o">&gt;</span><span class="p">(</span><span class="n">x_pos</span><span class="p">),</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">float</span><span class="o">&gt;</span><span class="p">(</span><span class="n">y_pos</span><span class="p">));</span>
		<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="마우스-현재-커서-위치에-그림-그리기">마우스 현재 커서 위치에 그림 그리기</h2>

<h3 id="노란-동그라미가-마우스-커서를-따라다니게끔-해보자">노란 동그라미가 마우스 커서를 따라다니게끔 해보자</h3>
<p>원점에 그림이 그려지고 마우스 현재 위치로 그림이 이동하는 과정이 매 프레임마다 반복되어 마우스 현재 위치에 그려져 있는 것으로 보인다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include "Game2D.h"
</span>
<span class="k">namespace</span> <span class="n">jm</span>
<span class="p">{</span>
	<span class="k">class</span> <span class="nc">MouseExample</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Game2D</span>
	<span class="p">{</span>
	<span class="nl">public:</span>
		<span class="kt">void</span> <span class="n">update</span><span class="p">()</span> <span class="k">override</span>
		<span class="p">{</span>
			<span class="k">const</span> <span class="n">vec2</span> <span class="n">mouse_pos</span> <span class="o">=</span> <span class="n">getCursorPos</span><span class="p">();</span>
			<span class="n">translate</span><span class="p">(</span><span class="n">mouse_pos</span><span class="p">);</span>                   <span class="c1">// 실행순서 2. 마우스 현재 위치로 이동한다. </span>
			<span class="n">drawFilledCircle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gold</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>   <span class="c1">// 실행순서 1. 원점에 동그라미를 그린다.</span>
		<span class="p">}</span>
	<span class="p">};</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">jm</span><span class="o">::</span><span class="n">MouseExample</span><span class="p">().</span><span class="n">init</span><span class="p">(</span><span class="s">"This is my digital canvas!"</span><span class="p">,</span> <span class="mi">1000</span><span class="p">,</span> <span class="mi">1000</span><span class="p">,</span> <span class="nb">false</span><span class="p">).</span><span class="n">run</span><span class="p">();</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="마우스-좌클시-노란-원-우클시-빨간-원이-그려지게-해보자">마우스 좌클시 노란 원, 우클시 빨간 원이 그려지게 해보자.</h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include "Game2D.h"
</span>
<span class="k">namespace</span> <span class="n">jm</span>
<span class="p">{</span>
	<span class="k">class</span> <span class="nc">MouseExample</span> <span class="o">:</span> <span class="k">public</span> <span class="n">Game2D</span>
	<span class="p">{</span>
	<span class="nl">public:</span>
		<span class="kt">void</span> <span class="n">update</span><span class="p">()</span> <span class="k">override</span>
		<span class="p">{</span>
			<span class="k">const</span> <span class="n">vec2</span> <span class="n">mouse_pos</span> <span class="o">=</span> <span class="n">getCursorPos</span><span class="p">(</span><span class="nb">true</span><span class="p">);</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">isMouseButtonPressed</span><span class="p">(</span><span class="n">GLFW_MOUSE_BUTTON_1</span><span class="p">)</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span> <span class="c1">// 마우스 좌클 입력이 들어올 시</span>
			<span class="p">{</span>
				<span class="n">translate</span><span class="p">(</span><span class="n">mouse_pos</span><span class="p">);</span>
				<span class="n">drawFilledCircle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">gold</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">isMouseButtonPressed</span><span class="p">(</span><span class="n">GLFW_MOUSE_BUTTON_2</span><span class="p">))</span>  <span class="c1">// 마우스 우클 입력이 들어올 시</span>
			<span class="p">{</span>
				<span class="n">translate</span><span class="p">(</span><span class="n">mouse_pos</span><span class="p">);</span>
				<span class="n">drawFilledCircle</span><span class="p">(</span><span class="n">Colors</span><span class="o">::</span><span class="n">red</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">};</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">jm</span><span class="o">::</span><span class="n">MouseExample</span><span class="p">().</span><span class="n">init</span><span class="p">(</span><span class="s">"This is my digital canvas!"</span><span class="p">,</span> <span class="mi">1000</span><span class="p">,</span> <span class="mi">1000</span><span class="p">,</span> <span class="nb">false</span><span class="p">).</span><span class="n">run</span><span class="p">();</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET