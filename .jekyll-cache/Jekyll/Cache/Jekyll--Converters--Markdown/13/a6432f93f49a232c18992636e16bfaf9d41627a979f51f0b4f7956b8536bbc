I"VK<p class="notice--warning">인프런에 있는 황대희님의 <strong>언리얼 엔진4 3D 횡스크롤 게임 만들기</strong> 강의를 듣고 정리한 필기입니다. 😀<br />
<strong>언리얼 엔진 공식 문서</strong> <a href="https://docs.unrealengine.com/ko/index.html">https://docs.unrealengine.com/ko/index.html</a></p>

<h1 id="스테이지-클리어-작업">스테이지 클리어 작업</h1>

<p>보스가 죽으면 스테이지를 깼다고 판정한다.</p>

<h2 id="️-game-mode-블루프린트">🙋‍♂️ Game Mode 블루프린트</h2>

<blockquote>
  <p>게임에 대한 기본 규칙들이 지정된다.</p>
</blockquote>

<ul>
  <li>존재하는 플레이어와 관람자의 수는 물론, 허용된 플레이어와 관람자 최대 수</li>
  <li>플레이어가 게임에 들어오는 방식, 스폰 위치 선택 규칙과 기타 스폰/리스폰 동작 포함 가능</li>
  <li>게임 일시정지 가능 여부, 게임 일시정지 처리 방식</li>
  <li>레벨간의 전환, 게임의 시네마틱 모드 시작 여부 포함</li>
</ul>

<p><u>게임 모드 블루프린트</u>를 사용하면, 레벨마다 게임 모드를 지정해줄 수 있다. 개발자가 직접 게임 모드 블루프린트를 생성하지 않으면 언리얼 엔진에 기본적으로 마련이 되어 있는 GameMode 블루프린트가 사용된다.</p>

<p><br /></p>

<h2 id="️-스테이지-클리어-했는지-체크하기">🙋‍♀️ 스테이지 클리어 했는지 체크하기</h2>

<p><em>보스를 변수로 가져온 후, 가져온 보스의 상태가 Death 상태인지를 체크하자.</em></p>

<h3 id="게임-모드-블루프린트-만들기">게임 모드 블루프린트 만들기</h3>

<p><img src="https://user-images.githubusercontent.com/42318591/93947090-da148400-fd75-11ea-88d7-c75f7188225f.png" alt="image" /></p>

<p>부모 클래스를 <em>Game Mode Base</em> 로 하여 클래스 블루프린트 만들어주기. 이름은 <strong>“DefaultPlayGameMode”</strong>.</p>

<p><img src="https://user-images.githubusercontent.com/42318591/93947349-6fb01380-fd76-11ea-8cef-efcdde7bc236.png" alt="image" /></p>

<p><em>월드 세팅</em> 패널에서 <strong>Game Mode - Game Mode Override</strong> 에 방금 만든 <strong>“DefaultPlayGameMode”</strong> 블루프린트를 할당해준다.</p>

<p><br /></p>

<h3 id="게임-시작시-보스-변수에-보스-할당">게임 시작시 보스 변수에 보스 할당</h3>

<blockquote>
  <p>🚩 “DefaultPlayGameMode” <em>게임 모드 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93948435-6a07fd00-fd79-11ea-9da2-97ed7dec925c.png" alt="image" /></p>

<ul>
  <li>우선 “Boss1MonsterBP” 타입의 <code class="language-plaintext highlighter-rouge">Boss</code> 변수를 추가한다.</li>
  <li>게임이 시작되는 이벤트가 발생하면 (<em>BeginPlay</em>)</li>
  <li>“Boss” 태그를 가진 모든 Actor들을 배열로 리턴한다. (액터들이 모인 배열)
    <ul>
      <li><em>Get All Actors with Tag</em>
        <ul>
          <li>해당 Tag를 가진 <strong>액터들을 배열에 담아</strong> 리턴한다.</li>
          <li>“Boss” 태그를 가진 Actor는 “Boss1MonsterBP” 하나 일테니, 인덱스 0 인 원소를 가져오면 그것이 바로 “Boss1MonsterBP”가 된다.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>배열 원소인 Actor 레퍼런스를 “Boss1MonsterBP”로 형변환한다.</li>
  <li><code class="language-plaintext highlighter-rouge">Boss</code> 변수에 이를 세팅한다.</li>
</ul>

<p><br /></p>

<blockquote>
  <p>🚩 “Boss1MonsterBP” <em>보스 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93948228-d2a2aa00-fd78-11ea-99ca-0744f5019c31.png" alt="image" /></p>

<p>“Boss1MonsterBP” 액터 컴포넌트를 클릭한 후, Actor의 <u>태그 배열 원소로 "Boss"를 추가한다.</u> 이 태그로 게임 모드 블루프린트에서 Boss 액터인지를 판가름한 후 변수에 할당할 것이다.</p>

<p><br /></p>

<h3 id="매-프레임마다-보스가-죽었는지-체크">매 프레임마다 보스가 죽었는지 체크</h3>

<blockquote>
  <p>🚩 “DefaultPlayGameMode” <em>게임 모드 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93948467-80ae5400-fd79-11ea-82cd-d442dcfd9adc.png" alt="image" /></p>

<ul>
  <li>매 프레임마다 (<em>Tick</em>)</li>
  <li><code class="language-plaintext highlighter-rouge">Boss</code>의 <code class="language-plaintext highlighter-rouge">Cur State</code>가 ‘== Death’ 인지를 검사한다. (<em>Branch</em>)</li>
</ul>

<p><br /></p>

<h2 id="️-스테이지-ui-widget-만들기">🙋‍♀️ 스테이지 UI Widget 만들기</h2>

<p>보스가 죽어서 스테이지가 Clear 됐을 때 띄울 UI 만들기</p>

<h3 id="위젯widget-블루프린트">위젯(widget) 블루프린트</h3>

<blockquote>
  <p>게임을 구성하는 UI 요소</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93953169-b0635900-fd85-11ea-8540-887a7e1e6439.png" alt="image" /></p>

<p><u>위젯 블루프린트</u> 만들기. 이름은 <strong>“StageClear”</strong></p>

<p><br /></p>

<blockquote>
  <p>🚩 “StageClear” <em>위젯 블루프린트</em> 디자이너 모드</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/94084479-99357180-fe40-11ea-90e6-46558fb0ac56.png" alt="image" /></p>

<ul>
  <li>디자이너 모드
    <ul>
      <li>UI 요소들을 시각적으로 배치해볼 수 있는 Canvas 가 있다.</li>
    </ul>
  </li>
  <li>그래프 모드
    <ul>
      <li>이벤트 그래프</li>
    </ul>
  </li>
</ul>

<p><img src="https://user-images.githubusercontent.com/42318591/93954462-be66a900-fd88-11ea-8cdb-93277dcd9d5c.png" alt="image" /></p>

<ul>
  <li>왼쪽 상단의 <strong>팔레트</strong>에서 텍스트, 버튼 같은 UI 요소들을 Canvas 위로 드래그 하여 배치해주면 된다.</li>
  <li>복사한 UI를 붙여 넣기 할 때, 꼭 Canvas를 한번 클릭해서 Canvas를 선택한 상태에서 붙여 넣기를 해주어야 한다. 예를 들어 버튼을 복사한다면, 버튼이 여전히 선택된 상태에서 붙여 넣기를 할 때 버튼 안에다가 버튼을 붙여넣기 하는게 되서 크기가 충분하지 않아 경고 메세지가 뜨며 붙여넣기가 이루어지지 않음.</li>
  <li>버튼 위의 텍스트는 그냥 텍스트 UI를 버튼 UI 위에 그대로 복붙 해주면 된다.</li>
  <li>Canvas
    <ul>
      <li>Text - “Stage Clear!”</li>
      <li>Button 1 - Main Menu Button
        <ul>
          <li>Text - “Main Menu”</li>
        </ul>
      </li>
      <li>Button 2 - Retry Button
        <ul>
          <li>Text - “Retry Button”</li>
        </ul>
      </li>
      <li>Button 3 - Next Button
        <ul>
          <li>Text - “Next Button”</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h3 id="위젯-화면에-띄우기">위젯 화면에 띄우기</h3>

<blockquote>
  <p>🚩 “DefaultPlayGameMode” <em>게임 모드 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93955773-7ac16e80-fd8b-11ea-9a2b-59a6e3518bdc.png" alt="image" /></p>

<p>위셋을 사용하기 위해선 <u>게임 모드 블루프린트 안에서</u> 만들어 둔 위젯 블루프린트를 생성해주어야 한다.</p>

<ul>
  <li><em>Get Player Controller</em>
    <ul>
      <li><u>위젯의 Owining Player에 Player Controller를 연결해준다.</u>
        <ul>
          <li>Player Controller 가 HUD를 실질적으로 소유한다.
            <ul>
              <li><strong>HUD</strong>
                <ul>
                  <li>👉 <em>HUD 는 게임플레이 도중 화면 위에 겹처놓이는 계기판이나 정보를 가리킵니다. HUD의 목적은 플레이어에게 점수, 생명력, 남은 시간 등 게임의 현재 상태를 알리는 것입니다. HUD는 보통 상호작용적이지 않습니다. 즉 플레이어는 HUD 요소를 클릭할 수 없다는 뜻으로, 어떤 게임 유형에서는 이 부분이 회색으로 변해 HUD와 UI의 구분이 힘들어지기는 합니다.</em>  - 언리얼 공식 문서</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>PlayerController 클래스는 HUD를 멤버 변수로써 가지고 있는데, GameMode에서 PlayerController 클래스에 HUD Class를 전달하여 설정하도록 한다.</li>
          <li>HUD의 기능을 HUD 클래스 외부에서 사용하고자 할 경우, PlayerController의 GetHUD 함수를 사용하면 해당 플레이어 컨트롤러에 대한 HUD를 취득할 수 있다.</li>
          <li><a href="https://minusi.tistory.com/entry/Unreal-UMG%EC%99%80-HUD-%EA%B7%B8%EB%A6%AC%EA%B3%A0-SlateUnreal-UMG-HUD-and-Slate">설명 출처 블로그</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><em>Create Widget</em>
    <ul>
      <li><u>위젯을 생성한다</u>
        <ul>
          <li>Class 👉 <u>"StageClear"</u> 위젯 블루프린트 할당</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><em>Add to Viewport</em>
    <ul>
      <li><u>위젯 블루프린트를 화면상에 그린다.</u></li>
    </ul>
  </li>
</ul>

<p><img src="https://user-images.githubusercontent.com/42318591/93955603-156d7d80-fd8b-11ea-8263-694ed226a94c.png" alt="image" /></p>

<p><br /></p>

<h3 id="위젯이-한번만-생성될-수-있도록-하기">위젯이 한번만 생성될 수 있도록 하기</h3>

<p>Tick 을 통해 매 프레임마다 보스가 죽었는지 체크하고, 매 프레임마다 위젯을 생성하고 화면에 그리고 있으므로 성능상 부담스럽다.</p>

<blockquote>
  <p>🚩 “GamePlayState” <em>Enumeration</em></p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93957093-7f3b5680-fd8e-11ea-8581-f9f115f22fd5.png" alt="image" /></p>

<p>“GamePlayState” 이름의 Enumeration을 추가로 생성하였다.</p>

<ul>
  <li>Ready
    <ul>
      <li>추후 설명</li>
    </ul>
  </li>
  <li>Play
    <ul>
      <li>게임 플레이 상태일 때만 보스가 죽었는지를 체크하고</li>
    </ul>
  </li>
  <li>Stage Clear
    <ul>
      <li>보스가 죽었다면 이 상태로 바뀌며</li>
      <li>더 이상 보스가 죽었는지 체크하지 않는다.</li>
    </ul>
  </li>
  <li>PlayerHeroDeath
    <ul>
      <li>추후 설명</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<blockquote>
  <p>🚩 “DefaultPlayGameMode” <em>게임 모드 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93957701-c413bd00-fd8f-11ea-906c-1aa7284a5735.png" alt="image" /></p>

<ul>
  <li>“GamePlayState” Enum 타입의 <code class="language-plaintext highlighter-rouge">CurGamePlayState</code> 변수 추가
    <ul>
      <li>디폴트 값은 Play</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">CurGamePlayState</code> 값이 게임 플레이 중인 상태를 나타내는 Play 상태일 때, 그리고 동시에 보스가 죽은 상태인 <code class="language-plaintext highlighter-rouge">CurState</code> 값이 Death 상태일 때만 그 뒤에 처리를 진행한다. (위젯 생성 같은)
    <ul>
      <li>보스가 죽으면 <code class="language-plaintext highlighter-rouge">CurGamePlayState</code> 값이 StageClear 로 설정한다.
        <ul>
          <li>Play 가 아닌 StageClear 값이 되었기 때문에 다음 프레임부터는 그 뒤에 노드들이 실행되지 않는다.
            <ul>
              <li>따라서 위젯이 딱 한번만 생성되고 뷰포트에 그려진다.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><img src="https://user-images.githubusercontent.com/42318591/93957727-d8f05080-fd8f-11ea-96c3-8e42e67917e5.png" alt="image" /></p>

<p>보스가 죽고난 후엔 <code class="language-plaintext highlighter-rouge">CurGamePlayState</code> 값이 StageClear 가 되었기 때문에 보스가 죽은 그 순간에만 한번 생성하고 그 다음 프레임부터는 생성되지 않는다는 것을 확인할 수 있다.</p>

<p><br /></p>

<h3 id="스테이지-클리어하면-커서-보이게-하기">스테이지 클리어하면 커서 보이게 하기</h3>

<blockquote>
  <p>🚩 “DefaultPlayGameMode” <em>게임 모드 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93958586-c5de8000-fd91-11ea-924c-a75ebcd0b221.png" alt="image" /></p>

<p>스테이지 클리어되면 커서를 보이게 하여 UI 버튼 같은 것들을 클릭할 수 있도록 해주자.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Set Show Mouse Cursor</code>
    <ul>
      <li>Player Controller를 입력으로 받으며, 마우스 커서를 보이게 할건지 아닌지를 설정할 수 있다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h2 id="️-스테이지-클리어-처리">🙋‍♀️ 스테이지 클리어 처리</h2>

<p>스테이지가 클리어 되면 더 이상 몬스터들도 플레이어를 공격하지 않고, 플레이어의 입력도 막히도록 해보자.</p>

<h3 id="스테이지-클리어-되면-몬스터가-플레이어를-쫓고-공격하지-않도록">스테이지 클리어 되면 몬스터가 플레이어를 쫓고 공격하지 않도록</h3>

<blockquote>
  <p>🚩 “DefaultMonsterBP” <em>몬스터 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p>플레이어가 보스를 죽여서 스테이지가 클리어 되면 몬스터들이 플레이어를 공격하지 않게 한다.</p>

<p><img src="https://user-images.githubusercontent.com/42318591/94323632-843c1800-ffd1-11ea-83c3-8bd4510e09d7.png" alt="image" /></p>

<ul>
  <li>
    <p>몬스터 블루프린트 내에서 스테이지가 클리어 되면 플레이어를 더 이상 쫓지 않도록, <code class="language-plaintext highlighter-rouge">IsStageClear</code> boolean 타입의 변수를 추가한다.</p>
  </li>
  <li>
    <p>1️⃣ <code class="language-plaintext highlighter-rouge">IsStageClear</code> 값 설정</p>
    <ul>
      <li>몬스터가 플레이어를 쫓도록 거리와 방향을 설정하는 부분에서 위와 같이 “DefaultPlayGameMode” <em>게임 모드 블루프린트</em> 의 <code class="language-plaintext highlighter-rouge">CurGamePlayState</code> 값이 StageClear 라면 <code class="language-plaintext highlighter-rouge">IsStageClear</code> 값을 True로 설정한다.</li>
    </ul>
  </li>
</ul>

<p><img src="https://user-images.githubusercontent.com/42318591/93960722-5fa72c80-fd94-11ea-9dcd-a98c74b214be.png" alt="image" /></p>

<p><img src="https://user-images.githubusercontent.com/42318591/93961587-9a10c980-fd94-11ea-8b04-acbc12b800e4.png" alt="image" /></p>

<ul>
  <li>2️⃣ <code class="language-plaintext highlighter-rouge">IsStageClear</code> 값이 True 이거나, 혹은 플레이어가 죽어서 <code class="language-plaintext highlighter-rouge">IsDeathPlayerCharacter</code> 값이 True 라면
    <ul>
      <li>몬스터가 플레이어를 쫓지 않도록 <code class="language-plaintext highlighter-rouge">CurState</code> 값이 Idle_Ready 가 되게 한다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h3 id="스테이지-클리어-되면-플레이어를-움직일-수-없도록">스테이지 클리어 되면 플레이어를 움직일 수 없도록</h3>

<p>스테이지 클리어 되면 플레이어의 Input을 비활성화 시켜야 한다.</p>

<blockquote>
  <p>🚩 “DefaultPlayGameMode” <em>게임 모드 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93962476-dc86d600-fd95-11ea-9059-6fc19cd31e51.png" alt="image" /></p>

<ul>
  <li>Disable Input
    <ul>
      <li>타겟 👉 Get Player <em>Character</em>
        <ul>
          <li>현재 Player Index 0 에 해당하는 Player Character 액터</li>
        </ul>
      </li>
      <li>타겟으로 들어온 Actor 의 Player Controller에 대하여 입력을 비활성화 한다.
        <ul>
          <li>즉, Player Index 0 에 해당하는 Player Character 액터인 “MoveCharBP”에 대한 입력을 비활성화 한다.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h2 id="️-stage-2-만들기">🙋‍♀️ Stage 2 만들기</h2>

<p><img src="https://user-images.githubusercontent.com/42318591/93964506-b6b00000-fd9a-11ea-8d3c-9b5d461349c6.png" alt="image" /></p>

<p><code class="language-plaintext highlighter-rouge">Stage 1</code> 레벨을 <em>우클 - 복제</em> 하여 <code class="language-plaintext highlighter-rouge">Stage 2</code> 레벨을 만들었다.</p>

<h3 id="라이트-컬러-바꾸기">라이트 컬러 바꾸기</h3>

<blockquote>
  <p>두 번째 스테이지를 차별화 하기 위해 컬러를 바꿔주었다.</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93964869-a9474580-fd9b-11ea-8653-e86e9d4d327f.png" alt="image" /></p>

<p><img src="https://user-images.githubusercontent.com/42318591/93964876-acdacc80-fd9b-11ea-9bf3-6b1d4f54ab99.png" alt="image" /></p>

<p><code class="language-plaintext highlighter-rouge">Light Source</code> 오브젝트를 찾아 클릭한 후 디테일 패널 - Light - Light Color 에서 색상 설정</p>

<p><br /></p>

<h3 id="next-버튼을-누르면-stage-2-로-갈-수-있도록-하기">Next 버튼을 누르면 Stage 2 로 갈 수 있도록 하기</h3>

<p>다시 <code class="language-plaintext highlighter-rouge">Stage 1</code> 레벨로 돌아가자.</p>

<blockquote>
  <p>🚩 “StageClear” <em>위젯 블루프린트</em> 디자이너 모드</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93965211-80738000-fd9c-11ea-8c43-8ffb27b2084b.png" alt="image" /></p>

<p>Next 버튼 UI 를 클릭하면 위와 같이 버튼을 클릭하거나 클릭을 뗐을 때 등등 여러 상황에 대한 버튼 이벤트를 추가할 수 있다. <code class="language-plaintext highlighter-rouge">OnClicked</code> 이벤트를 추가하자.</p>

<blockquote>
  <p>🚩 “StageClear” <em>위젯 블루프린트</em> 이벤트 그래프</p>
</blockquote>

<p><img src="https://user-images.githubusercontent.com/42318591/93965335-dc3e0900-fd9c-11ea-8195-b45f34c30c1f.png" alt="image" /></p>

<p>Next 버튼을 누르는 이벤트가 발생하면 “Stage 2” 레벨이 열리게 한다.</p>

<hr />
<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🌜 개인 공부 기록용 블로그입니다. 오류나 틀린 부분이 있을 경우 
언제든지 댓글 혹은 메일로 지적해주시면 감사하겠습니다! 😄
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">맨 위로 이동하기</a></p>
:ET