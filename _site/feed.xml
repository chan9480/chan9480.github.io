<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-03-26T20:33:39+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Î∞∞Ïö∞Ïûê Í∑∏Î¶¨Í≥† Ïç®Î®πÏûê</title><subtitle>Ìè¨Ìä∏Ìè¥Î¶¨Ïò§</subtitle><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><entry><title type="html">ÎπÑÌñâÍ∏∞ ÌëØÍ∞í ÏòàÏ∏° MLP(Multi Layer Perceptron)</title><link href="http://localhost:4000/pj/airplane_price/" rel="alternate" type="text/html" title="ÎπÑÌñâÍ∏∞ ÌëØÍ∞í ÏòàÏ∏° MLP(Multi Layer Perceptron)" /><published>2022-03-26T00:00:00+09:00</published><updated>2022-03-26T00:00:00+09:00</updated><id>http://localhost:4000/pj/airplane_price</id><content type="html" xml:base="http://localhost:4000/pj/airplane_price/"><![CDATA[<h1 id="ÌåêÎã§Ïä§-ÌîÑÎ°úÌååÏùºÎßÅ-ÏΩîÎû©ÏóêÏÑú-ÏûëÎèôÌïòÎèÑÎ°ù-Î≤ÑÏ†ÑÏßÄÏ†ï-ÏÑ§Ïπò">ÌåêÎã§Ïä§ ÌîÑÎ°úÌååÏùºÎßÅ ÏΩîÎû©ÏóêÏÑú ÏûëÎèôÌïòÎèÑÎ°ù Î≤ÑÏ†ÑÏßÄÏ†ï ÏÑ§Ïπò</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">pandas</span><span class="o">==</span><span class="mf">1.2</span><span class="p">.</span><span class="mi">1</span>
<span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">pandas_profiling</span><span class="o">==</span><span class="mf">2.8</span><span class="p">.</span><span class="mi">0</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Collecting pandas==1.2.1
  Downloading pandas-1.2.1-cp37-cp37m-manylinux1_x86_64.whl (9.9 MB)
[K     |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 9.9 MB 9.8 MB/s
[?25hRequirement already satisfied: pytz&gt;=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas==1.2.1) (2018.9)
Requirement already satisfied: python-dateutil&gt;=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas==1.2.1) (2.8.2)
Requirement already satisfied: numpy&gt;=1.16.5 in /usr/local/lib/python3.7/dist-packages (from pandas==1.2.1) (1.21.5)
Requirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil&gt;=2.7.3-&gt;pandas==1.2.1) (1.15.0)
Installing collected packages: pandas
  Attempting uninstall: pandas
    Found existing installation: pandas 1.3.5
    Uninstalling pandas-1.3.5:
      Successfully uninstalled pandas-1.3.5
[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.27.1 which is incompatible.[0m
Successfully installed pandas-1.2.1




Requirement already satisfied: pandas_profiling==2.8.0 in /usr/local/lib/python3.7/dist-packages (2.8.0)
Requirement already satisfied: jinja2&gt;=2.11.1 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (2.11.3)
Requirement already satisfied: missingno&gt;=0.4.2 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (0.5.1)
Requirement already satisfied: numpy&gt;=1.16.0 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (1.21.5)
Requirement already satisfied: htmlmin&gt;=0.1.12 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (0.1.12)
Requirement already satisfied: visions[type_image_path]==0.4.4 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (0.4.4)
Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (1.0.1)
Requirement already satisfied: pandas!=1.0.0,!=1.0.1,!=1.0.2,&gt;=0.25.3 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (1.2.1)
Requirement already satisfied: scipy&gt;=1.4.1 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (1.7.3)
Requirement already satisfied: phik&gt;=0.9.10 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (0.12.2)
Requirement already satisfied: tangled-up-in-unicode&gt;=0.0.6 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (0.1.0)
Requirement already satisfied: matplotlib&gt;=3.2.0 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (3.2.2)
Requirement already satisfied: requests&gt;=2.23.0 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (2.27.1)
Requirement already satisfied: tqdm&gt;=4.43.0 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (4.63.0)
Requirement already satisfied: confuse&gt;=1.0.0 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (1.7.0)
Requirement already satisfied: astropy&gt;=4.0 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (4.3.1)
Requirement already satisfied: ipywidgets&gt;=7.5.1 in /usr/local/lib/python3.7/dist-packages (from pandas_profiling==2.8.0) (7.7.0)
Requirement already satisfied: attrs&gt;=19.3.0 in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.4.4-&gt;pandas_profiling==2.8.0) (21.4.0)
Requirement already satisfied: networkx&gt;=2.4 in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.4.4-&gt;pandas_profiling==2.8.0) (2.6.3)
Requirement already satisfied: imagehash in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.4.4-&gt;pandas_profiling==2.8.0) (4.2.1)
Requirement already satisfied: Pillow in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.4.4-&gt;pandas_profiling==2.8.0) (7.1.2)
Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from astropy&gt;=4.0-&gt;pandas_profiling==2.8.0) (4.11.3)
Requirement already satisfied: pyerfa&gt;=1.7.3 in /usr/local/lib/python3.7/dist-packages (from astropy&gt;=4.0-&gt;pandas_profiling==2.8.0) (2.0.0.1)
Requirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from confuse&gt;=1.0.0-&gt;pandas_profiling==2.8.0) (6.0)
Requirement already satisfied: ipython&gt;=4.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (5.5.0)
Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (3.6.0)
Requirement already satisfied: nbformat&gt;=4.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (5.2.0)
Requirement already satisfied: ipykernel&gt;=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (4.10.1)
Requirement already satisfied: traitlets&gt;=4.3.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (5.1.1)
Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.2.0)
Requirement already satisfied: jupyterlab-widgets&gt;=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (1.1.0)
Requirement already satisfied: tornado&gt;=4.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel&gt;=4.5.1-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (5.1.1)
Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel&gt;=4.5.1-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (5.3.5)
Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (4.4.2)
Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (2.6.1)
Requirement already satisfied: prompt-toolkit&lt;2.0.0,&gt;=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (1.0.18)
Requirement already satisfied: simplegeneric&gt;0.8 in /usr/local/lib/python3.7/dist-packages (from ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.8.1)
Requirement already satisfied: setuptools&gt;=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (57.4.0)
Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.7.5)
Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (4.8.0)
Requirement already satisfied: MarkupSafe&gt;=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2&gt;=2.11.1-&gt;pandas_profiling==2.8.0) (2.0.1)
Requirement already satisfied: kiwisolver&gt;=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib&gt;=3.2.0-&gt;pandas_profiling==2.8.0) (1.4.0)
Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&gt;=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib&gt;=3.2.0-&gt;pandas_profiling==2.8.0) (3.0.7)
Requirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib&gt;=3.2.0-&gt;pandas_profiling==2.8.0) (0.11.0)
Requirement already satisfied: python-dateutil&gt;=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib&gt;=3.2.0-&gt;pandas_profiling==2.8.0) (2.8.2)
Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver&gt;=1.0.1-&gt;matplotlib&gt;=3.2.0-&gt;pandas_profiling==2.8.0) (3.10.0.2)
Requirement already satisfied: seaborn in /usr/local/lib/python3.7/dist-packages (from missingno&gt;=0.4.2-&gt;pandas_profiling==2.8.0) (0.11.2)
Requirement already satisfied: jsonschema!=2.5.0,&gt;=2.4 in /usr/local/lib/python3.7/dist-packages (from nbformat&gt;=4.2.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (4.3.3)
Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat&gt;=4.2.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (4.9.2)
Requirement already satisfied: importlib-resources&gt;=1.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema!=2.5.0,&gt;=2.4-&gt;nbformat&gt;=4.2.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (5.4.0)
Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,&gt;=0.14.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema!=2.5.0,&gt;=2.4-&gt;nbformat&gt;=4.2.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.18.1)
Requirement already satisfied: zipp&gt;=3.1.0 in /usr/local/lib/python3.7/dist-packages (from importlib-resources&gt;=1.4.0-&gt;jsonschema!=2.5.0,&gt;=2.4-&gt;nbformat&gt;=4.2.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (3.7.0)
Requirement already satisfied: pytz&gt;=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas!=1.0.0,!=1.0.1,!=1.0.2,&gt;=0.25.3-&gt;pandas_profiling==2.8.0) (2018.9)
Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit&lt;2.0.0,&gt;=1.0.4-&gt;ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.2.5)
Requirement already satisfied: six&gt;=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit&lt;2.0.0,&gt;=1.0.4-&gt;ipython&gt;=4.0.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (1.15.0)
Requirement already satisfied: certifi&gt;=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests&gt;=2.23.0-&gt;pandas_profiling==2.8.0) (2021.10.8)
Requirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/local/lib/python3.7/dist-packages (from requests&gt;=2.23.0-&gt;pandas_profiling==2.8.0) (2.10)
Requirement already satisfied: urllib3&lt;1.27,&gt;=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests&gt;=2.23.0-&gt;pandas_profiling==2.8.0) (1.24.3)
Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.7/dist-packages (from requests&gt;=2.23.0-&gt;pandas_profiling==2.8.0) (2.0.12)
Requirement already satisfied: notebook&gt;=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (5.3.1)
Requirement already satisfied: terminado&gt;=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.13.3)
Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (5.6.1)
Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (1.8.0)
Requirement already satisfied: pyzmq&gt;=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client-&gt;ipykernel&gt;=4.5.1-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (22.3.0)
Requirement already satisfied: ptyprocess in /usr/local/lib/python3.7/dist-packages (from terminado&gt;=0.8.1-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.7.0)
Requirement already satisfied: PyWavelets in /usr/local/lib/python3.7/dist-packages (from imagehash-&gt;visions[type_image_path]==0.4.4-&gt;pandas_profiling==2.8.0) (1.3.0)
Requirement already satisfied: pandocfilters&gt;=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (1.5.0)
Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.7.1)
Requirement already satisfied: entrypoints&gt;=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.4)
Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (4.1.0)
Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.6.0)
Requirement already satisfied: mistune&lt;2,&gt;=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.8.4)
Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from bleach-&gt;nbconvert-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (21.3)
Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach-&gt;nbconvert-&gt;notebook&gt;=4.4.1-&gt;widgetsnbextension~=3.6.0-&gt;ipywidgets&gt;=7.5.1-&gt;pandas_profiling==2.8.0) (0.5.1)
</code></pre></div></div>

<h1 id="Îç∞Ïù¥ÌÑ∞-Î∂àÎü¨Ïò§Í∏∞">Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="nn">pandas_profiling</span> <span class="kn">import</span> <span class="n">ProfileReport</span>
<span class="kn">import</span> <span class="nn">datetime</span>
<span class="n">CSV_PATH_1</span> <span class="o">=</span> <span class="s">'/content/drive/MyDrive/dataset/airplane/Data_Train.csv'</span>
<span class="n">CSV_PATH_2</span> <span class="o">=</span> <span class="s">'/content/drive/MyDrive/dataset/airplane/Test_set.csv'</span>
<span class="n">CSV_PATH_3</span> <span class="o">=</span> <span class="s">'/content/drive/MyDrive/dataset/airplane/Sample_submission.csv'</span>
<span class="n">target</span> <span class="o">=</span> <span class="s">'Price'</span>
</code></pre></div></div>

<h1 id="Îç∞Ïù¥ÌÑ∞-ÏóîÏßÄÎãàÏñ¥">Îç∞Ïù¥ÌÑ∞ ÏóîÏßÄÎãàÏñ¥</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">re</span>

<span class="c1"># feature Ïàò 10Í∞ú.
</span><span class="n">df_train</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">CSV_PATH_1</span><span class="p">)</span>
<span class="n">X_train</span> <span class="o">=</span> <span class="n">df_train</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">y_train</span> <span class="o">=</span> <span class="n">df_train</span><span class="p">[</span><span class="n">target</span><span class="p">]</span>
<span class="n">X_test</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">CSV_PATH_2</span><span class="p">)</span>
<span class="n">y_test</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">CSV_PATH_3</span><span class="p">)</span>
<span class="s">"""
Ï†ÑÏ≤òÎ¶¨
1. Airline : one-hot encoding
2. Date_of_Journey : ÏÇ≠Ï†ú
3. Source : one-hot encoding
4. Destination : one-hot encoding
5. Route : ÏÇ≠Ï†úÌïòÏûê
6. Dep_Time : h*60 + min ÏúºÎ°ú ÏπòÌôò
7. Arrival_Time : ÏúÑÏôÄ Îèô
8. Duration : ÏúÑÏôÄÎèô
9. Total_Stops : Ïà´ÏûêÎßå ÎÇ®Í∏∞Ïûê non-stopÏùÄ 0
10. Additional_Info : one-hot encoding
"""</span>

<span class="c1"># Route  Date_of_journey ÏÇ≠Ï†ú
</span><span class="n">X_train</span><span class="o">=</span><span class="n">X_train</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Date_of_Journey'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">X_test</span><span class="o">=</span><span class="n">X_test</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Date_of_Journey'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">X_train</span><span class="o">=</span><span class="n">X_train</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Route'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">X_test</span><span class="o">=</span><span class="n">X_test</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Route'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># ÌÉëÏäπ, ÎèÑÏ∞© ÏãúÍ∞ÑÍ≥ÑÏÇ∞
</span><span class="k">def</span> <span class="nf">hour_cal</span><span class="p">(</span><span class="n">a</span><span class="p">):</span>
    <span class="n">hour</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s">'(\d+):'</span><span class="p">,</span> <span class="n">a</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="p">)</span>
    <span class="n">minute</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s">':(\d+)'</span><span class="p">,</span> <span class="n">a</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="p">)</span>
    <span class="k">return</span> <span class="n">hour</span><span class="o">*</span><span class="mi">60</span><span class="o">+</span><span class="n">minute</span>
<span class="n">X_train</span><span class="p">[</span><span class="s">'Dep_Time'</span><span class="p">]</span><span class="o">=</span><span class="n">X_train</span><span class="p">[</span><span class="s">'Dep_Time'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="n">hour_cal</span><span class="p">)</span>
<span class="n">X_test</span><span class="p">[</span><span class="s">'Dep_Time'</span><span class="p">]</span><span class="o">=</span><span class="n">X_test</span><span class="p">[</span><span class="s">'Dep_Time'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="n">hour_cal</span><span class="p">)</span>
<span class="n">X_train</span><span class="p">[</span><span class="s">'Arrival_Time'</span><span class="p">]</span><span class="o">=</span><span class="n">X_train</span><span class="p">[</span><span class="s">'Arrival_Time'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="n">hour_cal</span><span class="p">)</span>
<span class="n">X_test</span><span class="p">[</span><span class="s">'Arrival_Time'</span><span class="p">]</span><span class="o">=</span><span class="n">X_test</span><span class="p">[</span><span class="s">'Arrival_Time'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="n">hour_cal</span><span class="p">)</span>

<span class="c1"># ÏÜåÏöîÏãúÍ∞Ñ Í≥ÑÏÇ∞
</span><span class="k">def</span> <span class="nf">hour_cal2</span><span class="p">(</span><span class="n">a</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">hour</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s">'(\d+)h'</span><span class="p">,</span> <span class="n">a</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="p">)</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="n">hour</span><span class="o">=</span><span class="mi">0</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">minute</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s">'(\d+)m'</span><span class="p">,</span> <span class="n">a</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="p">)</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="n">minute</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">return</span> <span class="n">hour</span><span class="o">*</span><span class="mi">60</span><span class="o">+</span><span class="n">minute</span>
<span class="n">X_train</span><span class="p">[</span><span class="s">'Duration'</span><span class="p">]</span><span class="o">=</span><span class="n">X_train</span><span class="p">[</span><span class="s">'Duration'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="n">hour_cal2</span><span class="p">)</span>
<span class="n">X_test</span><span class="p">[</span><span class="s">'Duration'</span><span class="p">]</span><span class="o">=</span><span class="n">X_test</span><span class="p">[</span><span class="s">'Duration'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="n">hour_cal2</span><span class="p">)</span>

<span class="c1"># stopÏóêÏÑú Ïà´ÏûêÎßå ÎÇ®Í∏∞Ïûê
</span><span class="n">X_train</span><span class="p">[</span><span class="s">'Total_Stops'</span><span class="p">]</span><span class="o">=</span><span class="n">X_train</span><span class="p">[</span><span class="s">'Total_Stops'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="mi">0</span> <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="s">'n'</span> <span class="k">else</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">]))</span>
<span class="n">X_test</span><span class="p">[</span><span class="s">'Total_Stops'</span><span class="p">]</span><span class="o">=</span><span class="n">X_train</span><span class="p">[</span><span class="s">'Total_Stops'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="mi">0</span> <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="s">'n'</span> <span class="k">else</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">]))</span>
<span class="k">print</span><span class="p">(</span><span class="n">X_train</span><span class="p">.</span><span class="n">info</span><span class="p">())</span>

<span class="n">X_train</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 10683 entries, 0 to 10682
Data columns (total 8 columns):
 #   Column           Non-Null Count  Dtype
---  ------           --------------  -----
 0   Airline          10683 non-null  object
 1   Source           10683 non-null  object
 2   Destination      10683 non-null  object
 3   Dep_Time         10683 non-null  int64
 4   Arrival_Time     10683 non-null  int64
 5   Duration         10683 non-null  int64
 6   Total_Stops      10683 non-null  int64
 7   Additional_Info  10683 non-null  object
dtypes: int64(4), object(4)
memory usage: 667.8+ KB
None
</code></pre></div></div>

<div id="df-5e346ee7-84fc-40d0-874c-f1a960b92b39">
    <div class="colab-df-container">
      <div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Airline</th>
      <th>Source</th>
      <th>Destination</th>
      <th>Dep_Time</th>
      <th>Arrival_Time</th>
      <th>Duration</th>
      <th>Total_Stops</th>
      <th>Additional_Info</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>IndiGo</td>
      <td>Banglore</td>
      <td>New Delhi</td>
      <td>1340</td>
      <td>70</td>
      <td>170</td>
      <td>0</td>
      <td>No info</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Air India</td>
      <td>Kolkata</td>
      <td>Banglore</td>
      <td>350</td>
      <td>795</td>
      <td>445</td>
      <td>2</td>
      <td>No info</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Jet Airways</td>
      <td>Delhi</td>
      <td>Cochin</td>
      <td>565</td>
      <td>265</td>
      <td>1140</td>
      <td>2</td>
      <td>No info</td>
    </tr>
    <tr>
      <th>3</th>
      <td>IndiGo</td>
      <td>Kolkata</td>
      <td>Banglore</td>
      <td>1085</td>
      <td>1410</td>
      <td>325</td>
      <td>1</td>
      <td>No info</td>
    </tr>
    <tr>
      <th>4</th>
      <td>IndiGo</td>
      <td>Banglore</td>
      <td>New Delhi</td>
      <td>1010</td>
      <td>1295</td>
      <td>285</td>
      <td>1</td>
      <td>No info</td>
    </tr>
  </tbody>
</table>
</div>
      <button class="colab-df-convert" onclick="convertToInteractive('df-5e346ee7-84fc-40d0-874c-f1a960b92b39')" title="Convert this dataframe to an interactive table." style="display:none;">

  &lt;svg xmlns="http://www.w3.org/2000/svg" height="24px"viewBox="0 0 24 24"
       width="24px"&gt;
    <path d="M0 0h24v24H0V0z" fill="none" />
    <path d="M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z" /><path d="M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z" />
  &lt;/svg&gt;
      </button>

  <style>
    .colab-df-container {
      display:flex;
      flex-wrap:wrap;
      gap: 12px;
    }

    .colab-df-convert {
      background-color: #E8F0FE;
      border: none;
      border-radius: 50%;
      cursor: pointer;
      display: none;
      fill: #1967D2;
      height: 32px;
      padding: 0 0 0 0;
      width: 32px;
    }

    .colab-df-convert:hover {
      background-color: #E2EBFA;
      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);
      fill: #174EA6;
    }

    [theme=dark] .colab-df-convert {
      background-color: #3B4455;
      fill: #D2E3FC;
    }

    [theme=dark] .colab-df-convert:hover {
      background-color: #434B5C;
      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);
      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));
      fill: #FFFFFF;
    }
  </style>

      <script>
        const buttonEl =
          document.querySelector('#df-5e346ee7-84fc-40d0-874c-f1a960b92b39 button.colab-df-convert');
        buttonEl.style.display =
          google.colab.kernel.accessAllowed ? 'block' : 'none';

        async function convertToInteractive(key) {
          const element = document.querySelector('#df-5e346ee7-84fc-40d0-874c-f1a960b92b39');
          const dataTable =
            await google.colab.kernel.invokeFunction('convertToInteractive',
                                                     [key], {});
          if (!dataTable) return;

          const docLinkHtml = 'Like what you see? Visit the ' +
            '<a target="_blank" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'
            + ' to learn more about interactive tables.';
          element.innerHTML = '';
          dataTable['output_type'] = 'display_data';
          await google.colab.output.renderOutput(dataTable, element);
          const docLink = document.createElement('div');
          docLink.innerHTML = docLinkHtml;
          element.appendChild(docLink);
        }
      </script>
    </div>
  </div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_train</span> <span class="o">=</span> <span class="n">X_train</span>
<span class="n">df_train</span><span class="p">[</span><span class="s">'price'</span><span class="p">]</span> <span class="o">=</span> <span class="n">y_train</span>
<span class="n">df_train</span><span class="p">.</span><span class="n">profile_report</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Output hidden; open in https://colab.research.google.com to view.
</code></pre></div></div>

<h1 id="Ïù∏ÏΩîÎî©-one-hot-encoding-ÏÇ¨Ïö©">Ïù∏ÏΩîÎî© (one hot encoding ÏÇ¨Ïö©)</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ÏõêÌï´ Ïù∏ÏΩîÎî©
</span>
<span class="c1">#X_train=pd.get_dummies(data = X_train, columns = ['Airline', 'Source', 'Destination', 'Total_Stops',  'Additional_Info'])
#X_test=pd.get_dummies(data = X_test, columns = ['Airline', 'Source', 'Destination', 'Total_Stops',  'Additional_Info'])
</span>

<span class="n">temp</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">])</span>
<span class="n">temp</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">temp</span><span class="p">,</span> <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Airline'</span><span class="p">,</span> <span class="s">'Source'</span><span class="p">,</span> <span class="s">'Destination'</span><span class="p">,</span> <span class="s">'Total_Stops'</span><span class="p">,</span>  <span class="s">'Additional_Info'</span><span class="p">])</span>
<span class="n">X_train_encoded</span> <span class="o">=</span> <span class="n">temp</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="nb">len</span><span class="p">(</span><span class="n">X_train</span><span class="p">)]</span>
<span class="n">X_test_encoded</span> <span class="o">=</span> <span class="n">temp</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">X_train</span><span class="p">):]</span>

<span class="k">print</span><span class="p">(</span><span class="n">X_train_encoded</span><span class="p">.</span><span class="n">info</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">X_test_encoded</span><span class="p">.</span><span class="n">info</span><span class="p">())</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 10683 entries, 0 to 10682
Data columns (total 42 columns):
 #   Column                                        Non-Null Count  Dtype  
---  ------                                        --------------  -----  
 0   Dep_Time                                      10683 non-null  int64  
 1   Arrival_Time                                  10683 non-null  int64  
 2   Duration                                      10683 non-null  int64  
 3   price                                         10683 non-null  float64
 4   Airline_Air Asia                              10683 non-null  uint8  
 5   Airline_Air India                             10683 non-null  uint8  
 6   Airline_GoAir                                 10683 non-null  uint8  
 7   Airline_IndiGo                                10683 non-null  uint8  
 8   Airline_Jet Airways                           10683 non-null  uint8  
 9   Airline_Jet Airways Business                  10683 non-null  uint8  
 10  Airline_Multiple carriers                     10683 non-null  uint8  
 11  Airline_Multiple carriers Premium economy     10683 non-null  uint8  
 12  Airline_SpiceJet                              10683 non-null  uint8  
 13  Airline_Trujet                                10683 non-null  uint8  
 14  Airline_Vistara                               10683 non-null  uint8  
 15  Airline_Vistara Premium economy               10683 non-null  uint8  
 16  Source_Banglore                               10683 non-null  uint8  
 17  Source_Chennai                                10683 non-null  uint8  
 18  Source_Delhi                                  10683 non-null  uint8  
 19  Source_Kolkata                                10683 non-null  uint8  
 20  Source_Mumbai                                 10683 non-null  uint8  
 21  Destination_Banglore                          10683 non-null  uint8  
 22  Destination_Cochin                            10683 non-null  uint8  
 23  Destination_Delhi                             10683 non-null  uint8  
 24  Destination_Hyderabad                         10683 non-null  uint8  
 25  Destination_Kolkata                           10683 non-null  uint8  
 26  Destination_New Delhi                         10683 non-null  uint8  
 27  Total_Stops_0                                 10683 non-null  uint8  
 28  Total_Stops_1                                 10683 non-null  uint8  
 29  Total_Stops_2                                 10683 non-null  uint8  
 30  Total_Stops_3                                 10683 non-null  uint8  
 31  Total_Stops_4                                 10683 non-null  uint8  
 32  Additional_Info_1 Long layover                10683 non-null  uint8  
 33  Additional_Info_1 Short layover               10683 non-null  uint8  
 34  Additional_Info_2 Long layover                10683 non-null  uint8  
 35  Additional_Info_Business class                10683 non-null  uint8  
 36  Additional_Info_Change airports               10683 non-null  uint8  
 37  Additional_Info_In-flight meal not included   10683 non-null  uint8  
 38  Additional_Info_No Info                       10683 non-null  uint8  
 39  Additional_Info_No check-in baggage included  10683 non-null  uint8  
 40  Additional_Info_No info                       10683 non-null  uint8  
 41  Additional_Info_Red-eye flight                10683 non-null  uint8  
dtypes: float64(1), int64(3), uint8(38)
memory usage: 813.7 KB
None
&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 2671 entries, 0 to 2670
Data columns (total 42 columns):
 #   Column                                        Non-Null Count  Dtype  
---  ------                                        --------------  -----  
 0   Dep_Time                                      2671 non-null   int64  
 1   Arrival_Time                                  2671 non-null   int64  
 2   Duration                                      2671 non-null   int64  
 3   price                                         0 non-null      float64
 4   Airline_Air Asia                              2671 non-null   uint8  
 5   Airline_Air India                             2671 non-null   uint8  
 6   Airline_GoAir                                 2671 non-null   uint8  
 7   Airline_IndiGo                                2671 non-null   uint8  
 8   Airline_Jet Airways                           2671 non-null   uint8  
 9   Airline_Jet Airways Business                  2671 non-null   uint8  
 10  Airline_Multiple carriers                     2671 non-null   uint8  
 11  Airline_Multiple carriers Premium economy     2671 non-null   uint8  
 12  Airline_SpiceJet                              2671 non-null   uint8  
 13  Airline_Trujet                                2671 non-null   uint8  
 14  Airline_Vistara                               2671 non-null   uint8  
 15  Airline_Vistara Premium economy               2671 non-null   uint8  
 16  Source_Banglore                               2671 non-null   uint8  
 17  Source_Chennai                                2671 non-null   uint8  
 18  Source_Delhi                                  2671 non-null   uint8  
 19  Source_Kolkata                                2671 non-null   uint8  
 20  Source_Mumbai                                 2671 non-null   uint8  
 21  Destination_Banglore                          2671 non-null   uint8  
 22  Destination_Cochin                            2671 non-null   uint8  
 23  Destination_Delhi                             2671 non-null   uint8  
 24  Destination_Hyderabad                         2671 non-null   uint8  
 25  Destination_Kolkata                           2671 non-null   uint8  
 26  Destination_New Delhi                         2671 non-null   uint8  
 27  Total_Stops_0                                 2671 non-null   uint8  
 28  Total_Stops_1                                 2671 non-null   uint8  
 29  Total_Stops_2                                 2671 non-null   uint8  
 30  Total_Stops_3                                 2671 non-null   uint8  
 31  Total_Stops_4                                 2671 non-null   uint8  
 32  Additional_Info_1 Long layover                2671 non-null   uint8  
 33  Additional_Info_1 Short layover               2671 non-null   uint8  
 34  Additional_Info_2 Long layover                2671 non-null   uint8  
 35  Additional_Info_Business class                2671 non-null   uint8  
 36  Additional_Info_Change airports               2671 non-null   uint8  
 37  Additional_Info_In-flight meal not included   2671 non-null   uint8  
 38  Additional_Info_No Info                       2671 non-null   uint8  
 39  Additional_Info_No check-in baggage included  2671 non-null   uint8  
 40  Additional_Info_No info                       2671 non-null   uint8  
 41  Additional_Info_Red-eye flight                2671 non-null   uint8  
dtypes: float64(1), int64(3), uint8(38)
memory usage: 203.5 KB
None
</code></pre></div></div>

<h1 id="ÌäπÏÑ±-ÏÑ†ÌÉù-selectkbestÏÇ¨Ïö©">ÌäπÏÑ± ÏÑ†ÌÉù (SelectKBestÏÇ¨Ïö©)</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.feature_selection</span> <span class="kn">import</span> <span class="n">chi2</span><span class="p">,</span> <span class="n">SelectKBest</span>
<span class="n">selector1</span> <span class="o">=</span> <span class="n">SelectKBest</span><span class="p">(</span><span class="n">chi2</span><span class="p">,</span> <span class="n">k</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">X_train1</span> <span class="o">=</span> <span class="n">selector1</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">X_train_encoded</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
<span class="n">columns</span> <span class="o">=</span> <span class="n">X_train_encoded</span><span class="p">.</span><span class="n">columns</span>
<span class="n">X_train_encoded</span> <span class="o">=</span> <span class="n">X_train_encoded</span><span class="p">[</span><span class="n">columns</span><span class="p">[</span><span class="n">selector1</span><span class="p">.</span><span class="n">get_support</span><span class="p">()]]</span>
<span class="n">X_test_encoded</span> <span class="o">=</span> <span class="n">X_test_encoded</span><span class="p">[</span><span class="n">columns</span><span class="p">[</span><span class="n">selector1</span><span class="p">.</span><span class="n">get_support</span><span class="p">()]]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-33-6ef92159fc82&gt; in &lt;module&gt;()
      1 from sklearn.feature_selection import chi2, SelectKBest
      2 selector1 = SelectKBest(chi2, k=5)
----&gt; 3 X_train1 = selector1.fit_transform(X_train_encoded, y_train)
      4 columns = X_train_encoded.columns
      5 X_train_encoded = X_train_encoded[columns[selector1.get_support()]]


/usr/local/lib/python3.7/dist-packages/sklearn/base.py in fit_transform(self, X, y, **fit_params)
    853         else:
    854             # fit method of arity 2 (supervised transformation)
--&gt; 855             return self.fit(X, y, **fit_params).transform(X)
    856
    857


/usr/local/lib/python3.7/dist-packages/sklearn/feature_selection/_univariate_selection.py in fit(self, X, y)
    405             )
    406
--&gt; 407         self._check_params(X, y)
    408         score_func_ret = self.score_func(X, y)
    409         if isinstance(score_func_ret, (list, tuple)):


/usr/local/lib/python3.7/dist-packages/sklearn/feature_selection/_univariate_selection.py in _check_params(self, X, y)
    604             raise ValueError(
    605                 "k should be &gt;=0, &lt;= n_features = %d; got %r. "
--&gt; 606                 "Use k='all' to return all features." % (X.shape[1], self.k)
    607             )
    608


ValueError: k should be &gt;=0, &lt;= n_features = 4; got 5. Use k='all' to return all features.
</code></pre></div></div>

<h1 id="Ïä§ÏºÄÏùºÎßÅ-Î∞è-Î™®Îç∏-Íµ¨ÏÑ±-fit">Ïä§ÏºÄÏùºÎßÅ Î∞è Î™®Îç∏ Íµ¨ÏÑ±, fit</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>
<span class="c1"># StandardScaler
</span><span class="n">scaler</span> <span class="o">=</span> <span class="n">StandardScaler</span><span class="p">()</span>
<span class="n">X_train_scaled</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">X_train_encoded</span><span class="p">)</span>
<span class="n">X_train_scaled</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">X_train_scaled</span><span class="p">)</span>

<span class="n">X_test_scaled</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">X_test_encoded</span><span class="p">)</span>
<span class="n">X_test_scaled</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">X_test_scaled</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># modeling MLP
</span><span class="kn">from</span> <span class="nn">tensorflow.keras.models</span> <span class="kn">import</span> <span class="n">Sequential</span>
<span class="kn">from</span> <span class="nn">tensorflow.keras.layers</span> <span class="kn">import</span> <span class="n">Dense</span><span class="p">,</span> <span class="n">Dropout</span>
<span class="kn">from</span> <span class="nn">tensorflow.keras.optimizers</span> <span class="kn">import</span> <span class="n">Adam</span><span class="p">,</span> <span class="n">SGD</span>
<span class="kn">from</span> <span class="nn">tensorflow.keras</span> <span class="kn">import</span> <span class="n">regularizers</span>

<span class="n">model</span> <span class="o">=</span> <span class="n">Sequential</span><span class="p">()</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">,</span> <span class="n">input_dim</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span> <span class="n">kernel_initializer</span><span class="o">=</span><span class="s">'he_normal'</span><span class="p">))</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'tanh'</span><span class="p">,</span> <span class="n">kernel_initializer</span><span class="o">=</span><span class="s">'he_normal'</span><span class="p">,</span>
                <span class="n">kernel_regularizer</span><span class="o">=</span><span class="n">regularizers</span><span class="p">.</span><span class="n">l1</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span>   
                <span class="n">activity_regularizer</span><span class="o">=</span><span class="n">regularizers</span><span class="p">.</span><span class="n">l2</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
         <span class="p">)</span>
<span class="n">Dropout</span><span class="p">(</span><span class="mf">0.3</span><span class="p">)</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'sigmoid'</span><span class="p">,</span> <span class="n">kernel_initializer</span><span class="o">=</span><span class="s">'he_normal'</span><span class="p">))</span>
<span class="n">Dropout</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'linear'</span><span class="p">))</span>

<span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="s">'Adam'</span><span class="p">,</span> <span class="n">loss</span><span class="o">=</span><span class="s">'mse'</span><span class="p">,</span> <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'mae'</span><span class="p">])</span>

<span class="c1"># model fit
</span><span class="n">history</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train_scaled</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">batch_size</span> <span class="o">=</span> <span class="mi">256</span><span class="p">,</span> <span class="n">validation_split</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">epochs</span><span class="o">=</span><span class="mi">4000</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="loss-Î≥ÄÎèô-Í∑∏ÎûòÌîÑÎ°ú-ÌôïÏù∏">loss Î≥ÄÎèô Í∑∏ÎûòÌîÑÎ°ú ÌôïÏù∏</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="n">val_loss</span> <span class="o">=</span> <span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'val_loss'</span><span class="p">]</span>
<span class="n">val_mae</span> <span class="o">=</span> <span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'val_mae'</span><span class="p">]</span>
<span class="n">epochs</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">val_loss</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>


<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">epochs</span><span class="p">,</span> <span class="n">val_loss</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'val loss'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="/assets/images/project/source_1.png" width="90%" height="90%" /></p>

<blockquote>
  <p>..? ÎÑàÎ¨¥ Î™®Ïñë ÏôÑÎ≤ΩÌïú Í∑∏ÎûòÌîÑÎ•º Í∞ñÎäîÎã§.. ÏôúÏßÄ</p>
</blockquote>

<h1 id="Ïñ¥Îñ§-ÏòàÏ∏°Í∞íÏùÑ-Í∞ñÏßÄ">Ïñ¥Îñ§ ÏòàÏ∏°Í∞íÏùÑ Í∞ñÏßÄ‚Ä¶?</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test_encoded</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">10</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[9079.562],
       [9079.562],
       [9079.562],
       [9079.562],
       [9079.562],
       [9079.562],
       [9079.562],
       [9079.562],
       [9079.562],
       [9079.562]], dtype=float32)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># maeÍ∞Ä ÏµúÏÜåÎ°úÌïòÎäî ÌïòÎÇòÏùò Í∞íÏúºÎ°ú ÏàòÎ†¥Ìï¥Î≤ÑÎ¶º..
# Îî•Îü¨ÎãùÍπåÏßÄ ÌïÑÏöîÏóÜÎäî Îç∞Ïù¥ÌÑ∞Ïóê Îî•Îü¨ÎãùÏùÑ Ïç®Î≤ÑÎ¶¨Î©¥..
# Î≥µÏû°ÎèÑÎßå Ïò¨ÎùºÍ∞ÄÍ≥† ÏÑ±Îä•ÏùÄ ÎÇòÏò§ÏßÄ ÏïäÎäî Í≤É Í∞ôÎã§.
</span></code></pre></div></div>

<h1 id="ÏÜåÏû°ÎäîÏπº">ÏÜåÏû°ÎäîÏπº‚Ä¶!</h1>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="pj" /><category term="MLP" /><summary type="html"><![CDATA[ÌåêÎã§Ïä§ ÌîÑÎ°úÌååÏùºÎßÅ ÏΩîÎû©ÏóêÏÑú ÏûëÎèôÌïòÎèÑÎ°ù Î≤ÑÏ†ÑÏßÄÏ†ï ÏÑ§Ïπò]]></summary></entry><entry><title type="html">ÎèÑÏª§(docker)Î°ú Î¶¨ÎàÖÏä§ÌôòÍ≤ΩÏùÑ ÎßåÎì§Í≥† pyÌååÏùºÏùÑ Ïã§ÌñâÌï¥Î≥¥Ïûê.</title><link href="http://localhost:4000/de/docker/" rel="alternate" type="text/html" title="ÎèÑÏª§(docker)Î°ú Î¶¨ÎàÖÏä§ÌôòÍ≤ΩÏùÑ ÎßåÎì§Í≥† pyÌååÏùºÏùÑ Ïã§ÌñâÌï¥Î≥¥Ïûê." /><published>2022-03-25T00:00:00+09:00</published><updated>2022-03-25T00:00:00+09:00</updated><id>http://localhost:4000/de/docker</id><content type="html" xml:base="http://localhost:4000/de/docker/"><![CDATA[<h2 id="ÎèÑÏª§Í∞Ä-Î≠ê">ÎèÑÏª§Í∞Ä Î≠ê?</h2>
<p>Ïª®ÌÖåÏù¥ÎÑàÎ•º ÏÇ¨Ïö©ÌïòÍ≤å Ìï¥Ï£ºÎäî ÌîåÎû´ÌèºÏù¥Î©∞, Ïù¥ Ïª®ÌÖåÏù¥ÎÑàÎäî VM(Virtual Machine) Í≥º Í∞ÄÏû• ÎπÑÍµêÎ•º ÎßéÏù¥ÌïúÎã§.<br />
OS Î®ºÏ†Ä Ï†ïÌôïÌûà ÎßêÌïòÎ©¥, Ïª¥Ìì®ÌÑ∞Î•º ÏÇ¨Ïö©ÏûêÍ∞Ä Ìé∏ÌïòÍ≤å Ïì∏ Ïàò ÏûàÎèÑÎ°ù ÌïòÎäî ÏÜåÌîÑÌä∏Ïõ®Ïñ¥Ïù¥Î©∞, ÏïàÎìúÎ°úÏù¥Îìú, iOS, ÏúàÎèÑÏö∞, macOS Îì±Ïù¥ ÏûàÎã§.<br />
VMÏùÄ ÏÇ¨Ïö©Ïûê OSÏùò Í∞ÅÏ¢Ö ÏÜåÏä§Îì§ÏùÑ Í∞ÅÍ∞Å Ï†ÑÏö©ÏúºÎ°ú Ìï†ÎãπÌïòÏó¨ Í∞ÄÏÉÅOSÎ•º ÎßåÎìúÎäî Î∞©ÏãùÏù¥ÎùºÎ©¥,<br />
Ïª®ÌÖåÏù¥ÎÑàÎäî dockerÎùºÎäî Ìà¥ÏùÑ Ïù¥Ïö©ÌïòÏó¨, Í∑∏ ÏúÑÏóêÏÑú Ïù¥ÎØ∏ÏßÄ(Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò)ÏùÑ Ïã§ÌñâÌïòÎäî Î∞©ÏãùÏù¥Îã§. (ÏÜåÏä§Î•º Ìï†ÎãπÌïòÎäî Í∞úÎÖêÏù¥ÏïÑÎãò, Í∞ÅÍ∞Å Ï†úÌïúÏùÄ Ìï† Ïàò ÏûàÏùå)</p>

<blockquote>
  <p>Î™©Ï†Å<br />
Îã§Î•∏ OSÏóêÏÑúÎèÑ ÏûëÎèôÌïòÎäî ÏÑúÎπÑÏä§Î•º Ïù¥ÎØ∏ÏßÄÎ°ú ÎßåÎì§Í≥† Î∞∞Ìè¨ÌïòÍ≤å ÌïúÎã§.</p>
</blockquote>

<blockquote>
  <p>Ïû•Ï†ê<br />
VMÎ≥¥Îã§ Í∞ÄÎ≥çÍ≥† Îπ†Î•¥Îã§.<br />
Î∞∞Ìè¨Í∞Ä Ïö©Ïù¥ÌïòÎã§.<br />
Ï†ÅÏùÄ Ïö©ÎüâÏùò Ïù¥ÎØ∏ÏßÄÎ°ú Í¥ÄÎ¶¨ Í∞ÄÎä•ÌïòÎã§.</p>
</blockquote>

<h2 id="ÎèÑÏª§ÌååÏùºdockerfile">ÎèÑÏª§ÌååÏùº(Dockerfile)</h2>
<p>Í∞ÅÍ∞Å ÎèÖÎ¶ΩÏúºÎ°ú ÏûëÎèôÌïòÎäî ÌååÏùºÏùÑ Ïù¥ÎØ∏ÏßÄ(image)ÎùºÍ≥† ÌïòÎäîÎç∞, Ïù¥ Ïù¥ÎØ∏ÏßÄÎ•º Ïñ¥ÎñªÍ≤å ÎπåÎìúÌï† Í≤ÉÏù∏ÏßÄ Ï†ÅÏñ¥ÎÜìÎäî Î¨∏ÏÑú. (Ïù¥Î¶ÑÏù¥ Î¨¥Ï°∞Í±¥ Dockerfile)</p>
<blockquote>
  <blockquote>
    <p>Í∞ÑÎã® Î™ÖÎ†πÏñ¥ <br />
FROM : Î≤†Ïù¥Ïä§ Ïù¥ÎØ∏ÏßÄ<br />
RUN : Ïª®ÌÖåÏù¥ÎÑà ÏÉùÏÑ± Ï†Ñ Î™ÖÎ†πÏñ¥Î•º Ïã§ÌñâÌïúÎã§.<br />
COPY a b: a ÌååÏùºÏùÑ Ìï®Íªò Ïª®ÌÖåÏù¥ÎÑà bÍ≤ΩÎ°úÏóê Ïù¥ÎØ∏ÏßÄÎ°ú ÎπåÎìúÌïúÎã§.  (..ÏùÄ dockerfileÍ≥º Í∞ôÏùÄÍ≤ΩÎ°úÎÇ¥ Ï†ÑÎ∂Ä)<br />
ENV : ÌôòÍ≤ΩÎ≥ÄÏàò ÏÑ§Ï†ï
ENTRYPOINT : Ïª®ÌÖåÏù¥ÎÑàÎ•º Ïã§ÌñâÌïòÎ©¥ÏÑú ÏàòÌñâÌïòÎäî Î™ÖÎ†π<br />
CMD : ENTRYPOINTÏ≤òÎüº Ïã§ÌñâÌïòÎ©¥ÏÑú ÏàòÌñâÌïòÎäî Î™ÖÎ†πÏù∏Îç∞ docker run ÏàòÌñâÏãú(Ïù¥ÎØ∏ÏßÄ Ïã§Ìñâ) Ïù∏ÏûêÍ∞íÏùÑ Ï∂îÍ∞ÄÌï¥ÏÑú Îã§Î•∏Í∞íÏùÑ ÎÑ£ÏùÑ Ïàò ÏûàÎã§.<br />
WORKDIR : ÏûëÏóÖ ÎîîÎ†âÌÜ†Î¶¨ ÏÑ§Ï†ï</p>
  </blockquote>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>FROM ubuntu:18.04

RUN apt update -y
RUN apt install python3.6 -y
RUN apt install python3-pip -y

RUN apt update -y

# requirements ÏûàÏúºÎ©¥ ÏïÑÎûòÍ∫º Ïã§Ìñâ
# COPY ./ubuntu1804/requirements.txt /requirements.txt
# RUN pip3 install -r /requirements.txt
# RUN apt update -y
# Í∞ôÏùÄ Ìè¥ÎçîÎÇ¥ ÌååÏùº Î≥µÏÇ¨
COPY . .

# test.py ÌååÏù¥Ïç¨ÏúºÎ°ú Ïã§Ìñâ

RUN apt update -y


# Í∞ÅÏ¢Ö ÌïúÍ∏Ä Ìè∞Ìä∏ ÏÑ§Ïπò
RUN apt install language-pack-ko -y
RUN apt install fonts-nanum -y
RUN apt install fonts-nanum-coding -y
RUN apt install fonts-noto-cjk -y

# ÌôòÍ≤ΩÎ≥ÄÏàò ÏßÄÏ†ï
ENV LANG ko_KR.UTF-8
ENV LANGUAGE ko_KR.UTF-8
ENV LC_ALL ko_KR.UTF-8

# Ïª®ÌÖåÏù¥ÎÑàÎ•º Ïã§ÌñâÌï† Îïå ÏàòÌñâÌïòÎäî Î™ÖÎ†πÏñ¥
CMD ["test.py"]

ENTRYPOINT ["python3"]
WORKDIR /root
RUN echo 'alias python=python3.6' &gt;&gt; .bashrc

WORKDIR /
</code></pre></div></div>

<blockquote>
  <p>ÏúÑ ÎÇ¥Ïö©Ïùò Dockerfile Î¨∏ÏÑúÏôÄ Ìï®Íªò ÏûàÎäî test.pyÍ∞Ä Ïã§ÌñâÎê®Í≥º ÎèôÏãúÏóê Î¶¨ÎàÖÏä§ ÌôòÍ≤Ω Ïª®ÌÖåÏù¥ÎÑàÍ∞Ä ÏÉùÏÑ±ÎêúÎã§.</p>
</blockquote>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="de" /><summary type="html"><![CDATA[ÎèÑÏª§Í∞Ä Î≠ê? Ïª®ÌÖåÏù¥ÎÑàÎ•º ÏÇ¨Ïö©ÌïòÍ≤å Ìï¥Ï£ºÎäî ÌîåÎû´ÌèºÏù¥Î©∞, Ïù¥ Ïª®ÌÖåÏù¥ÎÑàÎäî VM(Virtual Machine) Í≥º Í∞ÄÏû• ÎπÑÍµêÎ•º ÎßéÏù¥ÌïúÎã§. OS Î®ºÏ†Ä Ï†ïÌôïÌûà ÎßêÌïòÎ©¥, Ïª¥Ìì®ÌÑ∞Î•º ÏÇ¨Ïö©ÏûêÍ∞Ä Ìé∏ÌïòÍ≤å Ïì∏ Ïàò ÏûàÎèÑÎ°ù ÌïòÎäî ÏÜåÌîÑÌä∏Ïõ®Ïñ¥Ïù¥Î©∞, ÏïàÎìúÎ°úÏù¥Îìú, iOS, ÏúàÎèÑÏö∞, macOS Îì±Ïù¥ ÏûàÎã§. VMÏùÄ ÏÇ¨Ïö©Ïûê OSÏùò Í∞ÅÏ¢Ö ÏÜåÏä§Îì§ÏùÑ Í∞ÅÍ∞Å Ï†ÑÏö©ÏúºÎ°ú Ìï†ÎãπÌïòÏó¨ Í∞ÄÏÉÅOSÎ•º ÎßåÎìúÎäî Î∞©ÏãùÏù¥ÎùºÎ©¥, Ïª®ÌÖåÏù¥ÎÑàÎäî dockerÎùºÎäî Ìà¥ÏùÑ Ïù¥Ïö©ÌïòÏó¨, Í∑∏ ÏúÑÏóêÏÑú Ïù¥ÎØ∏ÏßÄ(Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò)ÏùÑ Ïã§ÌñâÌïòÎäî Î∞©ÏãùÏù¥Îã§. (ÏÜåÏä§Î•º Ìï†ÎãπÌïòÎäî Í∞úÎÖêÏù¥ÏïÑÎãò, Í∞ÅÍ∞Å Ï†úÌïúÏùÄ Ìï† Ïàò ÏûàÏùå)]]></summary></entry><entry><title type="html">CNN Íµ¨Ï°∞ Ïù¥Ìï¥</title><link href="http://localhost:4000/ds/CNN/" rel="alternate" type="text/html" title="CNN Íµ¨Ï°∞ Ïù¥Ìï¥" /><published>2022-03-19T00:00:00+09:00</published><updated>2020-03-19T00:00:00+09:00</updated><id>http://localhost:4000/ds/CNN</id><content type="html" xml:base="http://localhost:4000/ds/CNN/"><![CDATA[<h2 id="cnn-Ïùò-Î™©Ï†Å">CNN Ïùò Î™©Ï†Å</h2>
<p>Ïª¥Ìì®ÌÑ∞Ïóê Ïù¥ÎØ∏ÏßÄÎ•º Ïù¥Ìï¥ÏãúÌÇ§Îäî Î∞©Î≤ïÏùÑ ÏÉùÍ∞ÅÌï¥Î≥¥Ïûê.<br />
Ïù¥ÎØ∏ÏßÄÎäî RGB, BGRÏùò 3ÏûêÎ¶¨ Ïà´ÏûêÍ∞Ä Î™®Îì† Ï†êÎì§ÏùÑ Íµ¨ÏÑ±ÌïúÎã§.<br />
Í∑∏Î†áÎã§Î©¥ Í∞ïÏïÑÏßÄ ÏÇ¨ÏßÑ 1Ïùò Î™®Îì† RGB Ïà´ÏûêÎì§ÏùÑ Í∑∏ÎåÄÎ°ú Ïª¥Ìì®ÌÑ∞ÏóêÍ≤å ÏïåÎ†§Ï§ÄÎã§Î©¥,<br />
Ïª¥Ìì®ÌÑ∞Îäî Íµ¨ÎèÑÎßå ÏÇ¥Ïßù Î∞îÎÄê Í∞ïÏïÑÏßÄ ÏÇ¨ÏßÑ 2Îäî Ï†ÑÌòÄ Îã§Î•∏ ÏÇ¨ÏßÑÏù¥ÎùºÍ≥† ÏÉùÍ∞ÅÌï† Í≤ÉÏù¥Îã§.</p>

<p>Ïù¥Î•º ÏúÑÌï¥ CNNÏóêÏÑúÎäî ‚ÄòÌïÑÌÑ∞‚ÄôÎùºÎäî Í∞úÎÖêÏùÑ Ïù¥Ïö©ÌïòÏó¨ ‚ÄòÌäπÏßï‚ÄôÏùÑ Ï∂îÏ∂úÌïúÎã§.</p>

<h2 id="Ïù¥Í≤ÉÎßå-Ïù¥Ìï¥ÌïòÏûê-no1">Ïù¥Í≤ÉÎßå Ïù¥Ìï¥ÌïòÏûê. No.1</h2>
<p><img src="/assets/images/ds/source_0.png" width="60%" height="60%" /><br />
ÌïÑÌÑ∞Îäî ÏúÑÏôÄÍ∞ôÏù¥ Ï†ÅÏö©ÎêúÎã§. ÌïÑÌÑ∞ ÌïòÎÇòÌïòÎÇòÍ∞Ä Í∞ÄÏ§ëÏπòÏùò Ïó≠Ìï†ÏùÑ ÌïòÎ©∞, ÌïÑÌÑ∞Ïùò Î™®ÏñëÏóê Îî∞Îùº Ïù¥ÎØ∏ÏßÄÏùò Ïñ¥Îñ§ ÌäπÏßïÎì§ÏùÑ Ï∂îÏ∂úÌïòÎäîÏßÄ Í≤∞Ï†ïÎêúÎã§.</p>

<h2 id="Ïù¥Í≤ÉÎßå-Ïù¥Ìï¥ÌïòÏûê-no2">Ïù¥Í≤ÉÎßå Ïù¥Ìï¥ÌïòÏûê. No.2</h2>
<p><img src="/assets/images/ds/source_1.png" width="60%" height="60%" /><br />
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-<br />
CNNÏùò LayerÎ•º ÌïòÎÇòÏî© ÏåìÍ≥† ÏûàÎã§.<br />
Ï≤´Î≤àÏß∏ Conv2D ÏΩîÎìúÎ•º Î≥¥Ïûê,  (32,32) ÏÇ¨Ïù¥Ï¶àÏùò 3Í≤π(rgb, bgr) Ïù¥ÎØ∏ÏßÄÎ•º 3by3 ÌïÑÌÑ∞ Í∞ÄÏ§ëÏπòÎ•º Ïù¥Ïö©ÌïòÏó¨ 32Í∞úÏùò feature mapÏùÑ ÎßåÎì§Í≤†Îã§Í≥† ÎêòÏñ¥ÏûàÎã§.<br />
Í∑∏ Í≤∞Í≥º, (30,30) ÏÇ¨Ïù¥Ï¶àÏùò 32Í≤π ÌîºÏ≥êÎßµÏùÑ ÎßåÎì§ÏóàÍ≥†, paramÏàòÎäî 896Í∞úÏù¥Îã§.<br />
Í∞ÄÏ§ëÏπòÏùò Í∞ØÏàòÎäî Ïã†Í≤ΩÎßùÏùò ÏõêÎ¶¨ÏóêÏÑú Í∞Å Í∞ÄÏ§ëÏπòÎ•º ÌïÑÌÑ∞Î°ú Í∞ñÎäîÎã§Í≥† ÏÉùÍ∞ÅÌïòÎ©¥ ÏâΩÎã§.<br />
3 (=input) x 32(=output) x 9(=3*3ÌïÑÌÑ∞) + 32(ÌçºÏÖâÌä∏Î°† Ïã†Í≤ΩÎßù nodeÏôÄ Í∞ôÏù¥ Í∞Å featureÎßµ Í∞ÄÏ§ëÏπò)<br />
=895</p>

<h2 id="Ïù¥Í≤ÉÎßå-Ïù¥Ìï¥ÌïòÏûê-no3">Ïù¥Í≤ÉÎßå Ïù¥Ìï¥ÌïòÏûê. No.3</h2>
<p><img src="/assets/images/ds/source_2.png" width="40%" height="40%" /><br />
No.2Ïùò ÏòàÏãúÏóêÏÑú (32,32)Í∞Ä (30,30)ÏúºÎ°ú ÎêòÎäî Í±¥ 3*3ÌïÑÌÑ∞Î•º ÎåÄÏûÖÌï¥Î≥¥Î©¥ ÏñºÏ∂î Î∞îÎ°ú Ïïå Ïàò ÏûàÎäîÎç∞,<br />
strideÎÇò paddingÏù¥ Îì§Ïñ¥Í∞ÄÎ©¥ Ìó∑Í∞àÎ¶¥ Ïàò ÏûàÎã§. ÏúÑ ÏãùÏóê ÎåÄÏûÖÌï¥ÏÑú Ï†ïÌôïÌûà Íµ¨Ìï† Ïàò ÏûàÎã§.</p>

<h2 id="ÌÇ§ÏõåÎìú-Ï†ïÎ¶¨">ÌÇ§ÏõåÎìú Ï†ïÎ¶¨</h2>
<ol>
  <li>ÌïÑÌÑ∞ (kernel, filter)</li>
  <li>ÌîºÏ≥êÎßµ (feature map)</li>
  <li>Ìå®Îî© (padding, zero padding) : Í∞ÄÏû•ÏûêÎ¶¨ÏóêÏÑú ÌïÑÌÑ∞ÎïåÎ¨∏Ïóê ÏÜåÏã§ÎêòÎäî Îç∞Ïù¥ÌÑ∞Î•º ÎßâÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©, Ïù¥ÎØ∏ÏßÄÎ•º ÌïúÎ≤à 0ÏúºÎ°ú Í∞êÏã∏Îäî Í≤É.
    <ul>
      <li>ÏÇ¨Ïù¥Ï¶àÏóê Îî∞Îùº Î∂ÑÎ•ò : valid padding(Ìå®Îî©ÏïàÌï®),<br />
 full padding (ÌïÑÌÑ∞ÏÇ¨Ïù¥Ï¶à-1 ÎßåÌÅºÎëêÍªòÎ°ú Î™®Îëê Í∞êÏã∏Îäî Í≤É, edgeÏùò Îç∞Ïù¥ÌÑ∞ ÏÜêÏã§ÏùÑ ÎßâÎäîÎã§Îäî ÏùòÏùòÎ•º Í∞ÄÏßÑÎã§),<br />
 same padding(inputÏù¥ÎØ∏ÏßÄÏôÄ outputÏù¥ÎØ∏ÏßÄ ÏÇ¨Ïù¥Ï¶àÍ∞Ä Í∞ôÎèÑÎ°ù Ìå®Îî©, ÏÇ¨Ïù¥Ï¶àÍ∞Ä Ï†êÏ†ê ÏûëÏïÑÏßÄÎäî ÌòÑÏÉÅÏùÑ ÎßâÎäî Îã§Îäî ÏùòÎØ∏Í∞Ä ÏûàÏùå.)</li>
    </ul>
  </li>
  <li>Ïä§Ìä∏ÎùºÏù¥Îìú (stride) : Ïª§ÎÑêÏùÑ ÎåÄÏûÖÌï† Îïå, Ïù¥ÎèôÌïòÎäî Ïπ∏ ÏàòÎ•º ÎßêÌïúÎã§. (1Ïù¥Î©¥ ÌïúÏπ∏Ïî© Ïù¥Îèô)</li>
</ol>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="ds" /><summary type="html"><![CDATA[CNN Ïùò Î™©Ï†Å Ïª¥Ìì®ÌÑ∞Ïóê Ïù¥ÎØ∏ÏßÄÎ•º Ïù¥Ìï¥ÏãúÌÇ§Îäî Î∞©Î≤ïÏùÑ ÏÉùÍ∞ÅÌï¥Î≥¥Ïûê. Ïù¥ÎØ∏ÏßÄÎäî RGB, BGRÏùò 3ÏûêÎ¶¨ Ïà´ÏûêÍ∞Ä Î™®Îì† Ï†êÎì§ÏùÑ Íµ¨ÏÑ±ÌïúÎã§. Í∑∏Î†áÎã§Î©¥ Í∞ïÏïÑÏßÄ ÏÇ¨ÏßÑ 1Ïùò Î™®Îì† RGB Ïà´ÏûêÎì§ÏùÑ Í∑∏ÎåÄÎ°ú Ïª¥Ìì®ÌÑ∞ÏóêÍ≤å ÏïåÎ†§Ï§ÄÎã§Î©¥, Ïª¥Ìì®ÌÑ∞Îäî Íµ¨ÎèÑÎßå ÏÇ¥Ïßù Î∞îÎÄê Í∞ïÏïÑÏßÄ ÏÇ¨ÏßÑ 2Îäî Ï†ÑÌòÄ Îã§Î•∏ ÏÇ¨ÏßÑÏù¥ÎùºÍ≥† ÏÉùÍ∞ÅÌï† Í≤ÉÏù¥Îã§.]]></summary></entry><entry><title type="html">ÏÇ¨ÎûåÏñºÍµ¥Ïóê Ïä§ÌÉÄÏùº Î∞îÍøîÎ≥¥Í∏∞</title><link href="http://localhost:4000/pj/stylegan/" rel="alternate" type="text/html" title="ÏÇ¨ÎûåÏñºÍµ¥Ïóê Ïä§ÌÉÄÏùº Î∞îÍøîÎ≥¥Í∏∞" /><published>2022-03-10T00:00:00+09:00</published><updated>2022-03-13T00:00:00+09:00</updated><id>http://localhost:4000/pj/stylegan</id><content type="html" xml:base="http://localhost:4000/pj/stylegan/"><![CDATA[<h2 id="Î™©Ìëú">Î™©Ìëú</h2>
<p>ÏûÑÏùòÏùò Ï¥àÏÉÅÍ∂å ÏóÜÎäî ÏñºÍµ¥ÏùÑ ÌäπÏ†ï Ïä§ÌÉÄÏùºÏùÑ ÏûÖÌòÄ ÎßåÎì§Í∏∞.</p>

<h2 id="Î∞©Î≤ï">Î∞©Î≤ï</h2>
<p>ÏûÑÏãúÎ°ú ÏÉùÏÑ±Ìïú ÏÇ¨ÎûåÏñºÍµ¥(Ïã§Ï°¥x) Ïù¥ÎØ∏ÏßÄÏóê ÏõêÌïòÎäî ÌäπÏ†ï Ïä§ÌÉÄÏùºÏùÑ Í∞ÄÏßÑ ÏÇ¨Îûå(Ïã§Ï°¥o)Ïùò Ïù¥ÎØ∏ÏßÄÎ•º Ï†ÅÏö©ÌïòÏó¨ ÏÉàÎ°≠Í≤å ÏÉùÏÑ±.</p>

<ol>
  <li>styleGAN2-ada Î™®Îç∏Ïùò ffhq preTrained Í∞ÄÏ§ëÏπòÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÏñºÍµ¥ÏÉùÏÑ±.</li>
  <li>ÏõêÌïòÎäî Ïä§ÌÉÄÏùºÏùò ÏÇ¨ÎûåÏÇ¨ÏßÑÏùò Ïä§ÌÉÄÏùº Î≤°ÌÑ∞Îì§ÏùÑ Ï∂îÏ∂ú (PSP Î™®Îç∏Ïùò ÏùºÎ∂Ä ÏÇ¨Ïö©)</li>
  <li>1Î≤àÏóêÏÑú ÏÉùÏÑ±Ìïú Ïù¥ÎØ∏ÏßÄÎ•º inversionÌïòÏó¨ Îã§Ïãú Ïù¥ÎØ∏ÏßÄÎ•º ÏÉùÏÑ±ÌïòÎäî Í≥ºÏ†ïÏóêÏÑú 2Î≤àÏùò Ïä§ÌÉÄÏùº Î≤°ÌÑ∞Îì§ÏùÑ injectÌïòÏó¨ ÏµúÏ¢Ö ÏÉùÏÑ±.</li>
</ol>

<p><img src="/assets/images/source_26.png" width="100%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<h2 id="stylegan2---ada-Í∞ÑÎã®-ÏöîÏïΩ">StyleGAN2 - ada Í∞ÑÎã® ÏöîÏïΩ</h2>
<p>GAN (latent vectorÎ°ú Î∂ÄÌÑ∞ Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±) Î™®Îç∏ Ï§ëÏóêÏÑú<br />
styleGAN (latent vectorÎ•º style Î≥ÑÎ°ú ÏÉùÏÑ±Îêú Ïó¨Îü¨ w-vectorÎ°ú ÎßåÎì§Ïñ¥ Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±) Ïù¥ ÏûàÎã§.</p>

<p>adaÎäî Îç∞Ïù¥ÌÑ∞ Ï¶ùÍ∞ïÍ∏∞Î≤ï(Ï†ÅÏùÄ Îç∞Ïù¥ÌÑ∞Î°ú Îã§ÏñëÌïú Îç∞Ïù¥ÌÑ∞ÏÉùÏÑ±, ÏùºÎ∞òÌôî Ìö®Í≥º + Îç∞Ïù¥ÌÑ∞ Ïàò ÎäòÎ¶¨Îäî Ìö®Í≥º)</p>

<h2 id="psppixel2style2pixel-Í∞ÑÎã®-ÏöîÏïΩ">PSP(pixel2style2pixel) Í∞ÑÎã® ÏöîÏïΩ</h2>
<p>Íµ¨Ï°∞Î•º Îëê Î∂ÄÎ∂ÑÏúºÎ°ú ÎÇòÎàå Ïàò ÏûàÎäîÎç∞,</p>
<ol>
  <li>psp encoder : Ïù¥ÎØ∏ÏßÄÎ•º Îß§ÌïëÌïòÏó¨ w-vectorÎ•º ÏÉùÏÑ±Ìï®.</li>
  <li>styleGAN generator  : w-vectorÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Ïù¥ÎØ∏ÏßÄÎ•º ÏÉùÏÑ±(styleGAN Î∞©ÏãùÍ≥º Í∞ôÏù¥ Ìï¥ÏÉÅÎèÑÎ•º Ïò¨Î¶¨Î©¥ÏÑú Ïù¥ÎØ∏ÏßÄ ÏÉùÏÑ±.)</li>
</ol>

<p>Ïù¥ Íµ¨Ï°∞Î•º Ïù¥Ïö©Ìï¥ÏÑú Ïó¨Îü¨ Í∏∞Îä•ÏúºÎ°ú ÏÇ¨Ïö©Í∞ÄÎä• (ffhq_encode, celeb_seg_to_face, toonify Îì±)</p>

<h2 id="test-Ïù¥ÎØ∏ÏßÄ">test Ïù¥ÎØ∏ÏßÄ</h2>
<p>styleGAN2-ada, ffhq-pretrained Î°ú ÏÉùÏÑ±Ìïú Ïù¥ÎØ∏ÏßÄ Îì§<br />
<img src="/assets/images/project/test_img0.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/test_img10.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/test_img19.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/test_img4.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/test_img12.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/test_img16.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<h2 id="Í≤∞Í≥º-Ïù¥ÎØ∏ÏßÄ">Í≤∞Í≥º Ïù¥ÎØ∏ÏßÄ</h2>
<blockquote>
  <p>Ïä§ÌÉÄÏùºÏù¥ÎØ∏ÏßÄ</p>
</blockquote>

<p><img src="/assets/images/project/Îã®Î∞ú.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>
<blockquote>
  <p>Í≤∞Í≥º Ïù¥ÎØ∏ÏßÄ<br />
ÏàúÏÑúÎåÄÎ°ú <strong>‚ÄúÏä§ÌÉÄÏùº Ï†ÅÏö©Ï†Ñ‚Äù</strong> ::::::: <strong>‚ÄúwÎ≤°ÌÑ∞ Ï§ë ÎûúÎç§ÏúºÎ°ú 1 Í∞úÎßå Ï†ÅÏö©‚Äù</strong> ::::::: <strong>‚ÄúÎ™®Îì† wÎ≤°ÌÑ∞Î•º Ï†ÅÏö©Ìïú Í≤ΩÏö∞‚Äù</strong></p>
</blockquote>

<p><img src="/assets/images/project/test_img0.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/0/mask_some.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/0/mask_all.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<p><img src="/assets/images/project/test_img10.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/10/mask_some.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/10/mask_all.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<p><img src="/assets/images/project/test_img19.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/19/mask_some.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" />
<img src="/assets/images/project/19/mask_all.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<h2 id="Í≤∞Î°†">Í≤∞Î°†</h2>

<p>Í≤∞Í≥ºÎ•º Ìï¥ÏÑùÌïòÏûêÎ©¥</p>
<ol>
  <li>Ïä§ÌÉÄÏùºÏù¥ÎØ∏ÏßÄÏùò ÏñºÍµ¥Ìòï, Î®∏Î¶¨Ïä§ÌÉÄÏùº Îì±Ïóê ÏõêÎ≥∏Ïù¥ÎØ∏ÏßÄÏùò ÎààÏΩîÏûÖ, ÌîºÎ∂Ä Îì±ÏùÑ Ï†ÅÏö©ÏãúÏºú Ïù¥ÎØ∏ÏßÄÎ•º ÏÉùÏÑ±ÌïúÎã§.</li>
  <li>ÎûúÎç§Ìïú wÎ≤°ÌÑ∞Î•º Ï†ÅÏö©ÌñàÏùÑ Îïå, Ïä§ÌÉÄÏùº Ïù¥ÎØ∏ÏßÄÏùò Ï†ïÌôïÌûà Ïñ¥Îñ§ ÌäπÏßïÏùÑ Îã¥ÏùÄ wÎ≤°ÌÑ∞Í∞Ä Ï†ÅÏö©Îêú Í≤ÉÏù∏ÏßÄ ÏïåÍ∏∞ ÌûòÎì§Îã§..<br />
(Î¨ºÎ°† Ïä§ÌÉÄÏùºÏù¥ÎØ∏ÏßÄÏôÄ Î¨¥Ïñ∏Í∞Ä ÎãÆÏïÑÏßÄÍ∏¥ ÌïúÎã§.)</li>
</ol>

<p>ÏÑ±Í≥µÏ†ÅÏù∏Í∞ÄÏùò Ïó¨Î∂ÄÎäî Ïä§ÌÉÄÏùº Ïù¥ÎùºÎäî Ïï†Îß§Ìïú Îã®Ïñ¥Ïóê Ïñ¥Îñ§ Í±∏ Ìè¨Ìï®ÏãúÌÇ§ÎäêÎÉêÏóê Îî∞Îùº Ìï¥ÏÑùÏù¥ Îã§Î•º Í≤É Í∞ôÎã§.<br />
ÏñºÍµ¥Ìòï, Î®∏Î¶¨Ïä§ÌÉÄÏùºÏùÑ ‚ÄòÏä§ÌÉÄÏùº‚ÄôÏù¥ÎùºÍ≥† ÌïúÎã§Î©¥, ÏÑ±Í≥µÏóê Í∞ÄÍπùÎã§Í≥† Î≥º Ïàò ÏûàÍ≤†Îã§!<br />
Îã§Îßå ÏõêÌïòÎäî Ïä§ÌÉÄÏùº(Î®∏Î¶¨Ïä§ÌÉÄÏùº, ÏñºÍµ¥Ìòï Ï§ë ÌïòÎÇòÎ•º ÌÉùÌïòÍ≥† Ïã∂ÏùÄ Í≤ΩÏö∞)ÏùÑ Ï†ÅÏö©ÌïòÎäîÎç∞ÏóêÎäî Ïã§ÌóòÏ†ÅÏù∏ ÏãúÎèÑÍ∞Ä ÌïÑÏöîÌï¥ Î≥¥Ïù∏Îã§.</p>

<h2 id="Î†àÌè¨ÏßÄÌÜ†Î¶¨-ÎßÅÌÅ¨">Î†àÌè¨ÏßÄÌÜ†Î¶¨ ÎßÅÌÅ¨</h2>
<p><a href="https://github.com/chan9480/Style_image_GAN">https://github.com/chan9480/Style_image_GAN</a></p>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="pj" /><category term="styleGAN2" /><category term="PSP" /><summary type="html"><![CDATA[Î™©Ìëú ÏûÑÏùòÏùò Ï¥àÏÉÅÍ∂å ÏóÜÎäî ÏñºÍµ¥ÏùÑ ÌäπÏ†ï Ïä§ÌÉÄÏùºÏùÑ ÏûÖÌòÄ ÎßåÎì§Í∏∞.]]></summary></entry><entry><title type="html">Îç∞Ïù¥ÌÑ∞ Ïù∏ÏΩîÎî©(encoding)</title><link href="http://localhost:4000/ds/encoding/" rel="alternate" type="text/html" title="Îç∞Ïù¥ÌÑ∞ Ïù∏ÏΩîÎî©(encoding)" /><published>2022-03-06T00:00:00+09:00</published><updated>2022-03-06T00:00:00+09:00</updated><id>http://localhost:4000/ds/encoding</id><content type="html" xml:base="http://localhost:4000/ds/encoding/"><![CDATA[<h2 id="Ïù∏ÏΩîÎî©ÏùÄ-Ïôú-ÌïòÎäîÍ±∞">Ïù∏ÏΩîÎî©ÏùÄ Ïôú ÌïòÎäîÍ±∞?</h2>
<p>Îç∞Ïù¥ÌÑ∞ÏóêÎäî Ïó∞ÏÜçÏ†ÅÏù∏ Ïà´ÏûêÎßå ÏûàÎäîÍ≤å ÏïÑÎãàÎã§.<br />
Î¨∏ÏûêÏó¥Ïùò Ïπ¥ÌÖåÍ≥†Î¶¨Ìòï featureÏùº ÏàòÎèÑ,<br />
Ïà´ÏûêÎùº ÌïòÎçîÎùºÎèÑ ÎπÑÏó∞ÏÜçÏ†ÅÏù∏ Ïπ¥ÌÖåÍ≥†Î¶¨Ìòï featureÎèÑ ÏûàÎã§.<br />
(Ïòà: ÏÇ¨ÎäîÏßÄÏó≠(‚ÄúÏàòÏú†Îèô‚Äù, ‚ÄúÏù∏ÏàòÎèô‚Äù ‚Ä¶), ÌèâÏ†ê(‚ÄúÎß§Ïö∞Î≥ÑÎ°ú‚Äù,‚ÄùÎ≥ÑÎ°ú‚Äù, ‚Ä¶ , ‚ÄúÎß§Ïö∞Ï¢ãÏùå‚Äù))</p>

<p>Ïù∏ÏΩîÎî©ÏùÄ Ïù¥Îü¨Ìïú Ïπ¥ÌÖåÍ≥†Î¶¨Ìòï featureÎì§Ïóê ÎåÄÌïòÏó¨ ‚ÄòÎç∞Ïù¥ÌÑ∞‚ÄôÎ°úÏç® Ïú†ÏùòÎØ∏ÌïòÎèÑÎ°ù Ïà´ÏûêÎ°ú Î∞îÍøîÏ£ºÎäî Ïó≠Ìï†ÏùÑ ÌïúÎã§.</p>

<h2 id="Ïù∏ÏΩîÎî©Ïùò-Ï¢ÖÎ•òÏôÄ-Í∞ÑÎã®-Ï†ïÎ¶¨">Ïù∏ÏΩîÎî©Ïùò Ï¢ÖÎ•òÏôÄ Í∞ÑÎã® Ï†ïÎ¶¨</h2>
<p>Î≥∏Îûò Îç∞Ïù¥ÌÑ∞<br />
<img src="/assets/images/source_27.png" width="30%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<ol>
  <li>One Hot Encoding<br />
ÌïòÎÇòÏùò featureÍ∞Ä Í∞ñÎäî Î≤îÏ£º Ï†ÑÏ≤¥Ïóê ÎåÄÌïòÏó¨ ‚ÄòÏù¥Îã§‚Äô, ‚ÄòÏïÑÎãàÎã§‚ÄôÎ°ú Î∂ÑÎ•òÌïòÏó¨ 0, 1ÏùÑ Í∞ñÎäî featureÎ•º ÏÉùÏÑ±.<br />
(ÏÇ¨ÎäîÏßÄÏó≠Ïùò Ï¢ÖÎ•òÍ∞Ä ‚ÄúÏàòÏú†Îèô‚Äù, ‚ÄúÏåçÎ¨∏Îèô‚Äù Îì± 16Í∞úÏùò ÎèôÏù¥ ÏûàÎã§Î©¥, 16Í∞úÏùò feature (ÏÇ¨ÎäîÏßÄÏó≠_ÏàòÏú†Îèô, ÏÇ¨ÎäîÏßÄÏó≠_ÏåçÎ¨∏Îèô‚Ä¶ Îì±)
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pd.get_dummies(df, prefix=["ÏßÄ  "], columns=["ÏÇ¨ÎäîÏßÄÏó≠"])
#ÎòêÎäî ÏïÑÎûòÏ≤òÎüº sklern.preprocessingÏùò Ìï®Ïàò ÏÇ¨Ïö©
from sklearn.preprocessing import OneHotEncoder
</code></pre></div>    </div>
    <p><img src="/assets/images/source_28.png" width="60%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>
  </li>
  <li>Ordinal Encoding
categorical_featureÏùò Í∞íÎì§Ïù¥ Ïñ¥Îñ§ <strong>‚ÄòÏàúÏÑú‚Äô</strong>Î•º Í∞ñÍ≥†ÏûàÏùÑ Îïå ÏÇ¨Ïö©ÌïúÎã§.<br />
(‚ÄòÎß§Ïö∞ Í∑∏Î†áÎã§‚Äô, ‚ÄòÍ∑∏Î†áÎã§‚Äô, ‚ÄòÎ≥¥ÌÜµ‚Äô, ‚ÄòÏïÑÎãàÎã§‚Äô, ‚ÄòÎß§Ïö∞ ÏïÑÎãàÎã§‚Äô) Í∞ôÏùÄÍ±∞!
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from sklearn.preprocessing import OrdinalEncoder
enc = OrdinalEncoder(categories = [['Î∂àÎßåÏ°±', 'Î≥¥ÌÜµ', 'ÎßåÏ°±']])
df['ÏÑ†Ìò∏ÎèÑ_enc']=enc.fit_transform(df[['ÏÑ†Ìò∏ÎèÑ']])
</code></pre></div>    </div>
    <p><img src="/assets/images/source_29.png" width="20%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>
  </li>
  <li>Binary Encoding
OneHotEncodingÏùò Ïù¥ÏßÑÏàò Î≤ÑÏ†ÑÏù¥ÎùºÍ≥† Ïù¥Ìï¥ÌñàÎã§.<br />
ÏÇ¨ÎäîÏßÄÏó≠Ïùò Ï¢ÖÎ•òÍ∞Ä 16Í∞úÏùò ÎèôÏù¥ ÏûàÎã§Î©¥. 4ÏûêÎ¶¨ Ïù¥ÏßÑÏàòÎ°ú ÌëúÌòÑÏù¥ Í∞ÄÎä•ÌïòÎØÄÎ°ú <strong>4Í∞úÏùò featureÎ•º ÏÉùÏÑ±</strong> ÌïúÎã§.(cardinalityÍ∞Ä ÎÑàÎ¨¥ ÌÅ∞ ÌäπÏÑ±Ïóê ÎåÄÌï¥ÏÑú ÏÇ¨Ïö©ÌïòÎ©¥ Ïû•Ï†êÏùº ÎìØ!)<br />
‚ÄòÏàòÏú†ÎèôÏùÄ‚Äô 4Í∞úÏùò featureÏóê 0Ïù¥ÎÇò 1Ïù¥ Ï±ÑÏõåÏ†∏ 0000Î∂ÄÌÑ∞ 1111Ï§ë ÌïòÎÇòÏùò ÌòïÌÉúÎ•º Í∞ÄÏßà Í≤É!
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import category_encoders as ce
encoder = ce.BinaryEncoder(cols=['ÏÇ¨ÎäîÏßÄÏó≠'])
dfbin = encoder.fit_transform(df['ÏÇ¨ÎäîÏßÄÏó≠'])
df = pd.concat([df, dfbin], axis=1)
df.drop(['ÏÑ†Ìò∏ÎèÑ','ÏÑ±Î≥Ñ(1ÎÇ®, 0Ïó¨)'], axis=1)
</code></pre></div>    </div>
    <p><img src="/assets/images/source_30.png" width="30%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>
  </li>
  <li>Frequency Encoding
ÎπàÎèÑÎ°úÏç® ÌëúÌòÑÌïòÎäî Î∞©Î≤ï<br />
‚ÄòÏàòÏú†Îèô‚ÄôÏù¥ 10Í∞ú Îç∞Ïù¥ÌÑ∞Ï§ë 2Î≤àÏûàÎã§Î©¥ 0.2Î°ú Îß§ÌïëÎê®.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Frequency Encoding
fe = df.groupby("ÏÇ¨ÎäîÏßÄÏó≠").size()/len(df)
df.loc[:, "ÏÇ¨ÎäîÏßÄÏó≠_freq_encode"] = df["ÏÇ¨ÎäîÏßÄÏó≠"].map(fe)
df
</code></pre></div>    </div>
    <p><img src="/assets/images/source_31.png" width="30%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>
  </li>
  <li>
    <p>Mean Encoding<br />
Ïó¨Í∏∞Î∂ÄÌÑ∞Îäî ÏßÄÎèÑÌïôÏäµÏóêÎßå Ìï¥ÎãπÌïòÎäî ÎÇ¥Ïö©Ïù¥ÎùºÍ≥† ÏÉùÍ∞ÅÌïúÎã§. <strong>‚Äòtarget‚Äô</strong> Ïù¥ Ï°¥Ïû¨Ìï† ÎïåÎßå Í∞ÄÎä•ÌïòÍ∏∞ ÎïåÎ¨∏!<br />
Ïñ¥ÎñªÍ≤å Ïù∏ÏΩîÎî©ÏùÑ ÏãúÌÇ¨ ÏßÄÎ•º ‚ÄòÌÉÄÍ≤üÏùò ÌèâÍ∑†Í∞í‚ÄôÏóê Îî∞Îùº Í≤∞Ï†ïÌïúÎã§.</p>

    <p>Î®ºÏ†Ä, Îã®ÏàúÌïòÍ≤å targetÏùò ÌèâÍ∑†ÏûêÏ≤¥Î°ú Îß§ÌïëÏùÑ ÌïòÎäî Î∞©Î≤ïÏù¥ ÏûàÎäîÎç∞,<br />
(targetÏùÑ genderÎùº ÌïòÎ©¥, ÏàòÏú†ÎèôÏóêÏÇ¨Îäî ÏÇ¨ÎûåÎì§Ïùò targetÌèâÍ∑†ÏùÑ ÏàòÏú†ÎèôÏùò Ïù∏ÏΩîÎî© Îß§ÌïëÍ∞íÏúºÎ°ú ÏÇºÎäîÎã§.)<br />
Í≥ºÏ†ÅÌï©Ïù¥ ÎêòÍ∏∞ ÏâΩÎã§.<br />
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</p>

    <p>ÎëêÎ≤àÏß∏Î°ú, smoothing mean target encodingÏùÄ Í≥ºÏ†ÅÌï©ÏùÑ Ï¢ÄÎçî Î∞©ÏßÄÌïúÎã§.<br />
(ÏàòÏú†Îèô ÏÇ¨ÎûåÎì§Ïùò targetÌèâÍ∑† / weight) + (Ï†ÑÏ≤¥ targetÌèâÍ∑† / ÏàòÏú†ÎèôÏùò Í∞ØÏàò)<br />
 ÏùòÎØ∏ : weightÎ°ú Í∞úÎ≥ÑÌèâÍ∑†ÏùÑ Î∂ÑÏÇ∞ÏãúÏºúÏ£ºÍ≥†, ÏàòÏú†ÎèôÏùò Í∞ØÏàòÍ∞Ä ÌÅ¥ÏàòÎ°ù ÏàòÏú†ÎèôÌèâÍ∑†Ïóê ÌûòÏùÑ, ÏàòÏú†Îèô Í∞ØÏàòÍ∞Ä Ï†ÅÎã§Î©¥ Ï†ÑÏ≤¥ÌèâÍ∑†Ïùò ÌûòÏùÑ Ïã§Ïñ¥Ï§ÄÎã§.<br />
weightÍ∞Ä ÌÅ¥ÏàòÎ°ù Ìé∏Ï∞®Í∞Ä ÏûëÏïÑÏßÑÎã§!</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # smoothing target encoding
 # 1. ÌèâÍ∑†ÏùÑ Í≥ÑÏÇ∞
 mean = df['ÏÑ±Î≥Ñ(1ÎÇ®, 0Ïó¨)'].mean()
 # 2. Í∞Å Í∑∏Î£πÏóê ÎåÄÌïú Í∞íÎì§Ïùò ÎπàÎèÑÏôÄ ÌèâÍ∑†ÏùÑ Í≥ÑÏÇ∞
 Agg = df.groupby('ÏÇ¨ÎäîÏßÄÏó≠')['ÏÑ±Î≥Ñ(1ÎÇ®, 0Ïó¨)'].agg(['count', 'mean'])
 counts = Agg['count']
 means = Agg['mean']
 weight = 10
 # 3. ‚Äúsmooth‚ÄùÌïú ÌèâÍ∑†ÏùÑ Í≥ÑÏÇ∞
 smooth = (counts * means + weight * mean) / (counts + weight)
 # smoothÌïú ÌèâÍ∑†Ïóê Îî∞Îùº Í∞Å Í∞íÏùÑ ÎåÄÏ≤¥ÌïòÎäî Í≤É
 print(smooth)
 df.loc[:, 'ÏÇ¨ÎäîÏßÄÏó≠_smean_enc'] = df['ÏÇ¨ÎäîÏßÄÏó≠'].map(smooth)
 df
</code></pre></div>    </div>
    <p><img src="/assets/images/source_32.png" width="60%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>
  </li>
  <li>Probability Ratio Encoding (ÌôïÎ•†ÎπÑÏú® Ïù∏ÏΩîÎî©)<br />
(targetÏù¥ 1Ïù∏ ÌôïÎ•† / targetÏù¥ 0Ïù∏ ÌôïÎ•†) Ïùò ÎπÑÏú®Î°ú Îß§ÌïëÏùÑ ÌïòÎäî Î∞©Î≤ïÏù¥Îã§.<br />
Ï£ºÏùòÌï† Ï†êÏùÄ 0ÏúºÎ°úÎÇòÎâòÎäîÍ±∏ Íº≠ Î∞©ÏßÄÌïòÏûê!  <br />
(Ïòà : ‚ÄòÏàòÏú†Îèô‚ÄôÎì§ Ï§ëÏóê targetÏù¥ 1Ïù∏Í∞ØÏàòÎäî 3Í∞ú, 0Ïù∏Í∞ØÏàòÎäî 1Í∞úÎùºÎ©¥, ‚ÄòÏàòÏú†Îèô‚ÄôÏùÄ 3ÏúºÎ°ú Îß§ÌïëÎê®.)</li>
  <li>Weight of Evidence Encoding<br />
ÏúÑ PREÏùò ÎπÑÏú®Ïóê log_2Î•º Ï∑®ÌïòÍ≥† weightÏùÑ Í≥±Ìï¥Ï§Ä Í≤ÉÏúºÎ°ú Ïù∏ÏΩîÎî©ÌïòÎäî Î∞©Î≤ï.<br />
(6Î≤à Ïù∏ÏΩîÎî© ÏòàÏãúÏóêÏÑú ‚ÄòÏàòÏú†Îèô‚ÄôÏùÄ w*ln(3)Ïùò Í∞íÏúºÎ°ú Îß§Ìïë Îê† Í≤É.)</li>
</ol>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="ds" /><summary type="html"><![CDATA[Ïù∏ÏΩîÎî©ÏùÄ Ïôú ÌïòÎäîÍ±∞? Îç∞Ïù¥ÌÑ∞ÏóêÎäî Ïó∞ÏÜçÏ†ÅÏù∏ Ïà´ÏûêÎßå ÏûàÎäîÍ≤å ÏïÑÎãàÎã§. Î¨∏ÏûêÏó¥Ïùò Ïπ¥ÌÖåÍ≥†Î¶¨Ìòï featureÏùº ÏàòÎèÑ, Ïà´ÏûêÎùº ÌïòÎçîÎùºÎèÑ ÎπÑÏó∞ÏÜçÏ†ÅÏù∏ Ïπ¥ÌÖåÍ≥†Î¶¨Ìòï featureÎèÑ ÏûàÎã§. (Ïòà: ÏÇ¨ÎäîÏßÄÏó≠(‚ÄúÏàòÏú†Îèô‚Äù, ‚ÄúÏù∏ÏàòÎèô‚Äù ‚Ä¶), ÌèâÏ†ê(‚ÄúÎß§Ïö∞Î≥ÑÎ°ú‚Äù,‚ÄùÎ≥ÑÎ°ú‚Äù, ‚Ä¶ , ‚ÄúÎß§Ïö∞Ï¢ãÏùå‚Äù))]]></summary></entry><entry><title type="html">ÌÅ¨Î°§ÎßÅ(Crawling)</title><link href="http://localhost:4000/de/crawling/" rel="alternate" type="text/html" title="ÌÅ¨Î°§ÎßÅ(Crawling)" /><published>2022-03-05T00:00:00+09:00</published><updated>2022-03-05T00:00:00+09:00</updated><id>http://localhost:4000/de/crawling</id><content type="html" xml:base="http://localhost:4000/de/crawling/"><![CDATA[<h2 id="ÌÅ¨Î°§ÎßÅÏù¥ÎûÄ-">ÌÅ¨Î°§ÎßÅÏù¥ÎûÄ ?</h2>
<p>webÏóê ÏûàÎäî Îç∞Ïù¥ÌÑ∞Îì§ÏùÑ Í∏ÅÏñ¥Î™®ÏúºÎäî Í≤ÉÏùÑ ÎßêÌïúÎã§.<br />
ÌÅ¨Í≤å Îëê Ï¢ÖÎ•òÎ°ú Î®ºÏ†Ä ÎÇòÎàå Ïàò ÏûàÎã§.</p>
<ol>
  <li>Ï†ïÏ†ÅÌÅ¨Î°§ÎßÅ : Ìï≠ÏÉÅ Í∞ôÏùÄ Í∞íÏùÑ Ï£ºÎäî HTMLÎ°ú Î∂ÄÌÑ∞ ÌååÏã±ÏùÑ Ìï¥ÏÑú ÌÅ¨Î°§ÎßÅ.</li>
  <li>ÎèôÏ†ÅÌÅ¨Î°§ÎßÅ : Í∞ôÏùÄ HTMLÏù¥ÎùºÎèÑ ÎèôÏûë, Î™ÖÎ†πÏùÑ ÌÜµÌï¥ Î≥ÄÌôîÎêú ÏÉÅÌÉúÏóêÏÑú Îç∞Ïù¥ÌÑ∞Îì§ÏùÑ ÌÅ¨Î°§ÎßÅ.</li>
</ol>

<p>Ï†ïÏ†ÅÌÅ¨Î°§ÎßÅÏùÄ Î©àÏ∂∞ÏûàÎäî ÌéòÏù¥ÏßÄÏóêÏÑú Ï†ïÎ≥¥Î•º Ï∞æÏïÑ Í∏ÅÏñ¥Î™®ÏùÄÎã§Î©¥,<br />
ÎèôÏ†ÅÌÅ¨Î°§ÎßÅÏùÄ Í≤ÄÏÉâ, Ïä§ÌÅ¨Î°§, ÌéòÏù¥ÏßÄ ÌÅ¥Î¶≠ Îì±ÏùÑ Ìï¥ÏÑú ÎÇòÏò§Îäî Ï†ïÎ≥¥Î•º Í∏ÅÏñ¥Î™®ÏùÑ Ïàò ÏûàÎã§.</p>

<p>ÎåÄÌëúÏ†ÅÏúºÎ°ú Ï†ïÏ†ÅÌÅ¨Î°§ÎßÅ Í¥ÄÎ†® ÎùºÏù¥Î∏åÎü¨Î¶¨Î°ú beautifulsoup(bs4)Í∞Ä ÏûàÎã§.<br />
Í∑∏Î¶¨Í≥† ÎèôÏ†ÅÌÅ¨Î°§ÎßÅÏùò Î∞©Î≤ïÏóêÎèÑ Ïó¨Îü¨ Ï¢ÖÎ•òÍ∞Ä ÏûàÎäîÎç∞ Í∑∏ Ï§ë 2Í∞ÄÏßÄÎ•º Ï†ÅÏñ¥Î≥¥ÏûêÎ©¥ Îã§ÏùåÍ≥º Í∞ôÎã§.</p>
<ol>
  <li>openAPIÎ•º Ïù¥Ïö©ÌïòÏó¨ Î™ÖÎ†π ÌõÑ, responseÎêú Ï†ïÎ≥¥Î°úÎ∂ÄÌÑ∞ ÌÅ¨Î°§ÎßÅ.</li>
  <li>seleniumÏùÑ ÌÜµÌï¥ webdriver (ÌÅ¨Î°¨, ÏÇ¨ÌååÎ¶¨ Îì±)Î•º Ï†úÏñ¥Ìïú ÌõÑ ÎÇòÏò® ÌéòÏù¥ÏßÄ(HTML)Î°úÎ∂ÄÌÑ∞ ÌÅ¨Î°§ÎßÅ.</li>
</ol>

<h2 id="ÌÅ¨Î°§ÎßÅ-ÏòàÏãú">ÌÅ¨Î°§ÎßÅ ÏòàÏãú</h2>
<p>Î®ºÏ†Ä ÏïÑÎûò Ìï®Ïàò ÎëêÍ∞úÎ•º ÏßÄÏ†ïÌïòÍ≤†Îã§.</p>
<ol>
  <li>createDirectory : ÏûÖÎ†•Í∞íÏúºÎ°ú Î∞õÏùÄ Î¨∏ÏûêÏó¥(Í≤ΩÎ°ú)Ïóê Ìï¥ÎãπÌïòÎäî Ìè¥ÎçîÎ•º ÏÉùÏÑ±ÌïúÎã§.</li>
  <li>crawling_img : ÏûÖÎ†•Í∞íÏúºÎ°ú Î∞õÏùÄ Î¨∏ÏûêÏó¥ÏùÑ ÌÅ¨Î°¨ÏóêÏÑú Í≤ÄÏÉâÌï¥ÏÑú Ìï®ÏàòÎÇ¥Ïóê ÏßÄÏ†ïÎêòÏñ¥ ÏûàÎäî(ÏßÅÏ†ëÎ≥ÄÍ≤Ω) Í≤ΩÎ°úÎ°ú Ïù¥ÎØ∏ÏßÄÎ•º Ï†ÄÏû•. (Ïù¥Î¶ÑÏùÄ Î≤àÌò∏ÏàúÏúºÎ°ú Ï¶ùÍ∞Ä)</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
import urllib.request
import os


def createDirectory(directory):
    try:
        if not os.path.exists(directory):
            os.makedirs(directory)
    except OSError:
        print("Error: Failed to create the directory.")

def crawling_img(name):
    ## ÏûÖÎ†•Í∞í name Î¨∏ÏûêÏó¥ÏùÑ Í≤ÄÏÉâÌïòÏó¨ ÎÇòÏò§Îäî Ïù¥ÎØ∏ÏßÄÎ•º Ï†ÄÏû•ÌïòÎäî Ìï®Ïàò.
    ## Ï†ÄÏû•ÌïòÎäî Í≤ΩÎ°úÎäî Ìï®Ïàò ÎÇ¥ÏóêÏÑú Î≥ÑÎèÑÎ°ú ÏßÄÏ†ïÌï¥ÏïºÌï®.

    # ÌÅ¨Î°¨ÏùÑ ÎìúÎùºÏù¥Î≤ÑÎ°ú Ï±ÑÌÉù. Î≤ÑÏ†ÑÏò§Î•òÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.
    driver = webdriver.Chrome()
    driver.get("https://www.google.co.kr/imghp?hl=ko&amp;tab=wi&amp;authuser=0&amp;ogbl")

    # qÎ°ú ÌÉúÍ∑∏ÎêòÏñ¥ ÏûàÎäî Í≥≥Ïù¥ Íµ¨Í∏ÄÌôàÌéòÏù¥ÏßÄÏùò Í≤ÄÏÉâÏ∞ΩÏù¥Îã§.
    elem = driver.find_element_by_name("q")
    elem.send_keys(name)
    elem.send_keys(Keys.RETURN)


    SCROLL_PAUSE_TIME = 1   # 1Ï¥àÏî© Í∏∞Îã§Î†∏Îã§Í∞Ä ÎÇ¥Î†∏Îã§Î•º Î∞òÎ≥µÌï†Í±∞ÏûÑ.  
    # Get scroll height
    last_height = driver.execute_script("return document.body.scrollHeight")  # Î∏åÎùºÏö∞Ï†ÄÏùò ÎÜíÏù¥Î•º ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏Î°ú Ï∞æÏùå
    while True:
        # Scroll down to bottom
        driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")  # Î∏åÎùºÏö∞Ï†Ä ÎÅùÍπåÏßÄ Ïä§ÌÅ¨Î°§ÏùÑ ÎÇ¥Î¶º
        # Wait to load page
        time.sleep(SCROLL_PAUSE_TIME)
        # Calculate new scroll height and compare with last scroll height
        new_height = driver.execute_script("return document.body.scrollHeight")
        if new_height == last_height:
            try:
                # ÎçîÎ≥¥Í∏∞ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠Ìï† Í±∞ÏûÑ.
                driver.find_element_by_css_selector(".mye4qd").click()
            except:
                # ÎçîÎ≥¥Í∏∞ Î≤ÑÌäºÏù¥ ÏóÜÏñ¥ÏÑú ÌÅ¥Î¶≠ÏùÑ Î™ªÌïòÎ©¥ ÎÅù.
                break
        last_height = new_height

    imgs = driver.find_elements_by_css_selector(".rg_i.Q4LuWd")

    # Í≤ΩÎ°úÏôÄ Ìè¥Îçî Î™Ö ÏßÄÏ†ï.
    dir = ".\tree_flower_dog_cat" + "\\" + name

    createDirectory(dir) #Ìè¥Îçî ÏÉùÏÑ±
    count = 1
    for img in imgs:
        try:
            img.click()
            time.sleep(3)
            imgUrl = driver.find_element_by_xpath(
                '//*[@id="Sva75c"]/div/div/div[3]/div[2]/c-wiz/div/div[1]/div[1]/div[2]/div/a/img').get_attribute(
                "src")
            path = ".\idols\\" + name + "\\"
            urllib.request.urlretrieve(imgUrl, path + name + "_"+ str(count) + ".jpg")

            # Ïù¥ ÏïÑÎûòÎäî Í¥ÄÎ†®Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû•
            imgUrl = driver.find_element_by_xpath(
                '//*[@id="Sva75c"]/div/div/div[3]/div[2]/c-wiz/div/div[1]/div[3]/div[3]/c-wiz/div/div/div/div[3]/div[1]/div[1]/a[1]/div[1]/img').get_attribute(
                "src")
            urllib.request.urlretrieve(imgUrl, path + name + "_"+ str(count) + "_1" + ".jpg")
            imgUrl = driver.find_element_by_xpath(
                '//*[@id="Sva75c"]/div/div/div[3]/div[2]/c-wiz/div/div[1]/div[3]/div[3]/c-wiz/div/div/div/div[3]/div[1]/div[2]/a[1]/div[1]/img').get_attribute(
                "src")
            urllib.request.urlretrieve(imgUrl, path + name + "_"+ str(count) + "_2" + ".jpg")

            imgUrl = driver.find_element_by_xpath(
                '//*[@id="Sva75c"]/div/div/div[3]/div[2]/c-wiz/div/div[1]/div[3]/div[3]/c-wiz/div/div/div/div[3]/div[1]/div[3]/a[1]/div[1]/img').get_attribute(
                "src")
            urllib.request.urlretrieve(imgUrl, path + name + "_"+ str(count) + "_3" + ".jpg")

            count = count + 1
            if count &gt;= 500:
                break
        except:
            pass
    driver.close()
</code></pre></div></div>

<p>Ïù¥Ï†ú ÏúÑ Ìï®ÏàòÎ•º ÏÇ¨Ïö©ÌïòÏó¨ forÎ¨∏ÏùÑÌÜµÌï¥ Í≤ÄÏÉâ Î∞è Ï†ÄÏû•ÏùÑ ÎèôÏãúÏóê Ìï¥Ï£ºÎ©¥ ÎêúÎã§.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searching_keyword = ["ÎÇòÎ¨¥", "ÍΩÉ", "Í∞ïÏïÑÏßÄÏñºÍµ¥", "Í≥†ÏñëÏù¥ÏñºÍµ¥"]

for i in range(len(searching_keyword)) :
    searching_keyword[i] += '_ÏÇ¨ÏßÑ' # ÏÇ¨ÏßÑÏùÑ Îí§Ïóê Î∂ôÏù¥Î©¥ Í≤ÄÏÉâÏù¥ ÏûòÎê† Í≤É Í∞ôÏïÑ!

for keyword in searching_keyword:
    crawling_img(keyword)
</code></pre></div></div>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="de" /><summary type="html"><![CDATA[ÌÅ¨Î°§ÎßÅÏù¥ÎûÄ ? webÏóê ÏûàÎäî Îç∞Ïù¥ÌÑ∞Îì§ÏùÑ Í∏ÅÏñ¥Î™®ÏúºÎäî Í≤ÉÏùÑ ÎßêÌïúÎã§. ÌÅ¨Í≤å Îëê Ï¢ÖÎ•òÎ°ú Î®ºÏ†Ä ÎÇòÎàå Ïàò ÏûàÎã§. Ï†ïÏ†ÅÌÅ¨Î°§ÎßÅ : Ìï≠ÏÉÅ Í∞ôÏùÄ Í∞íÏùÑ Ï£ºÎäî HTMLÎ°ú Î∂ÄÌÑ∞ ÌååÏã±ÏùÑ Ìï¥ÏÑú ÌÅ¨Î°§ÎßÅ. ÎèôÏ†ÅÌÅ¨Î°§ÎßÅ : Í∞ôÏùÄ HTMLÏù¥ÎùºÎèÑ ÎèôÏûë, Î™ÖÎ†πÏùÑ ÌÜµÌï¥ Î≥ÄÌôîÎêú ÏÉÅÌÉúÏóêÏÑú Îç∞Ïù¥ÌÑ∞Îì§ÏùÑ ÌÅ¨Î°§ÎßÅ.]]></summary></entry><entry><title type="html">Ïù¥ÏßÑÎ∂ÑÎ•òÏùò ÌèâÍ∞ÄÏßÄÌëú</title><link href="http://localhost:4000/something_else/_classfication_metrics/" rel="alternate" type="text/html" title="Ïù¥ÏßÑÎ∂ÑÎ•òÏùò ÌèâÍ∞ÄÏßÄÌëú" /><published>2022-03-02T00:00:00+09:00</published><updated>2022-03-02T00:00:00+09:00</updated><id>http://localhost:4000/something_else/_classfication_metrics</id><content type="html" xml:base="http://localhost:4000/something_else/_classfication_metrics/"><![CDATA[<h2 id="Ïù¥ÏßÑÎ∂ÑÎ•ò-Î™®Îç∏Ïùò-Ï¢ÖÎ•ò">Ïù¥ÏßÑÎ∂ÑÎ•ò Î™®Îç∏Ïùò Ï¢ÖÎ•ò</h2>
<p>Î°úÏßÄÏä§Ìã± ÌöåÍ∑Ä,<br />
Decision_Tree(base model),<br />
RandomForest,<br />
Gradient_boost,<br />
KNN(K-Nearest-Neighbors),<br />
Í∑∏Ïô∏ Îî•Îü¨Îãù Î™®Îç∏ÎèÑ Îê† Ïàò ÏûàÍ≤†Îã§.</p>

<h2 id="ÌèâÍ∞ÄÏßÄÌëúÏùò-Ï¢ÖÎ•ò">ÌèâÍ∞ÄÏßÄÌëúÏùò Ï¢ÖÎ•ò</h2>
<p>ÏúÑÏôÄ Í∞ôÏùÄ Ïù¥ÏßÑÎ∂ÑÎ•ò Î™®Îç∏ (Íµ∞Ïßëx, ÏßÄÎèÑÌïôÏäµÏùò Î∂ÑÎ•òo) Ïùò ÌèâÍ∞ÄÏßÄÌëúÎäî Ïñ¥Îñ§ Í≤å ÏûàÏùÑÍπå.<br />
(ÌöåÍ∑ÄÏóêÏÑúÎäî MSE, MAE, RMS, R-score Îì±Ïù¥ ÏûàÏóàÏ•¨!)</p>

<p>Í∞ÄÏû• Îã®ÏàúÌïòÍ≤å Î≥º Ïàò ÏûàÎäî Í≤ÉÏùÄ validation Îç∞Ïù¥ÌÑ∞Ïóê ÎåÄÌï¥ÏÑú ÏñºÎßàÎÇò ÎßéÏù¥ ÎßûÏ∂ò ÎπÑÏú®(0~1)Ïù¥ ÏûàÏùÑ Í≤ÉÏù¥Îã§.<br />
Î∞îÎ°ú Ï†ïÌôïÎèÑ(Accuracy)!  <br />
Í∑∏Îü¨ÎÇò Î™®Îç∏ÏùÑ ÌïòÎÇòÏùò Í∞íÏúºÎ°ú ÌèâÍ∞ÄÌïòÎ©¥ ÏïàÎê† Í≤ÉÏù¥Îã§.</p>

<blockquote>
  <p>Ï†ïÌôïÎèÑ (Accuracy)<br />
Î®ºÏ†Ä Ï†ïÌôïÎèÑÎ•º Ï≤¥ÌÅ¨Ìï† ÎïåÏóêÎèÑ Î≤†Ïù¥Ïä§ Î™®Îç∏ÏùÄ Î∞òÎìúÏãú ÌïÑÏöîÌïòÎã§.<br />
Í∑∏ Ïù¥Ïú†Î•º ÏòàÎ°ú Îì§Ïñ¥Î≥¥ÏûêÎ©¥,  ÏïîÏùÑ ÏòàÏ∏°ÌïòÎäî Î™®Îç∏Ïùò ÌïôÏäµÎç∞Ïù¥ÌÑ∞ÏóêÏÑú ÏïîÏóê Í±∏Î¶∞ Îç∞Ïù¥ÌÑ∞(1)Í∞Ä 5%, ÎÇòÎ®∏ÏßÄ 95%Í∞Ä Í±¥Í∞ï(0)ÌïòÎã§Î©¥,<br />
ÏûÖÎ†•Ïóê ÏÉÅÍ¥ÄÏóÜÏù¥ Ìï≠ÏÉÅ Ï∂úÎ†•ÏùÑ ‚Äò0‚ÄôÏúºÎ°úÎßå ÌïúÎã§Î©¥ Í∑∏ Î™®Îç∏ÏùÄ<br />
CVÎÇò hold-out ÏúºÎ°ú ÎπÑÏä∑Ìïú ÎπÑÏú®Î°ú ÏÉùÏÑ±Îêú validation Îç∞Ïù¥ÌÑ∞ÏóêÏÑúÎèÑ Ï†ïÌôïÎèÑÎ•º ÎåÄÎûµ 0.95Î°ú Í∞ÄÏßà Í≤ÉÏù¥Îã§..!<br />
Ïù¥Îü¨Ìïú Î™®Îç∏ÏùÄ Ï†ïÌôïÎèÑ Í≤ÄÏ¶ùÏóê ÏûàÏñ¥ÏÑú 0.95Îäî ÏµúÏÜåÌïú ÎÑòÎäî Í≤ÉÏúºÎ°ú Í≥†Î†§Ìï¥Ïïº Ìï† Í≤ÉÏù¥Îã§.</p>
</blockquote>

<blockquote>
  <p>TP, TN, FP, FN<br />
(T,FÎäî True, False,   P,NÏùÄ Positive, Negative,)<br />
TrueÎäî ÎßûÏ∂òÍ±∞, FalseÎäî Î™ªÎßûÏ∂òÍ±∞.<br />
PÏôÄ NÏùÄ ÏòàÏ∏°Ìïú Í±∞ Í∏∞Ï§Ä. (FPÎäî Ïã§Ï†ú NegativeÏù∏Îç∞ Î™®Îç∏Ïù¥ PositiveÎ°ú ÏòàÏ∏°ÌïúÍ±∞Ïïº)</p>
</blockquote>

<blockquote>
  <p>Ï†ïÎ∞ÄÎèÑ(precision)ÏôÄ Ïû¨ÌòÑÏú®(recall, sensitivity), specificity(TN-rate), Fall-out<br />
precision = TP/(TP+FP) = PositiveÎ°ú ÏòàÏ∏°Ìïú Í≤ÉÎì§Ï§ë ÎßûÏ∂òÎπÑÏú®<br />
recall = TP/(TP+FN) = Ïã§Ï†ú Positive Ï§ë ÎßûÏ∂òÎπÑÏú®  (TPRate)
specificity = TN/(TN+FP) = Ïã§Ï†ú Negative Ï§ë ÎßûÏ∂òÎπÑÏú® (TNR)
Fall-out = FP/(FP+TN) = Ïã§Ï†ú Negative Ï§ë ÌãÄÎ¶∞ÎπÑÏú® (FPR)</p>
</blockquote>

<blockquote>
  <p>confusion Metrics<br />
TP, TN, FP, FN ÏùÑ ÌïúÎ≤àÏóê ÎÇòÌÉÄÎÇ∏ ÌñâÎ†¨<br />
ÏïÑÎûò ÏÇ¨ÏßÑÏùÑ Ï∞∏Í≥†ÌïòÎ©¥ ÌïúÎ≤àÏóê Ïù¥Ìï¥Îê†Í≤É.„Öé„Öé</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from sklearn.metrics import plot_confusion_matrix
import matplotlib.pyplot as plt

# pipeÎäî ÌååÏù¥ÌîÑÎùºÏù∏
fig, ax = plt.subplots()
matrix = plot_confusion_matrix(pipe, X_val_cleaned, y_val,
                            cmap = plt.cm.Blues,
                            ax = ax);
</code></pre></div></div>
<p><img src="/assets/images/source_23.png" width="30%" height="30%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<blockquote>
  <p>AUC, ROC ÏôÄ ÏûÑÍ≥ÑÍ∞í(Threshold)<br />
ROC Ïª§Î∏åÎäî ÏûÑÍ≥ÑÍ∞íÏóê Îî∞Î•∏ FPRÍ≥º TPR Í∞íÏù¥ Í∑∏Î¶¨Îäî Ïª§Î∏åÏù∏Îç∞. Î™®Îëê ÏùºÎåÄÏùº Í¥ÄÍ≥ÑÏù¥Îã§. <br />
AOCÏàòÏπòÎäî ROC curveÏùò ÏïÑÎûò Î©¥Ï†ÅÏùÑ ÎúªÌïúÎã§.<br />
AOCÎäî ÌÅ¥ÏàòÎ°ù Ï¢ãÏùÄ Î™®Îç∏Ïù∏ Í≤ÉÏùÄ ÏÇ¨Ïã§Ïù¥Îã§.<br />
Ïù¥Ïú† : FPR (ÌãÄÎ¶∞ÎπÑÏú®, ÎÇÆÏùÑÏàòÎ°ù Ï¢ãÏùå) Ïù¥ ÎÇÆÏùåÏóêÎèÑ TPR(ÎßûÏ∂òÎπÑÏú®, ÎÜíÏùÑÏàòÎ°ù Ï¢ãÏùå)ÏùÄ ÎÜíÏïÑÏïº AOCÍ∞Ä ÎÜíÏùÄ Í≤ÉÏù¥Í∏∞ ÎïåÎ¨∏.<br />
Í≤∞Í≥ºÏ†ÅÏúºÎ°ú tpr-fprÏù¥ ÏµúÎåÄÍ∞Ä ÎêòÎäî Ï†êÏùò ÏûÑÍ≥ÑÏ†êÏùÑ Í≥†Î•¥ÎäîÍ≤å ÏµúÏÑ†Ïù¥ÎùºÍ≥† Ìï† Ïàò ÏûàÎã§.</p>
</blockquote>

<p><img src="/assets/images/source_24.png" width="30%" height="30%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /><br />
<img src="/assets/images/source_25.png" width="30%" height="30%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="Something_else" /><summary type="html"><![CDATA[Ïù¥ÏßÑÎ∂ÑÎ•ò Î™®Îç∏Ïùò Ï¢ÖÎ•ò Î°úÏßÄÏä§Ìã± ÌöåÍ∑Ä, Decision_Tree(base model), RandomForest, Gradient_boost, KNN(K-Nearest-Neighbors), Í∑∏Ïô∏ Îî•Îü¨Îãù Î™®Îç∏ÎèÑ Îê† Ïàò ÏûàÍ≤†Îã§.]]></summary></entry><entry><title type="html">ÎûúÎç§Ìè¨Î†àÏä§Ìä∏(Random Forest)ÏôÄ ‚Ä¶</title><link href="http://localhost:4000/ds/random_forest/" rel="alternate" type="text/html" title="ÎûúÎç§Ìè¨Î†àÏä§Ìä∏(Random Forest)ÏôÄ ‚Ä¶" /><published>2022-02-28T00:00:00+09:00</published><updated>2022-02-28T00:00:00+09:00</updated><id>http://localhost:4000/ds/random_forest</id><content type="html" xml:base="http://localhost:4000/ds/random_forest/"><![CDATA[<h2 id="ÎûúÎç§-Ìè¨Î†àÏä§Ìä∏-Î™®Îç∏">ÎûúÎç§ Ìè¨Î†àÏä§Ìä∏ Î™®Îç∏</h2>
<p>Îã®Ïàú ÏÑ†ÌòïÌöåÍ∑ÄÏôÄ Î¶øÏßÄ(Ridge) ÌöåÍ∑ÄÍ∞Ä ÏûàÏóàÎã§Î©¥,<br />
Í≤∞Ï†ïÌä∏Î¶¨ÏôÄ ÎûúÎç§Ìè¨Î†àÏä§Ìä∏Í∞Ä ÏûàÎã§.</p>

<p>Î¶øÏßÄ ÌöåÍ∑ÄÏóêÏÑú Í≥ºÏ†ÅÌï©ÏùÑ Î∞©ÏßÄÌïòÎäî Ïû•ÏπòÍ∞Ä ÏûàÏóàÎã§.<br />
ÎûúÎç§Ìè¨Î†àÏä§Ìä∏ ÎòêÌïú Í≤∞Ï†ïÌä∏Î¶¨ÏóêÏÑú Îçî ÏùºÎ∞òÌôîÏãúÏºúÏ£ºÎäî Ïû•ÏπòÍ∞Ä ÏûàÎã§.</p>

<p>Í≤∞Ï†ïÌä∏Î¶¨Î•º Ïó¨Îü¨Í∞ú ÎßåÎì§Ïñ¥ Î™®ÎëêÏùò ÏùòÍ≤¨ÏùÑ Ìï©ÏÇ∞ÌïòÏó¨ ÌåêÎã®ÏùÑ ÎÇ¥Î¶∞Îã§.</p>

<blockquote>
  <p>Ïà≤(Ìè¨Î†àÏä§Ìä∏)Ïù¥ ÎßåÎì§Ïñ¥ÏßÄÎäî Í≥ºÏ†ï</p>
</blockquote>

<ol>
  <li>ÎßéÏùÄ featureÏ§ëÏóêÏÑú nÍ∞ú (pram: max_features) Î•º ‚ÄòÎûúÎç§‚ÄôÏúºÎ°ú Í≥†Î•∏Îã§.</li>
  <li>nÍ∞úÏùò featureÏ§ë Í∞ÄÏû• ÏòÅÌñ•ÎèÑÍ∞Ä ÌÅ∞ featureÎ•º Í≥®Îùº Ï≤´Î≤àÏß∏ nodeÎ•º ÏÉùÏÑ±ÌïòÍ≥†, ÎÇòÎ®∏ÏßÄ feature Ï§ë ÎûúÎç§ÌïòÍ≤å Í≥®Îùº Ìä∏Î¶¨Î•º ÏôÑÏÑ±ÌïúÎã§.</li>
  <li>ÏúÑÏôÄÍ∞ôÏùÄ Ìä∏Î¶¨Î•º mÍ∞ú(pram: n_estimators)ÎßåÎì†Îã§.</li>
  <li>Ìä∏Î¶¨Îì§Ïùò Î∂ÑÎ•ò Í≤∞Í≥ºÎ°ú Ìà¨ÌëúÎ•º Ìï¥ÏÑú ÏµúÏ¢Ö Í≤∞Ï†ïÏùÑ ÌïúÎã§.</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# bootstrapÏùÑ FalseÎ°ú ÌïòÍ≥† max_features ÏàòÏ†ïÍ∞ÄÎä•.
classifier = RandomForestClassifier(n_estimators = 50, bootstrap = False, max_features = 5)

# Î™®Îç∏ fit
classifier.fit(X_train, y_train)

# Í≤∞Í≥ºÍ∞í ÏòàÏ∏°
y_pred = classifier.predict(X_test)

# Í∞ôÏùÄÏßÄ Îã§Î•∏ÏßÄ ÌôïÏù∏.
print("Ï†ïÌôïÎèÑ : {}".format(accuracy_score(y_test, y_pred))
</code></pre></div></div>

<blockquote>
  <p>CV(cross validation)ÏùÄ GridsearchCV, RandomizedSearchCV Îì±ÏùÑ Ïù¥Ïö©.</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># CV(cross validation)ÏùÄ gridsearch Îì±ÏùÑ Ïù¥Ïö©.
from sklearn.model_selection import GridSearchCV

grid = {
    'n_estimators' : [100,200],
    'max_depth' : [6,8,10,12],
    'min_samples_leaf' : [3,5,7,10],
    'min_samples_split' : [2,3,5,10]
}

classifier_grid = GridSearchCV(classifier, param_grid = grid, scoring="accuracy", n_jobs=-1, verbose =1)

classifier_grid.fit(X_train, y_train)

print("ÏµúÍ≥† ÌèâÍ∑† Ï†ïÌôïÎèÑ : {}".format(classifier_grid.best_score_))
print("ÏµúÍ≥†Ïùò ÌååÎùºÎØ∏ÌÑ∞ :", classifier_grid.best_params_)
</code></pre></div></div>
<blockquote>
  <p>feature_importances ÎÇ¥Î∂ÄÎ≥ÄÏàòÎ°ú ÌôïÏù∏Í∞ÄÎä•</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

feature_importances = model.feature_importances_

ft_importances = pd.Series(feature_importances, index = X_train.columns)
ft_importances = ft_importances.sort_values(ascending=False)

plt.figure(fig.size(12,10))
sns.barplot(x=ft_importances, y= X_train.columns)
plt.show()
</code></pre></div></div>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="ds" /><summary type="html"><![CDATA[ÎûúÎç§ Ìè¨Î†àÏä§Ìä∏ Î™®Îç∏ Îã®Ïàú ÏÑ†ÌòïÌöåÍ∑ÄÏôÄ Î¶øÏßÄ(Ridge) ÌöåÍ∑ÄÍ∞Ä ÏûàÏóàÎã§Î©¥, Í≤∞Ï†ïÌä∏Î¶¨ÏôÄ ÎûúÎç§Ìè¨Î†àÏä§Ìä∏Í∞Ä ÏûàÎã§.]]></summary></entry><entry><title type="html">ÌååÏù¥ÌîÑÎùºÏù∏(PipeLine)Í≥º Í≤∞Ï†ïÌä∏Î¶¨Î™®Îç∏(Decision Tree)</title><link href="http://localhost:4000/ds/decision_tree/" rel="alternate" type="text/html" title="ÌååÏù¥ÌîÑÎùºÏù∏(PipeLine)Í≥º Í≤∞Ï†ïÌä∏Î¶¨Î™®Îç∏(Decision Tree)" /><published>2022-02-26T00:00:00+09:00</published><updated>2022-02-26T00:00:00+09:00</updated><id>http://localhost:4000/ds/decision_tree</id><content type="html" xml:base="http://localhost:4000/ds/decision_tree/"><![CDATA[<h2 id="ÏÇ¨Ïù¥ÌÇ∑Îü∞sklearn-ÌååÏù¥ÌîÑÎùºÏù∏-pipeline">ÏÇ¨Ïù¥ÌÇ∑Îü∞(sklearn) ÌååÏù¥ÌîÑÎùºÏù∏ (PipeLine)</h2>
<p>ÏÇ¨Ïù¥ÌÇ∑Îü∞ÏóêÏÑú Ï†úÍ≥µÌïòÎäî ÌååÏù¥ÌîÑÎùºÏù∏ÏùÄ Í∞Å Í∏∞Îä•ÏùÑ ÌïòÎäî Î™®Îç∏Îì§ÏùÑ ÌïúÎ≤àÏóê Î¨∂Îäî Í∏∞Îä•Í≥º<br />
ÌïòÏù¥Ìçº ÌååÎùºÎØ∏ÌÑ∞Î•º Ïó∞Í≤∞ÏãúÌÇ§Îäî Í∏∞Îä•Ïù¥ ÏûàÎã§.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from sklearn.pipeline import make_pipeline
from category_encoders import OneHotEncoder
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier

pipe = make_pipeline(
    OneHotEncoder(use_cat_names=True),  
    SimpleImputer(),
    StandardScaler(),
    DecisionTreeClassifier(random_state=1, criterion='entropy', min_samples_leaf=10, max_depth=6)

    # min_samples_leafÎäî ÎßêÎã® ÎÖ∏ÎìúÏóê ÏµúÏÜå Ï°¥Ïû¨Ìï¥ÏïºÌï† Îç∞Ïù¥ÌÑ∞ Ïàò.
    # max_depth Îäî ÏµúÎåÄ ÍπäÏù¥Î•º Ï†úÌïúÌïòÏó¨ Î≥µÏû°ÎèÑÎ•º Í∞úÏÑ†.
)

# pipe fit
pipe.fit(x_train, y_train)
print('Í≤ÄÏ¶ùÏÑ∏Ìä∏ Ï†ïÌôïÎèÑ', pipe.score(X_val, y_val))

# ÌÖåÏä§Ìä∏ ÏÖã
y_pred = pipe.predict(X_test)

# feature_importance ÎùÑÏö∞Í∏∞
## Î®ºÏ†Ä ÌååÏù¥ÌîÑ ÎÇ¥Ïùò ÌïôÏäµÎêú Î™®Îç∏Îì§ ÎñºÏñ¥ÏÑú Í∞ÄÏ†∏Ïò®Îã§.
model_dt = pipe.named_steps['decisiontreeclassifier']
enc = pipe.named_steps['onehotencoder']

encoded_columns = enc.transform(X_val).columns

importances = pd.Series(model_dt.feature_importances_, encoded_columns)
</code></pre></div></div>

<h2 id="Í≤∞Ï†ïÌä∏Î¶¨-decision_tree">Í≤∞Ï†ïÌä∏Î¶¨ (Decision_Tree)</h2>
<p>Í≤∞Ï†ïÌä∏Î¶¨Îäî ‚ÄòÎ∂ÑÎ•ò‚ÄôÏóê ÏûàÏñ¥ÏÑú ÎßàÏπò ‚ÄòÌöåÍ∑Ä‚ÄôÏùò ÏÑ†ÌòïÌöåÍ∑Ä ÏôÄ Í∞ôÏùÄ ÎäêÎÇåÏù¥Îã§.<br />
Îç∞Ïù¥ÌÑ∞Îì§ÏùÑ Í≥ÑÏÜçÌï¥ÏÑú ÎëêÍ∞ÄÏßÄÏî© Î∂ÑÎ•òÌïòÏó¨ Í≤∞Í≥ºÏ†ÅÏúºÎ°ú Î™®Îì† Îç∞Ïù¥ÌÑ∞Îì§ÏùÑ Ï†ïÌï¥ÏßÑ Í∞ØÏàòÏùò classÎì§Î°ú Î∂ÑÎ•òÌïòÍ≤å ÎêúÎã§.</p>

<p><img src="/assets/images/source_22.png" width="60%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /><br />
Í≤∞Ï†ïÌä∏Î¶¨Î•º Î∞úÏ†ÑÏãúÌÇ®<br />
‚ÄòÎûúÎç§Ìè¨Î†àÏä§Ìä∏ (Random_Forest)‚Äô,<br />
‚ÄòÍ∑∏ÎûòÎîîÏñ∏Ìä∏ Î∂ÄÏä§Ìä∏ Ìä∏Î¶¨ (Gradient Boosted Tree)‚Äô<br />
Í∞ôÏùÄ Î™®Îç∏Îì§ÏùÑ Îçî ÎßéÏù¥ ÏÇ¨Ïö©Ìï† Í≤ÉÏù¥Îã§.<br />
Í∑∏Îü¨ÎÇò Í∑∏ Í∏∞Ï¥àÎäî Í≤∞Ï†ïÌä∏Î¶¨Ïóê ÏûàÎã§.</p>

<blockquote>
  <p>Ìä∏Î¶¨ÌïôÏäµÏóêÏÑúÏùò ÎπÑÏö©Ìï®Ïàò</p>
</blockquote>

<ol>
  <li>ÏßÄÎãàÏßÄÏàò (Gini Impurity</li>
  <li>ÏóîÌä∏Î°úÌîº (Entropy)</li>
</ol>

<p>ÎëêÍ∞ÄÏßÄ Î™®Îëê Î∂àÏàúÎèÑÎ•º ÎÇòÌÉÄÎÇ¥Îäî Ï≤ôÎèÑ Ïù¥Î©∞<br />
ÌÅ¥ÏàòÎ°ù Í≥®Í≥†Î£® ÏÑûÏó¨ ÏûàÎã§Îäî Îúª.(10Í∞úÏùò Í≥µÎì§ Ï§ëÏóê 5Í∞úÏî© Îπ®Í∞ÑÍ≥µ, ÌååÎûÄÍ≥µÏù¥ÎùºÎ©¥ 0.5)
Ï¶â, 0Ïóê Í∞ÄÍπåÏö∏ÏàòÎ°ù ÏπòÏö∞Ï≥êÏ†∏ ÏûàÎã§Îäî Îúª. (Ï†ÑÎ∂Ä ÌäπÏ†ïÍ≥µÎßå 10Í∞ú ÏûàÎã§Î©¥ 0)</p>

<p>Ï¶â ÏßÄÎãàÏßÄÏàò, ÏóîÌä∏Î°úÌîºÍ∞Ä ÏûëÏïÑÏßÄÎäî Î∞©Ìñ•ÏúºÎ°ú Ìä∏Î¶¨ ÎÖ∏ÎìúÎ•º ÏÉùÏÑ±ÌïúÎã§.</p>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="ds" /><summary type="html"><![CDATA[ÏÇ¨Ïù¥ÌÇ∑Îü∞(sklearn) ÌååÏù¥ÌîÑÎùºÏù∏ (PipeLine) ÏÇ¨Ïù¥ÌÇ∑Îü∞ÏóêÏÑú Ï†úÍ≥µÌïòÎäî ÌååÏù¥ÌîÑÎùºÏù∏ÏùÄ Í∞Å Í∏∞Îä•ÏùÑ ÌïòÎäî Î™®Îç∏Îì§ÏùÑ ÌïúÎ≤àÏóê Î¨∂Îäî Í∏∞Îä•Í≥º ÌïòÏù¥Ìçº ÌååÎùºÎØ∏ÌÑ∞Î•º Ïó∞Í≤∞ÏãúÌÇ§Îäî Í∏∞Îä•Ïù¥ ÏûàÎã§.]]></summary></entry><entry><title type="html">Ridge ÌöåÍ∑ÄÏôÄ Î°úÏßÄÏä§Ìã± ÌöåÍ∑Ä</title><link href="http://localhost:4000/ds/ridge_logistic/" rel="alternate" type="text/html" title="Ridge ÌöåÍ∑ÄÏôÄ Î°úÏßÄÏä§Ìã± ÌöåÍ∑Ä" /><published>2022-02-25T00:00:00+09:00</published><updated>2022-02-25T00:00:00+09:00</updated><id>http://localhost:4000/ds/ridge_logistic</id><content type="html" xml:base="http://localhost:4000/ds/ridge_logistic/"><![CDATA[<h2 id="cv-ÍµêÏ∞®-Í≤ÄÏ¶ù-cross-validation">CV (ÍµêÏ∞® Í≤ÄÏ¶ù, cross validation)</h2>
<p>Î®ºÏ†Ä Îç∞Ïù¥ÌÑ∞ÎùºÍ≥† ÌïòÎ©¥ Ïö©ÎèÑÏóê Îî∞Îùº 3Í∞ÄÏßÄÎ°ú Î∂ÑÎ•òÌï† Ïàò ÏûàÎã§.<br />
ÌïôÏäµÎç∞Ïù¥ÌÑ∞(training_data),<br />
Í≤ÄÏ¶ùÎç∞Ïù¥ÌÑ∞(validation_data),<br />
ÌÖåÏä§Ìä∏Îç∞Ïù¥ÌÑ∞(test_data)</p>

<p>ÏÑ∏Í∞ÄÏßÄ Îç∞Ïù¥ÌÑ∞Îäî ÏÑúÎ°ú ÎàÑÏ∂úÎêòÏñ¥ÏÑúÎäî ÏïàÎêòÍ≥†,<br />
ÌïôÏäµÎç∞Ïù¥ÌÑ∞Î°ú ÌïôÏäµÏãúÌÇ® ‚ÄòÎ™®Îç∏‚Äô Ïùò<br />
Ï†êÏàòÎäî ‚ÄòÍ≤ÄÏ¶ùÎç∞Ïù¥ÌÑ∞‚ÄôÎ°ú Ï≤¥ÌÅ¨Î•º ÌïòÎêò,<br />
ÎßàÏßÄÎßâÏúºÎ°ú ÌÉÄÍ≤ü Îç∞Ïù¥ÌÑ∞Î°úÏç® ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞Î•º ÏÇ¨Ïö©ÌïúÎã§.</p>

<p>Îã®, CVÎäî ‚ÄòÍ≤ÄÏ¶ùÎç∞Ïù¥ÌÑ∞‚ÄôÎ•º Îî∞Î°ú ÎëêÏßÄ ÏïäÍ≥†,<br />
ÌïôÏäµÎç∞Ïù¥ÌÑ∞Î•º ÏùºÎ∂Ä Ï∂îÏ∂úÌïòÏó¨ Í≤ÄÏ¶ùÎç∞Ïù¥ÌÑ∞Î°ú ÏÇ¨Ïö©ÌïúÎã§Îäî Î∞©ÏãùÏù¥Îã§.</p>

<p>ÎßåÏïΩ Í∑∏Ï†Ä Îç∞Ïù¥ÌÑ∞Î•º Ï≤òÏùåÎ∂ÄÌÑ∞ ‚ÄòÌïôÏäµÎç∞Ïù¥ÌÑ∞‚ÄôÏôÄ ‚ÄòÍ≤ÄÏ¶ùÎç∞Ïù¥ÌÑ∞‚ÄôÎ°ú ÎÇòÎààÎã§Î©¥ ÏïÑÎûòÏôÄ Í∞ôÏùÑ Í≤ÉÏù¥Îã§.<br />
<img src="/assets/images/source_19.png" width="60%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<p>Í∑∏Îü¨ÎÇò CVÎ•º Ïù¥Ïö©ÌïòÍ≤å ÎêòÎ©¥ ÏïÑÎûòÏôÄ Í∞ôÏù¥ ÌïôÏäµÎç∞Ïù¥ÌÑ∞ÏôÄ Í≤ÄÏ¶ùÎç∞Ïù¥ÌÑ∞Í∞Ä ÏàòÏãúÎ°ú Î∞îÎÄåÍ≤å ÎêòÎ©∞. Îçî <strong>‚ÄòÏùºÎ∞òÌôî‚Äô</strong> Îêú Î™®Îç∏ÏùÑ ÏñªÏùÑ Ïàò ÏûàÎã§.<br />
<img src="/assets/images/source_20.png" width="60%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<h2 id="Î¶øÏßÄ-ÌöåÍ∑Ä-ridge-regression">Î¶øÏßÄ ÌöåÍ∑Ä (Ridge regression)</h2>
<p>Í∞ÑÎã®ÌïòÍ≤å Ridge ÌöåÍ∑ÄÎäî Îã®ÏàúÌöåÍ∑ÄÎ≥¥Îã§ Îçî ÏùºÎ∞òÌôîÎêú Î™®Îç∏ÏùÑ ÎßåÎì†Îã§Í≥† Ïù¥Ìï¥Ìï¥ÎèÑ Ï¢ãÏùÑ ÎìØ ÌïòÎã§.<br />
Ï¶â, Îã®ÏàúÏÑ†ÌòïÌöåÍ∑ÄÏùò Í≥ºÏ†ÅÌï© Î∞©ÏßÄ Î™®Îç∏.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from sklearn.linear_model import RidgeCV

# ÏàòÌñâÌï¥Î≥º ÏïåÌåå Í∞íÎì§ÏùÑ Ï†ïÏùòÌïúÎã§.
alphas = [0.01, 0.05, 0.1, 0.2, 1.0, 10.0, 100.0]

# RidgeCV Î™®Îç∏ Í∞ùÏ≤¥Î•º Ï†ïÏùòÌïúÎã§.
ridge = RidgeCV(alphas=alphas, normalize=True, cv=3)
ridge.fit(ans[['x']], ans['y'])

#Í≤∞Ï†ïÎêú ÏïåÌååÏôÄ Î≤†Ïä§Ìä∏ Ïä§ÏΩîÏñ¥Î•º Ï∂úÎ†•.
print("alpha :", ridge.alpha_)
print("best score :", ridge.best_score_)

# ÏòàÏ∏°Ìï¥Î≥¥Í≥† Ïã∂ÏùÄ X_testÏóê ÎåÄÌï¥ y
y_pred = ridge.predict(X_test)
</code></pre></div></div>

<h2 id="Î°úÏßÄÏä§Ìã±-ÌöåÍ∑Ä-logistic-regression">Î°úÏßÄÏä§Ìã± ÌöåÍ∑Ä (logistic Regression)</h2>
<p>Î°úÏßÄÏä§Ìã± ÌöåÍ∑ÄÎäî sigmoidÎùºÎäî ‚ÄòÎπÑÏÑ†Ìòï‚ÄôÏùÑ ÏÇ¨Ïö©Ìïú ‚Äò2ÏßÑ Î∂ÑÎ•ò(classification)‚Äô Î™®Îç∏Ïù¥Îã§.</p>

<p>ÏòàÏãú ) ÌôòÏûêÎì§Ïùò ÏÉùÏ≤¥ Îç∞Ïù¥ÌÑ∞ + ÏïîÏóê Í±∏Î¶¨ÏßÄ ÏïäÏïòÎã§Î©¥ 0, Í±∏Î†∏Îã§Î©¥ 1ÏùÑ Í∞ñÎäî feature (target)</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from sklearn.linear_model import LogisticRegression

model = LogisticRegressionCV(penalty="l1", Cs=[1.0], solver='liblinear', cv=3)
model.fit(X, y)
# Ïó¨Í∏∞ÏÑú XÎäî Ïó¨Îü¨ featureÎ•º Í∞ñÍ≥† ÏûàÏùÑ Ïàò ÏûàÍ≥†,
# yÎäî 0Ïù¥ÎÇò 1Ïùò Í∞íÏùÑ Í∞ñÎäî featureÏùº Í≤ÉÏù¥Îã§!

# Ïä§ÏΩîÏñ¥ ÌîÑÎ¶∞Ìä∏
print('best score: ', model.scores_)

# ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏
y_pred = model.predict(X_test)
y_pred_proba = model.predict_proba(X_test) # probaÎäî y_predÎ•º Í≤∞Ï†ïÌñàÎçò Í∑ºÍ±∞Í∞Ä Îêú Í∞Å ÌôïÎ•†ÏùÑ Î≥¥Ïó¨Ï§ÄÎã§.

# Í≥ÑÏàò ÌôïÏù∏
coefficients = pd.Series(model.coef_[0], X.columns)
coefficients    # Í≥ÑÏàòÍ∞Ä -1Î∂ÄÌÑ∞ 1ÏÇ¨Ïù¥Ïùò Í∞íÏùÑ Í∞ñÎäîÎç∞ -1Ïóê Í∞ÄÍπåÏö¥ Í∞íÏùº ÏàòÎ°ù 0Ïù¥ ÎÇòÏò§Í≤å ÌïòÎäî featureÏûÑÏùÑ ÏùòÎØ∏
</code></pre></div></div>

<blockquote>
  <p>sigmoid</p>
</blockquote>

<p>xÍ∞íÏù¥ Ïñ¥Îñ§Í∞íÏù¥Îì†ÏßÄ, yÍ∞íÏùÄ 0Î∂ÄÌÑ∞ 1ÏÇ¨Ïù¥Ïùò Í∞íÏùÑ ÎπÑÏÑ†ÌòïÏúºÎ°ú Í∞ñÎèÑÎ°ù ÌïòÎäî Ìï®Ïàò
<img src="/assets/images/source_21.png" width="60%" height="60%" title="Ï†úÎ™©" alt="ÏïÑÎ¨¥Í±∞ÎÇò" /></p>

<blockquote>
  <p>ÏûÑÍ≥ÑÍ∞í (Classification Threshold)</p>
</blockquote>

<p>ÏûÑÍ≥ÑÍ∞íÏù¥ Î°úÏßÄÏä§Ìã± ÌöåÍ∑ÄÏóêÏÑú Îì±Ïû•ÌñàÎäîÎç∞,<br />
Ïñ¥Îñ§ Îç∞Ïù¥ÌÑ∞ ÌïòÎÇòÍ∞Ä AÏóê ÏÜçÌï† ÌôïÎ•†Ïù¥ 0.41Ïù¥ ÎÇòÏôîÎã§Í≥† ÌñàÏùÑÎïå,<br />
ÏûÑÍ≥ÑÍ∞íÏù¥ 0.5(default)ÎùºÎ©¥ ÎãπÏó∞Ìûà ‚ÄòAÍ∞Ä ÏïÑÎãàÎã§‚Äô ÎùºÍ≥† ÌïòÍ≤†ÏßÄÎßå,<br />
ÏûÑÍ≥ÑÍ∞íÏùÑ 0.4ÏúºÎ°ú Ï°∞Ï†ïÌïúÎã§Î©¥ ‚ÄòA Ïù¥Îã§‚Äô ÎùºÍ≥† ÌåêÎã®ÏùÑ ÎÇ¥Î¶¨Í≤å ÎêúÎã§.</p>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>üåú Í∞úÏù∏ Í≥µÎ∂Ä Í∏∞Î°ùÏö© Î∏îÎ°úÍ∑∏ÏûÖÎãàÎã§. Ïò§Î•òÎÇò ÌãÄÎ¶∞ Î∂ÄÎ∂ÑÏù¥ ÏûàÏùÑ Í≤ΩÏö∞
Ïñ∏Ï†úÎì†ÏßÄ ÎåìÍ∏Ä ÌòπÏùÄ Î©îÏùºÎ°ú ÏßÄÏ†ÅÌï¥Ï£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§! üòÑ
</code></pre></div></div>

<p><a href="#" class="btn btn--primary align-right">Îß® ÏúÑÎ°ú Ïù¥ÎèôÌïòÍ∏∞</a></p>]]></content><author><name>ÏòπÎã¨ÏÉòüë±üèº‚Äç‚ôÇÔ∏è</name></author><category term="ds" /><summary type="html"><![CDATA[CV (ÍµêÏ∞® Í≤ÄÏ¶ù, cross validation) Î®ºÏ†Ä Îç∞Ïù¥ÌÑ∞ÎùºÍ≥† ÌïòÎ©¥ Ïö©ÎèÑÏóê Îî∞Îùº 3Í∞ÄÏßÄÎ°ú Î∂ÑÎ•òÌï† Ïàò ÏûàÎã§. ÌïôÏäµÎç∞Ïù¥ÌÑ∞(training_data), Í≤ÄÏ¶ùÎç∞Ïù¥ÌÑ∞(validation_data), ÌÖåÏä§Ìä∏Îç∞Ïù¥ÌÑ∞(test_data)]]></summary></entry></feed>